
Project_2_StopWatch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002ae4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002ae4  00002b78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800068  00800068  00002b80  2**0
                  ALLOC
  3 .stab         00001524  00000000  00000000  00002b80  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000080f  00000000  00000000  000040a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  000048b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000018f  00000000  00000000  00004a13  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002045  00000000  00000000  00004ba2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001101  00000000  00000000  00006be7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f82  00000000  00000000  00007ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  00008c6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c2  00000000  00000000  00008dec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000088e  00000000  00000000  000090ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000993c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 c1 06 	jmp	0xd82	; 0xd82 <__vector_1>
       8:	0c 94 df 06 	jmp	0xdbe	; 0xdbe <__vector_2>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 4f 06 	jmp	0xc9e	; 0xc9e <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 00 07 	jmp	0xe00	; 0xe00 <__vector_18>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	af 36       	cpi	r26, 0x6F	; 111
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e4 ee       	ldi	r30, 0xE4	; 228
      78:	fa e2       	ldi	r31, 0x2A	; 42
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 a3 07 	call	0xf46	; 0xf46 <main>
      8a:	0c 94 70 15 	jmp	0x2ae0	; 0x2ae0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 39 15 	jmp	0x2a72	; 0x2a72 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 55 15 	jmp	0x2aaa	; 0x2aaa <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 45 15 	jmp	0x2a8a	; 0x2a8a <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 61 15 	jmp	0x2ac2	; 0x2ac2 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 45 15 	jmp	0x2a8a	; 0x2a8a <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 61 15 	jmp	0x2ac2	; 0x2ac2 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 39 15 	jmp	0x2a72	; 0x2a72 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__stack+0x3f>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__stack+0x55>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__stack+0x2d>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__stack+0x3f>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__stack+0x35>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__stack+0x3b>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__stack+0x55>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__stack+0x1c7>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__stack+0x51>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__stack+0x1c7>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__stack+0x67>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__stack+0x1c7>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__stack+0xd3>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__stack+0xc7>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__stack+0xef>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__stack+0x109>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__stack+0x8f>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__stack+0x14d>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__stack+0x141>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__stack+0x11f>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__stack+0x16b>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__stack+0x153>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__stack+0x1ad>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__stack+0x1ad>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__stack+0x1ad>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__stack+0x1b7>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 55 15 	jmp	0x2aaa	; 0x2aaa <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 41 15 	jmp	0x2a82	; 0x2a82 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 5d 15 	jmp	0x2aba	; 0x2aba <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 45 15 	jmp	0x2a8a	; 0x2a8a <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 61 15 	jmp	0x2ac2	; 0x2ac2 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 45 15 	jmp	0x2a8a	; 0x2a8a <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 61 15 	jmp	0x2ac2	; 0x2ac2 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 45 15 	jmp	0x2a8a	; 0x2a8a <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__ltsf2+0x56>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__ltsf2+0x56>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__ltsf2+0x58>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 61 15 	jmp	0x2ac2	; 0x2ac2 <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 49 15 	jmp	0x2a92	; 0x2a92 <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 65 15 	jmp	0x2aca	; 0x2aca <__epilogue_restores__+0x20>

00000952 <__pack_f>:
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	fc 01       	movw	r30, r24
     95e:	e4 80       	ldd	r14, Z+4	; 0x04
     960:	f5 80       	ldd	r15, Z+5	; 0x05
     962:	06 81       	ldd	r16, Z+6	; 0x06
     964:	17 81       	ldd	r17, Z+7	; 0x07
     966:	d1 80       	ldd	r13, Z+1	; 0x01
     968:	80 81       	ld	r24, Z
     96a:	82 30       	cpi	r24, 0x02	; 2
     96c:	48 f4       	brcc	.+18     	; 0x980 <__pack_f+0x2e>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	a0 e1       	ldi	r26, 0x10	; 16
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	e8 2a       	or	r14, r24
     978:	f9 2a       	or	r15, r25
     97a:	0a 2b       	or	r16, r26
     97c:	1b 2b       	or	r17, r27
     97e:	a5 c0       	rjmp	.+330    	; 0xaca <__pack_f+0x178>
     980:	84 30       	cpi	r24, 0x04	; 4
     982:	09 f4       	brne	.+2      	; 0x986 <__pack_f+0x34>
     984:	9f c0       	rjmp	.+318    	; 0xac4 <__pack_f+0x172>
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	21 f4       	brne	.+8      	; 0x992 <__pack_f+0x40>
     98a:	ee 24       	eor	r14, r14
     98c:	ff 24       	eor	r15, r15
     98e:	87 01       	movw	r16, r14
     990:	05 c0       	rjmp	.+10     	; 0x99c <__pack_f+0x4a>
     992:	e1 14       	cp	r14, r1
     994:	f1 04       	cpc	r15, r1
     996:	01 05       	cpc	r16, r1
     998:	11 05       	cpc	r17, r1
     99a:	19 f4       	brne	.+6      	; 0x9a2 <__pack_f+0x50>
     99c:	e0 e0       	ldi	r30, 0x00	; 0
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	96 c0       	rjmp	.+300    	; 0xace <__pack_f+0x17c>
     9a2:	62 81       	ldd	r22, Z+2	; 0x02
     9a4:	73 81       	ldd	r23, Z+3	; 0x03
     9a6:	9f ef       	ldi	r25, 0xFF	; 255
     9a8:	62 38       	cpi	r22, 0x82	; 130
     9aa:	79 07       	cpc	r23, r25
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <__pack_f+0x5e>
     9ae:	5b c0       	rjmp	.+182    	; 0xa66 <__pack_f+0x114>
     9b0:	22 e8       	ldi	r18, 0x82	; 130
     9b2:	3f ef       	ldi	r19, 0xFF	; 255
     9b4:	26 1b       	sub	r18, r22
     9b6:	37 0b       	sbc	r19, r23
     9b8:	2a 31       	cpi	r18, 0x1A	; 26
     9ba:	31 05       	cpc	r19, r1
     9bc:	2c f0       	brlt	.+10     	; 0x9c8 <__pack_f+0x76>
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	40 e0       	ldi	r20, 0x00	; 0
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	2a c0       	rjmp	.+84     	; 0xa1c <__pack_f+0xca>
     9c8:	b8 01       	movw	r22, r16
     9ca:	a7 01       	movw	r20, r14
     9cc:	02 2e       	mov	r0, r18
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__pack_f+0x86>
     9d0:	76 95       	lsr	r23
     9d2:	67 95       	ror	r22
     9d4:	57 95       	ror	r21
     9d6:	47 95       	ror	r20
     9d8:	0a 94       	dec	r0
     9da:	d2 f7       	brpl	.-12     	; 0x9d0 <__pack_f+0x7e>
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	a0 e0       	ldi	r26, 0x00	; 0
     9e2:	b0 e0       	ldi	r27, 0x00	; 0
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__pack_f+0x9c>
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	aa 1f       	adc	r26, r26
     9ec:	bb 1f       	adc	r27, r27
     9ee:	2a 95       	dec	r18
     9f0:	d2 f7       	brpl	.-12     	; 0x9e6 <__pack_f+0x94>
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	a1 09       	sbc	r26, r1
     9f6:	b1 09       	sbc	r27, r1
     9f8:	8e 21       	and	r24, r14
     9fa:	9f 21       	and	r25, r15
     9fc:	a0 23       	and	r26, r16
     9fe:	b1 23       	and	r27, r17
     a00:	00 97       	sbiw	r24, 0x00	; 0
     a02:	a1 05       	cpc	r26, r1
     a04:	b1 05       	cpc	r27, r1
     a06:	21 f0       	breq	.+8      	; 0xa10 <__pack_f+0xbe>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	a0 e0       	ldi	r26, 0x00	; 0
     a0e:	b0 e0       	ldi	r27, 0x00	; 0
     a10:	9a 01       	movw	r18, r20
     a12:	ab 01       	movw	r20, r22
     a14:	28 2b       	or	r18, r24
     a16:	39 2b       	or	r19, r25
     a18:	4a 2b       	or	r20, r26
     a1a:	5b 2b       	or	r21, r27
     a1c:	da 01       	movw	r26, r20
     a1e:	c9 01       	movw	r24, r18
     a20:	8f 77       	andi	r24, 0x7F	; 127
     a22:	90 70       	andi	r25, 0x00	; 0
     a24:	a0 70       	andi	r26, 0x00	; 0
     a26:	b0 70       	andi	r27, 0x00	; 0
     a28:	80 34       	cpi	r24, 0x40	; 64
     a2a:	91 05       	cpc	r25, r1
     a2c:	a1 05       	cpc	r26, r1
     a2e:	b1 05       	cpc	r27, r1
     a30:	39 f4       	brne	.+14     	; 0xa40 <__pack_f+0xee>
     a32:	27 ff       	sbrs	r18, 7
     a34:	09 c0       	rjmp	.+18     	; 0xa48 <__pack_f+0xf6>
     a36:	20 5c       	subi	r18, 0xC0	; 192
     a38:	3f 4f       	sbci	r19, 0xFF	; 255
     a3a:	4f 4f       	sbci	r20, 0xFF	; 255
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <__pack_f+0xf6>
     a40:	21 5c       	subi	r18, 0xC1	; 193
     a42:	3f 4f       	sbci	r19, 0xFF	; 255
     a44:	4f 4f       	sbci	r20, 0xFF	; 255
     a46:	5f 4f       	sbci	r21, 0xFF	; 255
     a48:	e0 e0       	ldi	r30, 0x00	; 0
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	20 30       	cpi	r18, 0x00	; 0
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	3a 07       	cpc	r19, r26
     a52:	a0 e0       	ldi	r26, 0x00	; 0
     a54:	4a 07       	cpc	r20, r26
     a56:	a0 e4       	ldi	r26, 0x40	; 64
     a58:	5a 07       	cpc	r21, r26
     a5a:	10 f0       	brcs	.+4      	; 0xa60 <__pack_f+0x10e>
     a5c:	e1 e0       	ldi	r30, 0x01	; 1
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	79 01       	movw	r14, r18
     a62:	8a 01       	movw	r16, r20
     a64:	27 c0       	rjmp	.+78     	; 0xab4 <__pack_f+0x162>
     a66:	60 38       	cpi	r22, 0x80	; 128
     a68:	71 05       	cpc	r23, r1
     a6a:	64 f5       	brge	.+88     	; 0xac4 <__pack_f+0x172>
     a6c:	fb 01       	movw	r30, r22
     a6e:	e1 58       	subi	r30, 0x81	; 129
     a70:	ff 4f       	sbci	r31, 0xFF	; 255
     a72:	d8 01       	movw	r26, r16
     a74:	c7 01       	movw	r24, r14
     a76:	8f 77       	andi	r24, 0x7F	; 127
     a78:	90 70       	andi	r25, 0x00	; 0
     a7a:	a0 70       	andi	r26, 0x00	; 0
     a7c:	b0 70       	andi	r27, 0x00	; 0
     a7e:	80 34       	cpi	r24, 0x40	; 64
     a80:	91 05       	cpc	r25, r1
     a82:	a1 05       	cpc	r26, r1
     a84:	b1 05       	cpc	r27, r1
     a86:	39 f4       	brne	.+14     	; 0xa96 <__pack_f+0x144>
     a88:	e7 fe       	sbrs	r14, 7
     a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <__pack_f+0x154>
     a8c:	80 e4       	ldi	r24, 0x40	; 64
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	a0 e0       	ldi	r26, 0x00	; 0
     a92:	b0 e0       	ldi	r27, 0x00	; 0
     a94:	04 c0       	rjmp	.+8      	; 0xa9e <__pack_f+0x14c>
     a96:	8f e3       	ldi	r24, 0x3F	; 63
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e8 0e       	add	r14, r24
     aa0:	f9 1e       	adc	r15, r25
     aa2:	0a 1f       	adc	r16, r26
     aa4:	1b 1f       	adc	r17, r27
     aa6:	17 ff       	sbrs	r17, 7
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <__pack_f+0x162>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	31 96       	adiw	r30, 0x01	; 1
     ab4:	87 e0       	ldi	r24, 0x07	; 7
     ab6:	16 95       	lsr	r17
     ab8:	07 95       	ror	r16
     aba:	f7 94       	ror	r15
     abc:	e7 94       	ror	r14
     abe:	8a 95       	dec	r24
     ac0:	d1 f7       	brne	.-12     	; 0xab6 <__pack_f+0x164>
     ac2:	05 c0       	rjmp	.+10     	; 0xace <__pack_f+0x17c>
     ac4:	ee 24       	eor	r14, r14
     ac6:	ff 24       	eor	r15, r15
     ac8:	87 01       	movw	r16, r14
     aca:	ef ef       	ldi	r30, 0xFF	; 255
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	6e 2f       	mov	r22, r30
     ad0:	67 95       	ror	r22
     ad2:	66 27       	eor	r22, r22
     ad4:	67 95       	ror	r22
     ad6:	90 2f       	mov	r25, r16
     ad8:	9f 77       	andi	r25, 0x7F	; 127
     ada:	d7 94       	ror	r13
     adc:	dd 24       	eor	r13, r13
     ade:	d7 94       	ror	r13
     ae0:	8e 2f       	mov	r24, r30
     ae2:	86 95       	lsr	r24
     ae4:	49 2f       	mov	r20, r25
     ae6:	46 2b       	or	r20, r22
     ae8:	58 2f       	mov	r21, r24
     aea:	5d 29       	or	r21, r13
     aec:	b7 01       	movw	r22, r14
     aee:	ca 01       	movw	r24, r20
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	ff 90       	pop	r15
     af6:	ef 90       	pop	r14
     af8:	df 90       	pop	r13
     afa:	08 95       	ret

00000afc <__unpack_f>:
     afc:	fc 01       	movw	r30, r24
     afe:	db 01       	movw	r26, r22
     b00:	40 81       	ld	r20, Z
     b02:	51 81       	ldd	r21, Z+1	; 0x01
     b04:	22 81       	ldd	r18, Z+2	; 0x02
     b06:	62 2f       	mov	r22, r18
     b08:	6f 77       	andi	r22, 0x7F	; 127
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	22 1f       	adc	r18, r18
     b0e:	22 27       	eor	r18, r18
     b10:	22 1f       	adc	r18, r18
     b12:	93 81       	ldd	r25, Z+3	; 0x03
     b14:	89 2f       	mov	r24, r25
     b16:	88 0f       	add	r24, r24
     b18:	82 2b       	or	r24, r18
     b1a:	28 2f       	mov	r18, r24
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	99 1f       	adc	r25, r25
     b20:	99 27       	eor	r25, r25
     b22:	99 1f       	adc	r25, r25
     b24:	11 96       	adiw	r26, 0x01	; 1
     b26:	9c 93       	st	X, r25
     b28:	11 97       	sbiw	r26, 0x01	; 1
     b2a:	21 15       	cp	r18, r1
     b2c:	31 05       	cpc	r19, r1
     b2e:	a9 f5       	brne	.+106    	; 0xb9a <__unpack_f+0x9e>
     b30:	41 15       	cp	r20, r1
     b32:	51 05       	cpc	r21, r1
     b34:	61 05       	cpc	r22, r1
     b36:	71 05       	cpc	r23, r1
     b38:	11 f4       	brne	.+4      	; 0xb3e <__unpack_f+0x42>
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	37 c0       	rjmp	.+110    	; 0xbac <__unpack_f+0xb0>
     b3e:	82 e8       	ldi	r24, 0x82	; 130
     b40:	9f ef       	ldi	r25, 0xFF	; 255
     b42:	13 96       	adiw	r26, 0x03	; 3
     b44:	9c 93       	st	X, r25
     b46:	8e 93       	st	-X, r24
     b48:	12 97       	sbiw	r26, 0x02	; 2
     b4a:	9a 01       	movw	r18, r20
     b4c:	ab 01       	movw	r20, r22
     b4e:	67 e0       	ldi	r22, 0x07	; 7
     b50:	22 0f       	add	r18, r18
     b52:	33 1f       	adc	r19, r19
     b54:	44 1f       	adc	r20, r20
     b56:	55 1f       	adc	r21, r21
     b58:	6a 95       	dec	r22
     b5a:	d1 f7       	brne	.-12     	; 0xb50 <__unpack_f+0x54>
     b5c:	83 e0       	ldi	r24, 0x03	; 3
     b5e:	8c 93       	st	X, r24
     b60:	0d c0       	rjmp	.+26     	; 0xb7c <__unpack_f+0x80>
     b62:	22 0f       	add	r18, r18
     b64:	33 1f       	adc	r19, r19
     b66:	44 1f       	adc	r20, r20
     b68:	55 1f       	adc	r21, r21
     b6a:	12 96       	adiw	r26, 0x02	; 2
     b6c:	8d 91       	ld	r24, X+
     b6e:	9c 91       	ld	r25, X
     b70:	13 97       	sbiw	r26, 0x03	; 3
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	13 96       	adiw	r26, 0x03	; 3
     b76:	9c 93       	st	X, r25
     b78:	8e 93       	st	-X, r24
     b7a:	12 97       	sbiw	r26, 0x02	; 2
     b7c:	20 30       	cpi	r18, 0x00	; 0
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	38 07       	cpc	r19, r24
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	48 07       	cpc	r20, r24
     b86:	80 e4       	ldi	r24, 0x40	; 64
     b88:	58 07       	cpc	r21, r24
     b8a:	58 f3       	brcs	.-42     	; 0xb62 <__unpack_f+0x66>
     b8c:	14 96       	adiw	r26, 0x04	; 4
     b8e:	2d 93       	st	X+, r18
     b90:	3d 93       	st	X+, r19
     b92:	4d 93       	st	X+, r20
     b94:	5c 93       	st	X, r21
     b96:	17 97       	sbiw	r26, 0x07	; 7
     b98:	08 95       	ret
     b9a:	2f 3f       	cpi	r18, 0xFF	; 255
     b9c:	31 05       	cpc	r19, r1
     b9e:	79 f4       	brne	.+30     	; 0xbbe <__unpack_f+0xc2>
     ba0:	41 15       	cp	r20, r1
     ba2:	51 05       	cpc	r21, r1
     ba4:	61 05       	cpc	r22, r1
     ba6:	71 05       	cpc	r23, r1
     ba8:	19 f4       	brne	.+6      	; 0xbb0 <__unpack_f+0xb4>
     baa:	84 e0       	ldi	r24, 0x04	; 4
     bac:	8c 93       	st	X, r24
     bae:	08 95       	ret
     bb0:	64 ff       	sbrs	r22, 4
     bb2:	03 c0       	rjmp	.+6      	; 0xbba <__unpack_f+0xbe>
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	8c 93       	st	X, r24
     bb8:	12 c0       	rjmp	.+36     	; 0xbde <__unpack_f+0xe2>
     bba:	1c 92       	st	X, r1
     bbc:	10 c0       	rjmp	.+32     	; 0xbde <__unpack_f+0xe2>
     bbe:	2f 57       	subi	r18, 0x7F	; 127
     bc0:	30 40       	sbci	r19, 0x00	; 0
     bc2:	13 96       	adiw	r26, 0x03	; 3
     bc4:	3c 93       	st	X, r19
     bc6:	2e 93       	st	-X, r18
     bc8:	12 97       	sbiw	r26, 0x02	; 2
     bca:	83 e0       	ldi	r24, 0x03	; 3
     bcc:	8c 93       	st	X, r24
     bce:	87 e0       	ldi	r24, 0x07	; 7
     bd0:	44 0f       	add	r20, r20
     bd2:	55 1f       	adc	r21, r21
     bd4:	66 1f       	adc	r22, r22
     bd6:	77 1f       	adc	r23, r23
     bd8:	8a 95       	dec	r24
     bda:	d1 f7       	brne	.-12     	; 0xbd0 <__unpack_f+0xd4>
     bdc:	70 64       	ori	r23, 0x40	; 64
     bde:	14 96       	adiw	r26, 0x04	; 4
     be0:	4d 93       	st	X+, r20
     be2:	5d 93       	st	X+, r21
     be4:	6d 93       	st	X+, r22
     be6:	7c 93       	st	X, r23
     be8:	17 97       	sbiw	r26, 0x07	; 7
     bea:	08 95       	ret

00000bec <__fpcmp_parts_f>:
     bec:	1f 93       	push	r17
     bee:	dc 01       	movw	r26, r24
     bf0:	fb 01       	movw	r30, r22
     bf2:	9c 91       	ld	r25, X
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	08 f4       	brcc	.+2      	; 0xbfa <__fpcmp_parts_f+0xe>
     bf8:	47 c0       	rjmp	.+142    	; 0xc88 <__fpcmp_parts_f+0x9c>
     bfa:	80 81       	ld	r24, Z
     bfc:	82 30       	cpi	r24, 0x02	; 2
     bfe:	08 f4       	brcc	.+2      	; 0xc02 <__fpcmp_parts_f+0x16>
     c00:	43 c0       	rjmp	.+134    	; 0xc88 <__fpcmp_parts_f+0x9c>
     c02:	94 30       	cpi	r25, 0x04	; 4
     c04:	51 f4       	brne	.+20     	; 0xc1a <__fpcmp_parts_f+0x2e>
     c06:	11 96       	adiw	r26, 0x01	; 1
     c08:	1c 91       	ld	r17, X
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	99 f5       	brne	.+102    	; 0xc74 <__fpcmp_parts_f+0x88>
     c0e:	81 81       	ldd	r24, Z+1	; 0x01
     c10:	68 2f       	mov	r22, r24
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	61 1b       	sub	r22, r17
     c16:	71 09       	sbc	r23, r1
     c18:	3f c0       	rjmp	.+126    	; 0xc98 <__fpcmp_parts_f+0xac>
     c1a:	84 30       	cpi	r24, 0x04	; 4
     c1c:	21 f0       	breq	.+8      	; 0xc26 <__fpcmp_parts_f+0x3a>
     c1e:	92 30       	cpi	r25, 0x02	; 2
     c20:	31 f4       	brne	.+12     	; 0xc2e <__fpcmp_parts_f+0x42>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	b9 f1       	breq	.+110    	; 0xc94 <__fpcmp_parts_f+0xa8>
     c26:	81 81       	ldd	r24, Z+1	; 0x01
     c28:	88 23       	and	r24, r24
     c2a:	89 f1       	breq	.+98     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c2c:	2d c0       	rjmp	.+90     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	11 97       	sbiw	r26, 0x01	; 1
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	f1 f0       	breq	.+60     	; 0xc74 <__fpcmp_parts_f+0x88>
     c38:	81 81       	ldd	r24, Z+1	; 0x01
     c3a:	18 17       	cp	r17, r24
     c3c:	d9 f4       	brne	.+54     	; 0xc74 <__fpcmp_parts_f+0x88>
     c3e:	12 96       	adiw	r26, 0x02	; 2
     c40:	2d 91       	ld	r18, X+
     c42:	3c 91       	ld	r19, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	82 81       	ldd	r24, Z+2	; 0x02
     c48:	93 81       	ldd	r25, Z+3	; 0x03
     c4a:	82 17       	cp	r24, r18
     c4c:	93 07       	cpc	r25, r19
     c4e:	94 f0       	brlt	.+36     	; 0xc74 <__fpcmp_parts_f+0x88>
     c50:	28 17       	cp	r18, r24
     c52:	39 07       	cpc	r19, r25
     c54:	bc f0       	brlt	.+46     	; 0xc84 <__fpcmp_parts_f+0x98>
     c56:	14 96       	adiw	r26, 0x04	; 4
     c58:	8d 91       	ld	r24, X+
     c5a:	9d 91       	ld	r25, X+
     c5c:	0d 90       	ld	r0, X+
     c5e:	bc 91       	ld	r27, X
     c60:	a0 2d       	mov	r26, r0
     c62:	24 81       	ldd	r18, Z+4	; 0x04
     c64:	35 81       	ldd	r19, Z+5	; 0x05
     c66:	46 81       	ldd	r20, Z+6	; 0x06
     c68:	57 81       	ldd	r21, Z+7	; 0x07
     c6a:	28 17       	cp	r18, r24
     c6c:	39 07       	cpc	r19, r25
     c6e:	4a 07       	cpc	r20, r26
     c70:	5b 07       	cpc	r21, r27
     c72:	18 f4       	brcc	.+6      	; 0xc7a <__fpcmp_parts_f+0x8e>
     c74:	11 23       	and	r17, r17
     c76:	41 f0       	breq	.+16     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c78:	0a c0       	rjmp	.+20     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c7a:	82 17       	cp	r24, r18
     c7c:	93 07       	cpc	r25, r19
     c7e:	a4 07       	cpc	r26, r20
     c80:	b5 07       	cpc	r27, r21
     c82:	40 f4       	brcc	.+16     	; 0xc94 <__fpcmp_parts_f+0xa8>
     c84:	11 23       	and	r17, r17
     c86:	19 f0       	breq	.+6      	; 0xc8e <__fpcmp_parts_f+0xa2>
     c88:	61 e0       	ldi	r22, 0x01	; 1
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <__fpcmp_parts_f+0xac>
     c8e:	6f ef       	ldi	r22, 0xFF	; 255
     c90:	7f ef       	ldi	r23, 0xFF	; 255
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <__fpcmp_parts_f+0xac>
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	cb 01       	movw	r24, r22
     c9a:	1f 91       	pop	r17
     c9c:	08 95       	ret

00000c9e <__vector_6>:
unsigned char HOUR0 = 0;
unsigned char HOUR1 = 0;


ISR(TIMER1_COMPA_vect)
{
     c9e:	1f 92       	push	r1
     ca0:	0f 92       	push	r0
     ca2:	0f b6       	in	r0, 0x3f	; 63
     ca4:	0f 92       	push	r0
     ca6:	11 24       	eor	r1, r1
     ca8:	8f 93       	push	r24
     caa:	af 93       	push	r26
     cac:	bf 93       	push	r27
     cae:	ef 93       	push	r30
     cb0:	ff 93       	push	r31
     cb2:	df 93       	push	r29
     cb4:	cf 93       	push	r28
     cb6:	cd b7       	in	r28, 0x3d	; 61
     cb8:	de b7       	in	r29, 0x3e	; 62
	tick++;
     cba:	80 91 68 00 	lds	r24, 0x0068
     cbe:	8f 5f       	subi	r24, 0xFF	; 255
     cc0:	80 93 68 00 	sts	0x0068, r24
	if(tick == 10)
     cc4:	80 91 68 00 	lds	r24, 0x0068
     cc8:	8a 30       	cpi	r24, 0x0A	; 10
     cca:	09 f0       	breq	.+2      	; 0xcce <__vector_6+0x30>
     ccc:	49 c0       	rjmp	.+146    	; 0xd60 <__vector_6+0xc2>
	{
		PORTC &= 0xF0;
     cce:	a5 e3       	ldi	r26, 0x35	; 53
     cd0:	b0 e0       	ldi	r27, 0x00	; 0
     cd2:	e5 e3       	ldi	r30, 0x35	; 53
     cd4:	f0 e0       	ldi	r31, 0x00	; 0
     cd6:	80 81       	ld	r24, Z
     cd8:	80 7f       	andi	r24, 0xF0	; 240
     cda:	8c 93       	st	X, r24
		SEC0 = 0;
     cdc:	10 92 69 00 	sts	0x0069, r1
		tick = 0;
     ce0:	10 92 68 00 	sts	0x0068, r1
		SEC1++;
     ce4:	80 91 6a 00 	lds	r24, 0x006A
     ce8:	8f 5f       	subi	r24, 0xFF	; 255
     cea:	80 93 6a 00 	sts	0x006A, r24
		if(SEC1==6)
     cee:	80 91 6a 00 	lds	r24, 0x006A
     cf2:	86 30       	cpi	r24, 0x06	; 6
     cf4:	39 f4       	brne	.+14     	; 0xd04 <__vector_6+0x66>
		{
			SEC1=0;
     cf6:	10 92 6a 00 	sts	0x006A, r1
			MIN0++;
     cfa:	80 91 6b 00 	lds	r24, 0x006B
     cfe:	8f 5f       	subi	r24, 0xFF	; 255
     d00:	80 93 6b 00 	sts	0x006B, r24
		}
		if(MIN0 == 10)
     d04:	80 91 6b 00 	lds	r24, 0x006B
     d08:	8a 30       	cpi	r24, 0x0A	; 10
     d0a:	49 f4       	brne	.+18     	; 0xd1e <__vector_6+0x80>
		{
			SEC1=0;
     d0c:	10 92 6a 00 	sts	0x006A, r1
			MIN0=0;
     d10:	10 92 6b 00 	sts	0x006B, r1
			MIN1++;
     d14:	80 91 6c 00 	lds	r24, 0x006C
     d18:	8f 5f       	subi	r24, 0xFF	; 255
     d1a:	80 93 6c 00 	sts	0x006C, r24
		}
		if(MIN1 == 6)
     d1e:	80 91 6c 00 	lds	r24, 0x006C
     d22:	86 30       	cpi	r24, 0x06	; 6
     d24:	59 f4       	brne	.+22     	; 0xd3c <__vector_6+0x9e>
		{
			SEC1=0;
     d26:	10 92 6a 00 	sts	0x006A, r1
			MIN0=0;
     d2a:	10 92 6b 00 	sts	0x006B, r1
			MIN1=0;
     d2e:	10 92 6c 00 	sts	0x006C, r1
			HOUR0++;
     d32:	80 91 6d 00 	lds	r24, 0x006D
     d36:	8f 5f       	subi	r24, 0xFF	; 255
     d38:	80 93 6d 00 	sts	0x006D, r24
		}
		if(HOUR0 == 10)
     d3c:	80 91 6d 00 	lds	r24, 0x006D
     d40:	8a 30       	cpi	r24, 0x0A	; 10
     d42:	99 f4       	brne	.+38     	; 0xd6a <__vector_6+0xcc>
		{
			SEC1=0;
     d44:	10 92 6a 00 	sts	0x006A, r1
			MIN0=0;
     d48:	10 92 6b 00 	sts	0x006B, r1
			MIN1=0;
     d4c:	10 92 6c 00 	sts	0x006C, r1
			HOUR0=0;
     d50:	10 92 6d 00 	sts	0x006D, r1
			HOUR1++;
     d54:	80 91 6e 00 	lds	r24, 0x006E
     d58:	8f 5f       	subi	r24, 0xFF	; 255
     d5a:	80 93 6e 00 	sts	0x006E, r24
     d5e:	05 c0       	rjmp	.+10     	; 0xd6a <__vector_6+0xcc>


	}
	else
	{
		SEC0++;
     d60:	80 91 69 00 	lds	r24, 0x0069
     d64:	8f 5f       	subi	r24, 0xFF	; 255
     d66:	80 93 69 00 	sts	0x0069, r24
	}
}
     d6a:	cf 91       	pop	r28
     d6c:	df 91       	pop	r29
     d6e:	ff 91       	pop	r31
     d70:	ef 91       	pop	r30
     d72:	bf 91       	pop	r27
     d74:	af 91       	pop	r26
     d76:	8f 91       	pop	r24
     d78:	0f 90       	pop	r0
     d7a:	0f be       	out	0x3f, r0	; 63
     d7c:	0f 90       	pop	r0
     d7e:	1f 90       	pop	r1
     d80:	18 95       	reti

00000d82 <__vector_1>:

ISR(INT0_vect)
{
     d82:	1f 92       	push	r1
     d84:	0f 92       	push	r0
     d86:	0f b6       	in	r0, 0x3f	; 63
     d88:	0f 92       	push	r0
     d8a:	11 24       	eor	r1, r1
     d8c:	df 93       	push	r29
     d8e:	cf 93       	push	r28
     d90:	cd b7       	in	r28, 0x3d	; 61
     d92:	de b7       	in	r29, 0x3e	; 62
	SEC0=0, SEC1=0, MIN0=0, MIN1=0, HOUR0=0, HOUR1=0, tick =0;
     d94:	10 92 69 00 	sts	0x0069, r1
     d98:	10 92 6a 00 	sts	0x006A, r1
     d9c:	10 92 6b 00 	sts	0x006B, r1
     da0:	10 92 6c 00 	sts	0x006C, r1
     da4:	10 92 6d 00 	sts	0x006D, r1
     da8:	10 92 6e 00 	sts	0x006E, r1
     dac:	10 92 68 00 	sts	0x0068, r1
}
     db0:	cf 91       	pop	r28
     db2:	df 91       	pop	r29
     db4:	0f 90       	pop	r0
     db6:	0f be       	out	0x3f, r0	; 63
     db8:	0f 90       	pop	r0
     dba:	1f 90       	pop	r1
     dbc:	18 95       	reti

00000dbe <__vector_2>:
ISR(INT1_vect)
{
     dbe:	1f 92       	push	r1
     dc0:	0f 92       	push	r0
     dc2:	0f b6       	in	r0, 0x3f	; 63
     dc4:	0f 92       	push	r0
     dc6:	11 24       	eor	r1, r1
     dc8:	8f 93       	push	r24
     dca:	af 93       	push	r26
     dcc:	bf 93       	push	r27
     dce:	ef 93       	push	r30
     dd0:	ff 93       	push	r31
     dd2:	df 93       	push	r29
     dd4:	cf 93       	push	r28
     dd6:	cd b7       	in	r28, 0x3d	; 61
     dd8:	de b7       	in	r29, 0x3e	; 62
	TCCR1B &= ~(1 << CS10) & ~(1 << CS11) & ~(1 << CS12);
     dda:	ae e4       	ldi	r26, 0x4E	; 78
     ddc:	b0 e0       	ldi	r27, 0x00	; 0
     dde:	ee e4       	ldi	r30, 0x4E	; 78
     de0:	f0 e0       	ldi	r31, 0x00	; 0
     de2:	80 81       	ld	r24, Z
     de4:	88 7f       	andi	r24, 0xF8	; 248
     de6:	8c 93       	st	X, r24
}
     de8:	cf 91       	pop	r28
     dea:	df 91       	pop	r29
     dec:	ff 91       	pop	r31
     dee:	ef 91       	pop	r30
     df0:	bf 91       	pop	r27
     df2:	af 91       	pop	r26
     df4:	8f 91       	pop	r24
     df6:	0f 90       	pop	r0
     df8:	0f be       	out	0x3f, r0	; 63
     dfa:	0f 90       	pop	r0
     dfc:	1f 90       	pop	r1
     dfe:	18 95       	reti

00000e00 <__vector_18>:
ISR(INT2_vect)
{
     e00:	1f 92       	push	r1
     e02:	0f 92       	push	r0
     e04:	0f b6       	in	r0, 0x3f	; 63
     e06:	0f 92       	push	r0
     e08:	11 24       	eor	r1, r1
     e0a:	8f 93       	push	r24
     e0c:	af 93       	push	r26
     e0e:	bf 93       	push	r27
     e10:	ef 93       	push	r30
     e12:	ff 93       	push	r31
     e14:	df 93       	push	r29
     e16:	cf 93       	push	r28
     e18:	cd b7       	in	r28, 0x3d	; 61
     e1a:	de b7       	in	r29, 0x3e	; 62
	TCCR1B |= (1 << CS10) | (1 << CS12);
     e1c:	ae e4       	ldi	r26, 0x4E	; 78
     e1e:	b0 e0       	ldi	r27, 0x00	; 0
     e20:	ee e4       	ldi	r30, 0x4E	; 78
     e22:	f0 e0       	ldi	r31, 0x00	; 0
     e24:	80 81       	ld	r24, Z
     e26:	85 60       	ori	r24, 0x05	; 5
     e28:	8c 93       	st	X, r24
}
     e2a:	cf 91       	pop	r28
     e2c:	df 91       	pop	r29
     e2e:	ff 91       	pop	r31
     e30:	ef 91       	pop	r30
     e32:	bf 91       	pop	r27
     e34:	af 91       	pop	r26
     e36:	8f 91       	pop	r24
     e38:	0f 90       	pop	r0
     e3a:	0f be       	out	0x3f, r0	; 63
     e3c:	0f 90       	pop	r0
     e3e:	1f 90       	pop	r1
     e40:	18 95       	reti

00000e42 <Int0Handle>:
void Int0Handle()
{
     e42:	df 93       	push	r29
     e44:	cf 93       	push	r28
     e46:	cd b7       	in	r28, 0x3d	; 61
     e48:	de b7       	in	r29, 0x3e	; 62
	DDRB &= ~(1 << PB2); // make input pin
     e4a:	a7 e3       	ldi	r26, 0x37	; 55
     e4c:	b0 e0       	ldi	r27, 0x00	; 0
     e4e:	e7 e3       	ldi	r30, 0x37	; 55
     e50:	f0 e0       	ldi	r31, 0x00	; 0
     e52:	80 81       	ld	r24, Z
     e54:	8b 7f       	andi	r24, 0xFB	; 251
     e56:	8c 93       	st	X, r24
	PORTB |= (1 << PB2); // make pin input pull up
     e58:	a8 e3       	ldi	r26, 0x38	; 56
     e5a:	b0 e0       	ldi	r27, 0x00	; 0
     e5c:	e8 e3       	ldi	r30, 0x38	; 56
     e5e:	f0 e0       	ldi	r31, 0x00	; 0
     e60:	80 81       	ld	r24, Z
     e62:	84 60       	ori	r24, 0x04	; 4
     e64:	8c 93       	st	X, r24
	MCUCR |= (1 << ISC01); // to handle automatic flag
     e66:	a5 e5       	ldi	r26, 0x55	; 85
     e68:	b0 e0       	ldi	r27, 0x00	; 0
     e6a:	e5 e5       	ldi	r30, 0x55	; 85
     e6c:	f0 e0       	ldi	r31, 0x00	; 0
     e6e:	80 81       	ld	r24, Z
     e70:	82 60       	ori	r24, 0x02	; 2
     e72:	8c 93       	st	X, r24
	GICR |= (1 << INT0); // module specific enable flag bit
     e74:	ab e5       	ldi	r26, 0x5B	; 91
     e76:	b0 e0       	ldi	r27, 0x00	; 0
     e78:	eb e5       	ldi	r30, 0x5B	; 91
     e7a:	f0 e0       	ldi	r31, 0x00	; 0
     e7c:	80 81       	ld	r24, Z
     e7e:	80 64       	ori	r24, 0x40	; 64
     e80:	8c 93       	st	X, r24
}
     e82:	cf 91       	pop	r28
     e84:	df 91       	pop	r29
     e86:	08 95       	ret

00000e88 <Int1Handle>:

void Int1Handle()
{
     e88:	df 93       	push	r29
     e8a:	cf 93       	push	r28
     e8c:	cd b7       	in	r28, 0x3d	; 61
     e8e:	de b7       	in	r29, 0x3e	; 62
	DDRD &= ~(1 << PD2); // make input pin
     e90:	a1 e3       	ldi	r26, 0x31	; 49
     e92:	b0 e0       	ldi	r27, 0x00	; 0
     e94:	e1 e3       	ldi	r30, 0x31	; 49
     e96:	f0 e0       	ldi	r31, 0x00	; 0
     e98:	80 81       	ld	r24, Z
     e9a:	8b 7f       	andi	r24, 0xFB	; 251
     e9c:	8c 93       	st	X, r24
	MCUCR |= (1 << ISC11) | (1<<ISC10); // to handle automatic flag
     e9e:	a5 e5       	ldi	r26, 0x55	; 85
     ea0:	b0 e0       	ldi	r27, 0x00	; 0
     ea2:	e5 e5       	ldi	r30, 0x55	; 85
     ea4:	f0 e0       	ldi	r31, 0x00	; 0
     ea6:	80 81       	ld	r24, Z
     ea8:	8c 60       	ori	r24, 0x0C	; 12
     eaa:	8c 93       	st	X, r24
	GICR |= (1 << INT1); // module specific enable flag bit
     eac:	ab e5       	ldi	r26, 0x5B	; 91
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	eb e5       	ldi	r30, 0x5B	; 91
     eb2:	f0 e0       	ldi	r31, 0x00	; 0
     eb4:	80 81       	ld	r24, Z
     eb6:	80 68       	ori	r24, 0x80	; 128
     eb8:	8c 93       	st	X, r24
}
     eba:	cf 91       	pop	r28
     ebc:	df 91       	pop	r29
     ebe:	08 95       	ret

00000ec0 <Int2Handle>:

void Int2Handle()
{
     ec0:	df 93       	push	r29
     ec2:	cf 93       	push	r28
     ec4:	cd b7       	in	r28, 0x3d	; 61
     ec6:	de b7       	in	r29, 0x3e	; 62
	DDRD &= ~(1 << PD3); // make input pin
     ec8:	a1 e3       	ldi	r26, 0x31	; 49
     eca:	b0 e0       	ldi	r27, 0x00	; 0
     ecc:	e1 e3       	ldi	r30, 0x31	; 49
     ece:	f0 e0       	ldi	r31, 0x00	; 0
     ed0:	80 81       	ld	r24, Z
     ed2:	87 7f       	andi	r24, 0xF7	; 247
     ed4:	8c 93       	st	X, r24
	PORTD |= (1 << PD3); // make pin input pull up
     ed6:	a2 e3       	ldi	r26, 0x32	; 50
     ed8:	b0 e0       	ldi	r27, 0x00	; 0
     eda:	e2 e3       	ldi	r30, 0x32	; 50
     edc:	f0 e0       	ldi	r31, 0x00	; 0
     ede:	80 81       	ld	r24, Z
     ee0:	88 60       	ori	r24, 0x08	; 8
     ee2:	8c 93       	st	X, r24
	MCUCSR &= ~(1 << ISC2); // to handle automatic flag
     ee4:	a4 e5       	ldi	r26, 0x54	; 84
     ee6:	b0 e0       	ldi	r27, 0x00	; 0
     ee8:	e4 e5       	ldi	r30, 0x54	; 84
     eea:	f0 e0       	ldi	r31, 0x00	; 0
     eec:	80 81       	ld	r24, Z
     eee:	8f 7b       	andi	r24, 0xBF	; 191
     ef0:	8c 93       	st	X, r24
	GICR |= (1 << INT2); // module specific enable flag bit
     ef2:	ab e5       	ldi	r26, 0x5B	; 91
     ef4:	b0 e0       	ldi	r27, 0x00	; 0
     ef6:	eb e5       	ldi	r30, 0x5B	; 91
     ef8:	f0 e0       	ldi	r31, 0x00	; 0
     efa:	80 81       	ld	r24, Z
     efc:	80 62       	ori	r24, 0x20	; 32
     efe:	8c 93       	st	X, r24
}
     f00:	cf 91       	pop	r28
     f02:	df 91       	pop	r29
     f04:	08 95       	ret

00000f06 <Timer1_CTC_Init>:

void Timer1_CTC_Init(void)
{
     f06:	df 93       	push	r29
     f08:	cf 93       	push	r28
     f0a:	cd b7       	in	r28, 0x3d	; 61
     f0c:	de b7       	in	r29, 0x3e	; 62
	TCNT1 = 0; // set Timer1 initial value to zero
     f0e:	ec e4       	ldi	r30, 0x4C	; 76
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	11 82       	std	Z+1, r1	; 0x01
     f14:	10 82       	st	Z, r1

	OCR1A = NUMBER_OF_Interrupt; //set compare value to 1000
     f16:	ea e4       	ldi	r30, 0x4A	; 74
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	88 ee       	ldi	r24, 0xE8	; 232
     f1c:	93 e0       	ldi	r25, 0x03	; 3
     f1e:	91 83       	std	Z+1, r25	; 0x01
     f20:	80 83       	st	Z, r24

	TIMSK |= (1<<OCIE1A); //Compare A interrupt enable
     f22:	a9 e5       	ldi	r26, 0x59	; 89
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	e9 e5       	ldi	r30, 0x59	; 89
     f28:	f0 e0       	ldi	r31, 0x00	; 0
     f2a:	80 81       	ld	r24, Z
     f2c:	80 61       	ori	r24, 0x10	; 16
     f2e:	8c 93       	st	X, r24

	TCCR1A = (1<<FOC1A); // 1- Force output compare for channel A
     f30:	ef e4       	ldi	r30, 0x4F	; 79
     f32:	f0 e0       	ldi	r31, 0x00	; 0
     f34:	88 e0       	ldi	r24, 0x08	; 8
     f36:	80 83       	st	Z, r24


	TCCR1B = (1<<WGM12) | (1<<CS10) |(1<<CS12); //2- CLK/1 .. CTC mode WGM12
     f38:	ee e4       	ldi	r30, 0x4E	; 78
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	8d e0       	ldi	r24, 0x0D	; 13
     f3e:	80 83       	st	Z, r24
}
     f40:	cf 91       	pop	r28
     f42:	df 91       	pop	r29
     f44:	08 95       	ret

00000f46 <main>:



int main(void)
{
     f46:	0f 93       	push	r16
     f48:	1f 93       	push	r17
     f4a:	df 93       	push	r29
     f4c:	cf 93       	push	r28
     f4e:	cd b7       	in	r28, 0x3d	; 61
     f50:	de b7       	in	r29, 0x3e	; 62
     f52:	c0 52       	subi	r28, 0x20	; 32
     f54:	d1 40       	sbci	r29, 0x01	; 1
     f56:	0f b6       	in	r0, 0x3f	; 63
     f58:	f8 94       	cli
     f5a:	de bf       	out	0x3e, r29	; 62
     f5c:	0f be       	out	0x3f, r0	; 63
     f5e:	cd bf       	out	0x3d, r28	; 61
	DDRC |= 0x0F;
     f60:	a4 e3       	ldi	r26, 0x34	; 52
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	e4 e3       	ldi	r30, 0x34	; 52
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	80 81       	ld	r24, Z
     f6a:	8f 60       	ori	r24, 0x0F	; 15
     f6c:	8c 93       	st	X, r24
	PORTC = 0xf0;
     f6e:	e5 e3       	ldi	r30, 0x35	; 53
     f70:	f0 e0       	ldi	r31, 0x00	; 0
     f72:	80 ef       	ldi	r24, 0xF0	; 240
     f74:	80 83       	st	Z, r24

	DDRA |= 0x3F;
     f76:	aa e3       	ldi	r26, 0x3A	; 58
     f78:	b0 e0       	ldi	r27, 0x00	; 0
     f7a:	ea e3       	ldi	r30, 0x3A	; 58
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	80 81       	ld	r24, Z
     f80:	8f 63       	ori	r24, 0x3F	; 63
     f82:	8c 93       	st	X, r24

	SREG|=(1<<7); //Enable global interrupt
     f84:	af e5       	ldi	r26, 0x5F	; 95
     f86:	b0 e0       	ldi	r27, 0x00	; 0
     f88:	ef e5       	ldi	r30, 0x5F	; 95
     f8a:	f0 e0       	ldi	r31, 0x00	; 0
     f8c:	80 81       	ld	r24, Z
     f8e:	80 68       	ori	r24, 0x80	; 128
     f90:	8c 93       	st	X, r24

	Timer1_CTC_Init(); //start timer1
     f92:	0e 94 83 07 	call	0xf06	; 0xf06 <Timer1_CTC_Init>
	Int0Handle();
     f96:	0e 94 21 07 	call	0xe42	; 0xe42 <Int0Handle>
	Int1Handle();
     f9a:	0e 94 44 07 	call	0xe88	; 0xe88 <Int1Handle>
	Int2Handle();
     f9e:	0e 94 60 07 	call	0xec0	; 0xec0 <Int2Handle>
	while(1)
	{
		//digit 0
		PORTC = (PORTC & 0xF0) | (SEC0 & 0x0F);
     fa2:	a5 e3       	ldi	r26, 0x35	; 53
     fa4:	b0 e0       	ldi	r27, 0x00	; 0
     fa6:	e5 e3       	ldi	r30, 0x35	; 53
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	80 81       	ld	r24, Z
     fac:	98 2f       	mov	r25, r24
     fae:	90 7f       	andi	r25, 0xF0	; 240
     fb0:	80 91 69 00 	lds	r24, 0x0069
     fb4:	8f 70       	andi	r24, 0x0F	; 15
     fb6:	89 2b       	or	r24, r25
     fb8:	8c 93       	st	X, r24
     fba:	fe 01       	movw	r30, r28
     fbc:	e3 5e       	subi	r30, 0xE3	; 227
     fbe:	fe 4f       	sbci	r31, 0xFE	; 254
     fc0:	80 e0       	ldi	r24, 0x00	; 0
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	a0 e0       	ldi	r26, 0x00	; 0
     fc6:	b0 e4       	ldi	r27, 0x40	; 64
     fc8:	80 83       	st	Z, r24
     fca:	91 83       	std	Z+1, r25	; 0x01
     fcc:	a2 83       	std	Z+2, r26	; 0x02
     fce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     fd0:	8e 01       	movw	r16, r28
     fd2:	07 5e       	subi	r16, 0xE7	; 231
     fd4:	1e 4f       	sbci	r17, 0xFE	; 254
     fd6:	fe 01       	movw	r30, r28
     fd8:	e3 5e       	subi	r30, 0xE3	; 227
     fda:	fe 4f       	sbci	r31, 0xFE	; 254
     fdc:	60 81       	ld	r22, Z
     fde:	71 81       	ldd	r23, Z+1	; 0x01
     fe0:	82 81       	ldd	r24, Z+2	; 0x02
     fe2:	93 81       	ldd	r25, Z+3	; 0x03
     fe4:	2b ea       	ldi	r18, 0xAB	; 171
     fe6:	3a ea       	ldi	r19, 0xAA	; 170
     fe8:	4a ea       	ldi	r20, 0xAA	; 170
     fea:	5e e3       	ldi	r21, 0x3E	; 62
     fec:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ff0:	dc 01       	movw	r26, r24
     ff2:	cb 01       	movw	r24, r22
     ff4:	f8 01       	movw	r30, r16
     ff6:	80 83       	st	Z, r24
     ff8:	91 83       	std	Z+1, r25	; 0x01
     ffa:	a2 83       	std	Z+2, r26	; 0x02
     ffc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ffe:	fe 01       	movw	r30, r28
    1000:	e7 5e       	subi	r30, 0xE7	; 231
    1002:	fe 4f       	sbci	r31, 0xFE	; 254
    1004:	60 81       	ld	r22, Z
    1006:	71 81       	ldd	r23, Z+1	; 0x01
    1008:	82 81       	ldd	r24, Z+2	; 0x02
    100a:	93 81       	ldd	r25, Z+3	; 0x03
    100c:	20 e0       	ldi	r18, 0x00	; 0
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	40 e8       	ldi	r20, 0x80	; 128
    1012:	5f e3       	ldi	r21, 0x3F	; 63
    1014:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1018:	88 23       	and	r24, r24
    101a:	34 f4       	brge	.+12     	; 0x1028 <main+0xe2>
		__ticks = 1;
    101c:	fe 01       	movw	r30, r28
    101e:	e8 5e       	subi	r30, 0xE8	; 232
    1020:	fe 4f       	sbci	r31, 0xFE	; 254
    1022:	81 e0       	ldi	r24, 0x01	; 1
    1024:	80 83       	st	Z, r24
    1026:	e0 c0       	rjmp	.+448    	; 0x11e8 <main+0x2a2>
	else if (__tmp > 255)
    1028:	fe 01       	movw	r30, r28
    102a:	e7 5e       	subi	r30, 0xE7	; 231
    102c:	fe 4f       	sbci	r31, 0xFE	; 254
    102e:	60 81       	ld	r22, Z
    1030:	71 81       	ldd	r23, Z+1	; 0x01
    1032:	82 81       	ldd	r24, Z+2	; 0x02
    1034:	93 81       	ldd	r25, Z+3	; 0x03
    1036:	20 e0       	ldi	r18, 0x00	; 0
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	4f e7       	ldi	r20, 0x7F	; 127
    103c:	53 e4       	ldi	r21, 0x43	; 67
    103e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1042:	18 16       	cp	r1, r24
    1044:	0c f0       	brlt	.+2      	; 0x1048 <main+0x102>
    1046:	c0 c0       	rjmp	.+384    	; 0x11c8 <main+0x282>
	{
		_delay_ms(__us / 1000.0);
    1048:	fe 01       	movw	r30, r28
    104a:	e3 5e       	subi	r30, 0xE3	; 227
    104c:	fe 4f       	sbci	r31, 0xFE	; 254
    104e:	60 81       	ld	r22, Z
    1050:	71 81       	ldd	r23, Z+1	; 0x01
    1052:	82 81       	ldd	r24, Z+2	; 0x02
    1054:	93 81       	ldd	r25, Z+3	; 0x03
    1056:	20 e0       	ldi	r18, 0x00	; 0
    1058:	30 e0       	ldi	r19, 0x00	; 0
    105a:	4a e7       	ldi	r20, 0x7A	; 122
    105c:	54 e4       	ldi	r21, 0x44	; 68
    105e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1062:	dc 01       	movw	r26, r24
    1064:	cb 01       	movw	r24, r22
    1066:	fe 01       	movw	r30, r28
    1068:	ec 5e       	subi	r30, 0xEC	; 236
    106a:	fe 4f       	sbci	r31, 0xFE	; 254
    106c:	80 83       	st	Z, r24
    106e:	91 83       	std	Z+1, r25	; 0x01
    1070:	a2 83       	std	Z+2, r26	; 0x02
    1072:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1074:	8e 01       	movw	r16, r28
    1076:	00 5f       	subi	r16, 0xF0	; 240
    1078:	1e 4f       	sbci	r17, 0xFE	; 254
    107a:	fe 01       	movw	r30, r28
    107c:	ec 5e       	subi	r30, 0xEC	; 236
    107e:	fe 4f       	sbci	r31, 0xFE	; 254
    1080:	60 81       	ld	r22, Z
    1082:	71 81       	ldd	r23, Z+1	; 0x01
    1084:	82 81       	ldd	r24, Z+2	; 0x02
    1086:	93 81       	ldd	r25, Z+3	; 0x03
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	4a e7       	ldi	r20, 0x7A	; 122
    108e:	53 e4       	ldi	r21, 0x43	; 67
    1090:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1094:	dc 01       	movw	r26, r24
    1096:	cb 01       	movw	r24, r22
    1098:	f8 01       	movw	r30, r16
    109a:	80 83       	st	Z, r24
    109c:	91 83       	std	Z+1, r25	; 0x01
    109e:	a2 83       	std	Z+2, r26	; 0x02
    10a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10a2:	fe 01       	movw	r30, r28
    10a4:	e0 5f       	subi	r30, 0xF0	; 240
    10a6:	fe 4f       	sbci	r31, 0xFE	; 254
    10a8:	60 81       	ld	r22, Z
    10aa:	71 81       	ldd	r23, Z+1	; 0x01
    10ac:	82 81       	ldd	r24, Z+2	; 0x02
    10ae:	93 81       	ldd	r25, Z+3	; 0x03
    10b0:	20 e0       	ldi	r18, 0x00	; 0
    10b2:	30 e0       	ldi	r19, 0x00	; 0
    10b4:	40 e8       	ldi	r20, 0x80	; 128
    10b6:	5f e3       	ldi	r21, 0x3F	; 63
    10b8:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    10bc:	88 23       	and	r24, r24
    10be:	44 f4       	brge	.+16     	; 0x10d0 <main+0x18a>
		__ticks = 1;
    10c0:	fe 01       	movw	r30, r28
    10c2:	e2 5f       	subi	r30, 0xF2	; 242
    10c4:	fe 4f       	sbci	r31, 0xFE	; 254
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	91 83       	std	Z+1, r25	; 0x01
    10cc:	80 83       	st	Z, r24
    10ce:	64 c0       	rjmp	.+200    	; 0x1198 <main+0x252>
	else if (__tmp > 65535)
    10d0:	fe 01       	movw	r30, r28
    10d2:	e0 5f       	subi	r30, 0xF0	; 240
    10d4:	fe 4f       	sbci	r31, 0xFE	; 254
    10d6:	60 81       	ld	r22, Z
    10d8:	71 81       	ldd	r23, Z+1	; 0x01
    10da:	82 81       	ldd	r24, Z+2	; 0x02
    10dc:	93 81       	ldd	r25, Z+3	; 0x03
    10de:	20 e0       	ldi	r18, 0x00	; 0
    10e0:	3f ef       	ldi	r19, 0xFF	; 255
    10e2:	4f e7       	ldi	r20, 0x7F	; 127
    10e4:	57 e4       	ldi	r21, 0x47	; 71
    10e6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    10ea:	18 16       	cp	r1, r24
    10ec:	0c f0       	brlt	.+2      	; 0x10f0 <main+0x1aa>
    10ee:	43 c0       	rjmp	.+134    	; 0x1176 <main+0x230>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10f0:	fe 01       	movw	r30, r28
    10f2:	ec 5e       	subi	r30, 0xEC	; 236
    10f4:	fe 4f       	sbci	r31, 0xFE	; 254
    10f6:	60 81       	ld	r22, Z
    10f8:	71 81       	ldd	r23, Z+1	; 0x01
    10fa:	82 81       	ldd	r24, Z+2	; 0x02
    10fc:	93 81       	ldd	r25, Z+3	; 0x03
    10fe:	20 e0       	ldi	r18, 0x00	; 0
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	40 e2       	ldi	r20, 0x20	; 32
    1104:	51 e4       	ldi	r21, 0x41	; 65
    1106:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    110a:	dc 01       	movw	r26, r24
    110c:	cb 01       	movw	r24, r22
    110e:	8e 01       	movw	r16, r28
    1110:	02 5f       	subi	r16, 0xF2	; 242
    1112:	1e 4f       	sbci	r17, 0xFE	; 254
    1114:	bc 01       	movw	r22, r24
    1116:	cd 01       	movw	r24, r26
    1118:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    111c:	dc 01       	movw	r26, r24
    111e:	cb 01       	movw	r24, r22
    1120:	f8 01       	movw	r30, r16
    1122:	91 83       	std	Z+1, r25	; 0x01
    1124:	80 83       	st	Z, r24
    1126:	1f c0       	rjmp	.+62     	; 0x1166 <main+0x220>
    1128:	fe 01       	movw	r30, r28
    112a:	e4 5f       	subi	r30, 0xF4	; 244
    112c:	fe 4f       	sbci	r31, 0xFE	; 254
    112e:	89 e1       	ldi	r24, 0x19	; 25
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	91 83       	std	Z+1, r25	; 0x01
    1134:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1136:	fe 01       	movw	r30, r28
    1138:	e4 5f       	subi	r30, 0xF4	; 244
    113a:	fe 4f       	sbci	r31, 0xFE	; 254
    113c:	80 81       	ld	r24, Z
    113e:	91 81       	ldd	r25, Z+1	; 0x01
    1140:	01 97       	sbiw	r24, 0x01	; 1
    1142:	f1 f7       	brne	.-4      	; 0x1140 <main+0x1fa>
    1144:	fe 01       	movw	r30, r28
    1146:	e4 5f       	subi	r30, 0xF4	; 244
    1148:	fe 4f       	sbci	r31, 0xFE	; 254
    114a:	91 83       	std	Z+1, r25	; 0x01
    114c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    114e:	de 01       	movw	r26, r28
    1150:	a2 5f       	subi	r26, 0xF2	; 242
    1152:	be 4f       	sbci	r27, 0xFE	; 254
    1154:	fe 01       	movw	r30, r28
    1156:	e2 5f       	subi	r30, 0xF2	; 242
    1158:	fe 4f       	sbci	r31, 0xFE	; 254
    115a:	80 81       	ld	r24, Z
    115c:	91 81       	ldd	r25, Z+1	; 0x01
    115e:	01 97       	sbiw	r24, 0x01	; 1
    1160:	11 96       	adiw	r26, 0x01	; 1
    1162:	9c 93       	st	X, r25
    1164:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1166:	fe 01       	movw	r30, r28
    1168:	e2 5f       	subi	r30, 0xF2	; 242
    116a:	fe 4f       	sbci	r31, 0xFE	; 254
    116c:	80 81       	ld	r24, Z
    116e:	91 81       	ldd	r25, Z+1	; 0x01
    1170:	00 97       	sbiw	r24, 0x00	; 0
    1172:	d1 f6       	brne	.-76     	; 0x1128 <main+0x1e2>
    1174:	4b c0       	rjmp	.+150    	; 0x120c <main+0x2c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1176:	8e 01       	movw	r16, r28
    1178:	02 5f       	subi	r16, 0xF2	; 242
    117a:	1e 4f       	sbci	r17, 0xFE	; 254
    117c:	fe 01       	movw	r30, r28
    117e:	e0 5f       	subi	r30, 0xF0	; 240
    1180:	fe 4f       	sbci	r31, 0xFE	; 254
    1182:	60 81       	ld	r22, Z
    1184:	71 81       	ldd	r23, Z+1	; 0x01
    1186:	82 81       	ldd	r24, Z+2	; 0x02
    1188:	93 81       	ldd	r25, Z+3	; 0x03
    118a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    118e:	dc 01       	movw	r26, r24
    1190:	cb 01       	movw	r24, r22
    1192:	f8 01       	movw	r30, r16
    1194:	91 83       	std	Z+1, r25	; 0x01
    1196:	80 83       	st	Z, r24
    1198:	de 01       	movw	r26, r28
    119a:	a6 5f       	subi	r26, 0xF6	; 246
    119c:	be 4f       	sbci	r27, 0xFE	; 254
    119e:	fe 01       	movw	r30, r28
    11a0:	e2 5f       	subi	r30, 0xF2	; 242
    11a2:	fe 4f       	sbci	r31, 0xFE	; 254
    11a4:	80 81       	ld	r24, Z
    11a6:	91 81       	ldd	r25, Z+1	; 0x01
    11a8:	11 96       	adiw	r26, 0x01	; 1
    11aa:	9c 93       	st	X, r25
    11ac:	8e 93       	st	-X, r24
    11ae:	fe 01       	movw	r30, r28
    11b0:	e6 5f       	subi	r30, 0xF6	; 246
    11b2:	fe 4f       	sbci	r31, 0xFE	; 254
    11b4:	80 81       	ld	r24, Z
    11b6:	91 81       	ldd	r25, Z+1	; 0x01
    11b8:	01 97       	sbiw	r24, 0x01	; 1
    11ba:	f1 f7       	brne	.-4      	; 0x11b8 <main+0x272>
    11bc:	fe 01       	movw	r30, r28
    11be:	e6 5f       	subi	r30, 0xF6	; 246
    11c0:	fe 4f       	sbci	r31, 0xFE	; 254
    11c2:	91 83       	std	Z+1, r25	; 0x01
    11c4:	80 83       	st	Z, r24
    11c6:	22 c0       	rjmp	.+68     	; 0x120c <main+0x2c6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    11c8:	8e 01       	movw	r16, r28
    11ca:	08 5e       	subi	r16, 0xE8	; 232
    11cc:	1e 4f       	sbci	r17, 0xFE	; 254
    11ce:	fe 01       	movw	r30, r28
    11d0:	e7 5e       	subi	r30, 0xE7	; 231
    11d2:	fe 4f       	sbci	r31, 0xFE	; 254
    11d4:	60 81       	ld	r22, Z
    11d6:	71 81       	ldd	r23, Z+1	; 0x01
    11d8:	82 81       	ldd	r24, Z+2	; 0x02
    11da:	93 81       	ldd	r25, Z+3	; 0x03
    11dc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11e0:	dc 01       	movw	r26, r24
    11e2:	cb 01       	movw	r24, r22
    11e4:	f8 01       	movw	r30, r16
    11e6:	80 83       	st	Z, r24
    11e8:	de 01       	movw	r26, r28
    11ea:	a7 5f       	subi	r26, 0xF7	; 247
    11ec:	be 4f       	sbci	r27, 0xFE	; 254
    11ee:	fe 01       	movw	r30, r28
    11f0:	e8 5e       	subi	r30, 0xE8	; 232
    11f2:	fe 4f       	sbci	r31, 0xFE	; 254
    11f4:	80 81       	ld	r24, Z
    11f6:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    11f8:	fe 01       	movw	r30, r28
    11fa:	e7 5f       	subi	r30, 0xF7	; 247
    11fc:	fe 4f       	sbci	r31, 0xFE	; 254
    11fe:	80 81       	ld	r24, Z
    1200:	8a 95       	dec	r24
    1202:	f1 f7       	brne	.-4      	; 0x1200 <main+0x2ba>
    1204:	fe 01       	movw	r30, r28
    1206:	e7 5f       	subi	r30, 0xF7	; 247
    1208:	fe 4f       	sbci	r31, 0xFE	; 254
    120a:	80 83       	st	Z, r24
		_delay_us(delay);
		PORTA |= (1<<PA0);
    120c:	ab e3       	ldi	r26, 0x3B	; 59
    120e:	b0 e0       	ldi	r27, 0x00	; 0
    1210:	eb e3       	ldi	r30, 0x3B	; 59
    1212:	f0 e0       	ldi	r31, 0x00	; 0
    1214:	80 81       	ld	r24, Z
    1216:	81 60       	ori	r24, 0x01	; 1
    1218:	8c 93       	st	X, r24
    121a:	fe 01       	movw	r30, r28
    121c:	eb 5f       	subi	r30, 0xFB	; 251
    121e:	fe 4f       	sbci	r31, 0xFE	; 254
    1220:	80 e0       	ldi	r24, 0x00	; 0
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	a0 e0       	ldi	r26, 0x00	; 0
    1226:	b0 e4       	ldi	r27, 0x40	; 64
    1228:	80 83       	st	Z, r24
    122a:	91 83       	std	Z+1, r25	; 0x01
    122c:	a2 83       	std	Z+2, r26	; 0x02
    122e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1230:	8e 01       	movw	r16, r28
    1232:	0f 5f       	subi	r16, 0xFF	; 255
    1234:	1e 4f       	sbci	r17, 0xFE	; 254
    1236:	fe 01       	movw	r30, r28
    1238:	eb 5f       	subi	r30, 0xFB	; 251
    123a:	fe 4f       	sbci	r31, 0xFE	; 254
    123c:	60 81       	ld	r22, Z
    123e:	71 81       	ldd	r23, Z+1	; 0x01
    1240:	82 81       	ldd	r24, Z+2	; 0x02
    1242:	93 81       	ldd	r25, Z+3	; 0x03
    1244:	2b ea       	ldi	r18, 0xAB	; 171
    1246:	3a ea       	ldi	r19, 0xAA	; 170
    1248:	4a ea       	ldi	r20, 0xAA	; 170
    124a:	5e e3       	ldi	r21, 0x3E	; 62
    124c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1250:	dc 01       	movw	r26, r24
    1252:	cb 01       	movw	r24, r22
    1254:	f8 01       	movw	r30, r16
    1256:	80 83       	st	Z, r24
    1258:	91 83       	std	Z+1, r25	; 0x01
    125a:	a2 83       	std	Z+2, r26	; 0x02
    125c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    125e:	fe 01       	movw	r30, r28
    1260:	ef 5f       	subi	r30, 0xFF	; 255
    1262:	fe 4f       	sbci	r31, 0xFE	; 254
    1264:	60 81       	ld	r22, Z
    1266:	71 81       	ldd	r23, Z+1	; 0x01
    1268:	82 81       	ldd	r24, Z+2	; 0x02
    126a:	93 81       	ldd	r25, Z+3	; 0x03
    126c:	20 e0       	ldi	r18, 0x00	; 0
    126e:	30 e0       	ldi	r19, 0x00	; 0
    1270:	40 e8       	ldi	r20, 0x80	; 128
    1272:	5f e3       	ldi	r21, 0x3F	; 63
    1274:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1278:	88 23       	and	r24, r24
    127a:	34 f4       	brge	.+12     	; 0x1288 <main+0x342>
		__ticks = 1;
    127c:	fe 01       	movw	r30, r28
    127e:	e0 50       	subi	r30, 0x00	; 0
    1280:	ff 4f       	sbci	r31, 0xFF	; 255
    1282:	81 e0       	ldi	r24, 0x01	; 1
    1284:	80 83       	st	Z, r24
    1286:	e0 c0       	rjmp	.+448    	; 0x1448 <main+0x502>
	else if (__tmp > 255)
    1288:	fe 01       	movw	r30, r28
    128a:	ef 5f       	subi	r30, 0xFF	; 255
    128c:	fe 4f       	sbci	r31, 0xFE	; 254
    128e:	60 81       	ld	r22, Z
    1290:	71 81       	ldd	r23, Z+1	; 0x01
    1292:	82 81       	ldd	r24, Z+2	; 0x02
    1294:	93 81       	ldd	r25, Z+3	; 0x03
    1296:	20 e0       	ldi	r18, 0x00	; 0
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	4f e7       	ldi	r20, 0x7F	; 127
    129c:	53 e4       	ldi	r21, 0x43	; 67
    129e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    12a2:	18 16       	cp	r1, r24
    12a4:	0c f0       	brlt	.+2      	; 0x12a8 <main+0x362>
    12a6:	c0 c0       	rjmp	.+384    	; 0x1428 <main+0x4e2>
	{
		_delay_ms(__us / 1000.0);
    12a8:	fe 01       	movw	r30, r28
    12aa:	eb 5f       	subi	r30, 0xFB	; 251
    12ac:	fe 4f       	sbci	r31, 0xFE	; 254
    12ae:	60 81       	ld	r22, Z
    12b0:	71 81       	ldd	r23, Z+1	; 0x01
    12b2:	82 81       	ldd	r24, Z+2	; 0x02
    12b4:	93 81       	ldd	r25, Z+3	; 0x03
    12b6:	20 e0       	ldi	r18, 0x00	; 0
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	4a e7       	ldi	r20, 0x7A	; 122
    12bc:	54 e4       	ldi	r21, 0x44	; 68
    12be:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    12c2:	dc 01       	movw	r26, r24
    12c4:	cb 01       	movw	r24, r22
    12c6:	fe 01       	movw	r30, r28
    12c8:	e4 50       	subi	r30, 0x04	; 4
    12ca:	ff 4f       	sbci	r31, 0xFF	; 255
    12cc:	80 83       	st	Z, r24
    12ce:	91 83       	std	Z+1, r25	; 0x01
    12d0:	a2 83       	std	Z+2, r26	; 0x02
    12d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12d4:	8e 01       	movw	r16, r28
    12d6:	08 50       	subi	r16, 0x08	; 8
    12d8:	1f 4f       	sbci	r17, 0xFF	; 255
    12da:	fe 01       	movw	r30, r28
    12dc:	e4 50       	subi	r30, 0x04	; 4
    12de:	ff 4f       	sbci	r31, 0xFF	; 255
    12e0:	60 81       	ld	r22, Z
    12e2:	71 81       	ldd	r23, Z+1	; 0x01
    12e4:	82 81       	ldd	r24, Z+2	; 0x02
    12e6:	93 81       	ldd	r25, Z+3	; 0x03
    12e8:	20 e0       	ldi	r18, 0x00	; 0
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	4a e7       	ldi	r20, 0x7A	; 122
    12ee:	53 e4       	ldi	r21, 0x43	; 67
    12f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12f4:	dc 01       	movw	r26, r24
    12f6:	cb 01       	movw	r24, r22
    12f8:	f8 01       	movw	r30, r16
    12fa:	80 83       	st	Z, r24
    12fc:	91 83       	std	Z+1, r25	; 0x01
    12fe:	a2 83       	std	Z+2, r26	; 0x02
    1300:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1302:	fe 01       	movw	r30, r28
    1304:	e8 50       	subi	r30, 0x08	; 8
    1306:	ff 4f       	sbci	r31, 0xFF	; 255
    1308:	60 81       	ld	r22, Z
    130a:	71 81       	ldd	r23, Z+1	; 0x01
    130c:	82 81       	ldd	r24, Z+2	; 0x02
    130e:	93 81       	ldd	r25, Z+3	; 0x03
    1310:	20 e0       	ldi	r18, 0x00	; 0
    1312:	30 e0       	ldi	r19, 0x00	; 0
    1314:	40 e8       	ldi	r20, 0x80	; 128
    1316:	5f e3       	ldi	r21, 0x3F	; 63
    1318:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    131c:	88 23       	and	r24, r24
    131e:	44 f4       	brge	.+16     	; 0x1330 <main+0x3ea>
		__ticks = 1;
    1320:	fe 01       	movw	r30, r28
    1322:	ea 50       	subi	r30, 0x0A	; 10
    1324:	ff 4f       	sbci	r31, 0xFF	; 255
    1326:	81 e0       	ldi	r24, 0x01	; 1
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	91 83       	std	Z+1, r25	; 0x01
    132c:	80 83       	st	Z, r24
    132e:	64 c0       	rjmp	.+200    	; 0x13f8 <main+0x4b2>
	else if (__tmp > 65535)
    1330:	fe 01       	movw	r30, r28
    1332:	e8 50       	subi	r30, 0x08	; 8
    1334:	ff 4f       	sbci	r31, 0xFF	; 255
    1336:	60 81       	ld	r22, Z
    1338:	71 81       	ldd	r23, Z+1	; 0x01
    133a:	82 81       	ldd	r24, Z+2	; 0x02
    133c:	93 81       	ldd	r25, Z+3	; 0x03
    133e:	20 e0       	ldi	r18, 0x00	; 0
    1340:	3f ef       	ldi	r19, 0xFF	; 255
    1342:	4f e7       	ldi	r20, 0x7F	; 127
    1344:	57 e4       	ldi	r21, 0x47	; 71
    1346:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    134a:	18 16       	cp	r1, r24
    134c:	0c f0       	brlt	.+2      	; 0x1350 <main+0x40a>
    134e:	43 c0       	rjmp	.+134    	; 0x13d6 <main+0x490>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1350:	fe 01       	movw	r30, r28
    1352:	e4 50       	subi	r30, 0x04	; 4
    1354:	ff 4f       	sbci	r31, 0xFF	; 255
    1356:	60 81       	ld	r22, Z
    1358:	71 81       	ldd	r23, Z+1	; 0x01
    135a:	82 81       	ldd	r24, Z+2	; 0x02
    135c:	93 81       	ldd	r25, Z+3	; 0x03
    135e:	20 e0       	ldi	r18, 0x00	; 0
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	40 e2       	ldi	r20, 0x20	; 32
    1364:	51 e4       	ldi	r21, 0x41	; 65
    1366:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    136a:	dc 01       	movw	r26, r24
    136c:	cb 01       	movw	r24, r22
    136e:	8e 01       	movw	r16, r28
    1370:	0a 50       	subi	r16, 0x0A	; 10
    1372:	1f 4f       	sbci	r17, 0xFF	; 255
    1374:	bc 01       	movw	r22, r24
    1376:	cd 01       	movw	r24, r26
    1378:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    137c:	dc 01       	movw	r26, r24
    137e:	cb 01       	movw	r24, r22
    1380:	f8 01       	movw	r30, r16
    1382:	91 83       	std	Z+1, r25	; 0x01
    1384:	80 83       	st	Z, r24
    1386:	1f c0       	rjmp	.+62     	; 0x13c6 <main+0x480>
    1388:	fe 01       	movw	r30, r28
    138a:	ec 50       	subi	r30, 0x0C	; 12
    138c:	ff 4f       	sbci	r31, 0xFF	; 255
    138e:	89 e1       	ldi	r24, 0x19	; 25
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	91 83       	std	Z+1, r25	; 0x01
    1394:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1396:	fe 01       	movw	r30, r28
    1398:	ec 50       	subi	r30, 0x0C	; 12
    139a:	ff 4f       	sbci	r31, 0xFF	; 255
    139c:	80 81       	ld	r24, Z
    139e:	91 81       	ldd	r25, Z+1	; 0x01
    13a0:	01 97       	sbiw	r24, 0x01	; 1
    13a2:	f1 f7       	brne	.-4      	; 0x13a0 <main+0x45a>
    13a4:	fe 01       	movw	r30, r28
    13a6:	ec 50       	subi	r30, 0x0C	; 12
    13a8:	ff 4f       	sbci	r31, 0xFF	; 255
    13aa:	91 83       	std	Z+1, r25	; 0x01
    13ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13ae:	de 01       	movw	r26, r28
    13b0:	aa 50       	subi	r26, 0x0A	; 10
    13b2:	bf 4f       	sbci	r27, 0xFF	; 255
    13b4:	fe 01       	movw	r30, r28
    13b6:	ea 50       	subi	r30, 0x0A	; 10
    13b8:	ff 4f       	sbci	r31, 0xFF	; 255
    13ba:	80 81       	ld	r24, Z
    13bc:	91 81       	ldd	r25, Z+1	; 0x01
    13be:	01 97       	sbiw	r24, 0x01	; 1
    13c0:	11 96       	adiw	r26, 0x01	; 1
    13c2:	9c 93       	st	X, r25
    13c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13c6:	fe 01       	movw	r30, r28
    13c8:	ea 50       	subi	r30, 0x0A	; 10
    13ca:	ff 4f       	sbci	r31, 0xFF	; 255
    13cc:	80 81       	ld	r24, Z
    13ce:	91 81       	ldd	r25, Z+1	; 0x01
    13d0:	00 97       	sbiw	r24, 0x00	; 0
    13d2:	d1 f6       	brne	.-76     	; 0x1388 <main+0x442>
    13d4:	4b c0       	rjmp	.+150    	; 0x146c <main+0x526>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13d6:	8e 01       	movw	r16, r28
    13d8:	0a 50       	subi	r16, 0x0A	; 10
    13da:	1f 4f       	sbci	r17, 0xFF	; 255
    13dc:	fe 01       	movw	r30, r28
    13de:	e8 50       	subi	r30, 0x08	; 8
    13e0:	ff 4f       	sbci	r31, 0xFF	; 255
    13e2:	60 81       	ld	r22, Z
    13e4:	71 81       	ldd	r23, Z+1	; 0x01
    13e6:	82 81       	ldd	r24, Z+2	; 0x02
    13e8:	93 81       	ldd	r25, Z+3	; 0x03
    13ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13ee:	dc 01       	movw	r26, r24
    13f0:	cb 01       	movw	r24, r22
    13f2:	f8 01       	movw	r30, r16
    13f4:	91 83       	std	Z+1, r25	; 0x01
    13f6:	80 83       	st	Z, r24
    13f8:	de 01       	movw	r26, r28
    13fa:	ae 50       	subi	r26, 0x0E	; 14
    13fc:	bf 4f       	sbci	r27, 0xFF	; 255
    13fe:	fe 01       	movw	r30, r28
    1400:	ea 50       	subi	r30, 0x0A	; 10
    1402:	ff 4f       	sbci	r31, 0xFF	; 255
    1404:	80 81       	ld	r24, Z
    1406:	91 81       	ldd	r25, Z+1	; 0x01
    1408:	11 96       	adiw	r26, 0x01	; 1
    140a:	9c 93       	st	X, r25
    140c:	8e 93       	st	-X, r24
    140e:	fe 01       	movw	r30, r28
    1410:	ee 50       	subi	r30, 0x0E	; 14
    1412:	ff 4f       	sbci	r31, 0xFF	; 255
    1414:	80 81       	ld	r24, Z
    1416:	91 81       	ldd	r25, Z+1	; 0x01
    1418:	01 97       	sbiw	r24, 0x01	; 1
    141a:	f1 f7       	brne	.-4      	; 0x1418 <main+0x4d2>
    141c:	fe 01       	movw	r30, r28
    141e:	ee 50       	subi	r30, 0x0E	; 14
    1420:	ff 4f       	sbci	r31, 0xFF	; 255
    1422:	91 83       	std	Z+1, r25	; 0x01
    1424:	80 83       	st	Z, r24
    1426:	22 c0       	rjmp	.+68     	; 0x146c <main+0x526>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1428:	8e 01       	movw	r16, r28
    142a:	00 50       	subi	r16, 0x00	; 0
    142c:	1f 4f       	sbci	r17, 0xFF	; 255
    142e:	fe 01       	movw	r30, r28
    1430:	ef 5f       	subi	r30, 0xFF	; 255
    1432:	fe 4f       	sbci	r31, 0xFE	; 254
    1434:	60 81       	ld	r22, Z
    1436:	71 81       	ldd	r23, Z+1	; 0x01
    1438:	82 81       	ldd	r24, Z+2	; 0x02
    143a:	93 81       	ldd	r25, Z+3	; 0x03
    143c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1440:	dc 01       	movw	r26, r24
    1442:	cb 01       	movw	r24, r22
    1444:	f8 01       	movw	r30, r16
    1446:	80 83       	st	Z, r24
    1448:	de 01       	movw	r26, r28
    144a:	af 50       	subi	r26, 0x0F	; 15
    144c:	bf 4f       	sbci	r27, 0xFF	; 255
    144e:	fe 01       	movw	r30, r28
    1450:	e0 50       	subi	r30, 0x00	; 0
    1452:	ff 4f       	sbci	r31, 0xFF	; 255
    1454:	80 81       	ld	r24, Z
    1456:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1458:	fe 01       	movw	r30, r28
    145a:	ef 50       	subi	r30, 0x0F	; 15
    145c:	ff 4f       	sbci	r31, 0xFF	; 255
    145e:	80 81       	ld	r24, Z
    1460:	8a 95       	dec	r24
    1462:	f1 f7       	brne	.-4      	; 0x1460 <main+0x51a>
    1464:	fe 01       	movw	r30, r28
    1466:	ef 50       	subi	r30, 0x0F	; 15
    1468:	ff 4f       	sbci	r31, 0xFF	; 255
    146a:	80 83       	st	Z, r24
		_delay_us(delay);
		PORTA &= ~(1<<PA0);
    146c:	ab e3       	ldi	r26, 0x3B	; 59
    146e:	b0 e0       	ldi	r27, 0x00	; 0
    1470:	eb e3       	ldi	r30, 0x3B	; 59
    1472:	f0 e0       	ldi	r31, 0x00	; 0
    1474:	80 81       	ld	r24, Z
    1476:	8e 7f       	andi	r24, 0xFE	; 254
    1478:	8c 93       	st	X, r24

		//digit 1
		PORTC = (PORTC & 0xF0) | (SEC1 & 0x0F);
    147a:	a5 e3       	ldi	r26, 0x35	; 53
    147c:	b0 e0       	ldi	r27, 0x00	; 0
    147e:	e5 e3       	ldi	r30, 0x35	; 53
    1480:	f0 e0       	ldi	r31, 0x00	; 0
    1482:	80 81       	ld	r24, Z
    1484:	98 2f       	mov	r25, r24
    1486:	90 7f       	andi	r25, 0xF0	; 240
    1488:	80 91 6a 00 	lds	r24, 0x006A
    148c:	8f 70       	andi	r24, 0x0F	; 15
    148e:	89 2b       	or	r24, r25
    1490:	8c 93       	st	X, r24
    1492:	fe 01       	movw	r30, r28
    1494:	e3 51       	subi	r30, 0x13	; 19
    1496:	ff 4f       	sbci	r31, 0xFF	; 255
    1498:	80 e0       	ldi	r24, 0x00	; 0
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	a0 e0       	ldi	r26, 0x00	; 0
    149e:	b0 e4       	ldi	r27, 0x40	; 64
    14a0:	80 83       	st	Z, r24
    14a2:	91 83       	std	Z+1, r25	; 0x01
    14a4:	a2 83       	std	Z+2, r26	; 0x02
    14a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    14a8:	8e 01       	movw	r16, r28
    14aa:	07 51       	subi	r16, 0x17	; 23
    14ac:	1f 4f       	sbci	r17, 0xFF	; 255
    14ae:	fe 01       	movw	r30, r28
    14b0:	e3 51       	subi	r30, 0x13	; 19
    14b2:	ff 4f       	sbci	r31, 0xFF	; 255
    14b4:	60 81       	ld	r22, Z
    14b6:	71 81       	ldd	r23, Z+1	; 0x01
    14b8:	82 81       	ldd	r24, Z+2	; 0x02
    14ba:	93 81       	ldd	r25, Z+3	; 0x03
    14bc:	2b ea       	ldi	r18, 0xAB	; 171
    14be:	3a ea       	ldi	r19, 0xAA	; 170
    14c0:	4a ea       	ldi	r20, 0xAA	; 170
    14c2:	5e e3       	ldi	r21, 0x3E	; 62
    14c4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14c8:	dc 01       	movw	r26, r24
    14ca:	cb 01       	movw	r24, r22
    14cc:	f8 01       	movw	r30, r16
    14ce:	80 83       	st	Z, r24
    14d0:	91 83       	std	Z+1, r25	; 0x01
    14d2:	a2 83       	std	Z+2, r26	; 0x02
    14d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14d6:	fe 01       	movw	r30, r28
    14d8:	e7 51       	subi	r30, 0x17	; 23
    14da:	ff 4f       	sbci	r31, 0xFF	; 255
    14dc:	60 81       	ld	r22, Z
    14de:	71 81       	ldd	r23, Z+1	; 0x01
    14e0:	82 81       	ldd	r24, Z+2	; 0x02
    14e2:	93 81       	ldd	r25, Z+3	; 0x03
    14e4:	20 e0       	ldi	r18, 0x00	; 0
    14e6:	30 e0       	ldi	r19, 0x00	; 0
    14e8:	40 e8       	ldi	r20, 0x80	; 128
    14ea:	5f e3       	ldi	r21, 0x3F	; 63
    14ec:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    14f0:	88 23       	and	r24, r24
    14f2:	34 f4       	brge	.+12     	; 0x1500 <main+0x5ba>
		__ticks = 1;
    14f4:	fe 01       	movw	r30, r28
    14f6:	e8 51       	subi	r30, 0x18	; 24
    14f8:	ff 4f       	sbci	r31, 0xFF	; 255
    14fa:	81 e0       	ldi	r24, 0x01	; 1
    14fc:	80 83       	st	Z, r24
    14fe:	e0 c0       	rjmp	.+448    	; 0x16c0 <main+0x77a>
	else if (__tmp > 255)
    1500:	fe 01       	movw	r30, r28
    1502:	e7 51       	subi	r30, 0x17	; 23
    1504:	ff 4f       	sbci	r31, 0xFF	; 255
    1506:	60 81       	ld	r22, Z
    1508:	71 81       	ldd	r23, Z+1	; 0x01
    150a:	82 81       	ldd	r24, Z+2	; 0x02
    150c:	93 81       	ldd	r25, Z+3	; 0x03
    150e:	20 e0       	ldi	r18, 0x00	; 0
    1510:	30 e0       	ldi	r19, 0x00	; 0
    1512:	4f e7       	ldi	r20, 0x7F	; 127
    1514:	53 e4       	ldi	r21, 0x43	; 67
    1516:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    151a:	18 16       	cp	r1, r24
    151c:	0c f0       	brlt	.+2      	; 0x1520 <main+0x5da>
    151e:	c0 c0       	rjmp	.+384    	; 0x16a0 <main+0x75a>
	{
		_delay_ms(__us / 1000.0);
    1520:	fe 01       	movw	r30, r28
    1522:	e3 51       	subi	r30, 0x13	; 19
    1524:	ff 4f       	sbci	r31, 0xFF	; 255
    1526:	60 81       	ld	r22, Z
    1528:	71 81       	ldd	r23, Z+1	; 0x01
    152a:	82 81       	ldd	r24, Z+2	; 0x02
    152c:	93 81       	ldd	r25, Z+3	; 0x03
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	4a e7       	ldi	r20, 0x7A	; 122
    1534:	54 e4       	ldi	r21, 0x44	; 68
    1536:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    153a:	dc 01       	movw	r26, r24
    153c:	cb 01       	movw	r24, r22
    153e:	fe 01       	movw	r30, r28
    1540:	ec 51       	subi	r30, 0x1C	; 28
    1542:	ff 4f       	sbci	r31, 0xFF	; 255
    1544:	80 83       	st	Z, r24
    1546:	91 83       	std	Z+1, r25	; 0x01
    1548:	a2 83       	std	Z+2, r26	; 0x02
    154a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    154c:	8e 01       	movw	r16, r28
    154e:	00 52       	subi	r16, 0x20	; 32
    1550:	1f 4f       	sbci	r17, 0xFF	; 255
    1552:	fe 01       	movw	r30, r28
    1554:	ec 51       	subi	r30, 0x1C	; 28
    1556:	ff 4f       	sbci	r31, 0xFF	; 255
    1558:	60 81       	ld	r22, Z
    155a:	71 81       	ldd	r23, Z+1	; 0x01
    155c:	82 81       	ldd	r24, Z+2	; 0x02
    155e:	93 81       	ldd	r25, Z+3	; 0x03
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	4a e7       	ldi	r20, 0x7A	; 122
    1566:	53 e4       	ldi	r21, 0x43	; 67
    1568:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    156c:	dc 01       	movw	r26, r24
    156e:	cb 01       	movw	r24, r22
    1570:	f8 01       	movw	r30, r16
    1572:	80 83       	st	Z, r24
    1574:	91 83       	std	Z+1, r25	; 0x01
    1576:	a2 83       	std	Z+2, r26	; 0x02
    1578:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    157a:	fe 01       	movw	r30, r28
    157c:	e0 52       	subi	r30, 0x20	; 32
    157e:	ff 4f       	sbci	r31, 0xFF	; 255
    1580:	60 81       	ld	r22, Z
    1582:	71 81       	ldd	r23, Z+1	; 0x01
    1584:	82 81       	ldd	r24, Z+2	; 0x02
    1586:	93 81       	ldd	r25, Z+3	; 0x03
    1588:	20 e0       	ldi	r18, 0x00	; 0
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	40 e8       	ldi	r20, 0x80	; 128
    158e:	5f e3       	ldi	r21, 0x3F	; 63
    1590:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1594:	88 23       	and	r24, r24
    1596:	44 f4       	brge	.+16     	; 0x15a8 <main+0x662>
		__ticks = 1;
    1598:	fe 01       	movw	r30, r28
    159a:	e2 52       	subi	r30, 0x22	; 34
    159c:	ff 4f       	sbci	r31, 0xFF	; 255
    159e:	81 e0       	ldi	r24, 0x01	; 1
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	91 83       	std	Z+1, r25	; 0x01
    15a4:	80 83       	st	Z, r24
    15a6:	64 c0       	rjmp	.+200    	; 0x1670 <main+0x72a>
	else if (__tmp > 65535)
    15a8:	fe 01       	movw	r30, r28
    15aa:	e0 52       	subi	r30, 0x20	; 32
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	60 81       	ld	r22, Z
    15b0:	71 81       	ldd	r23, Z+1	; 0x01
    15b2:	82 81       	ldd	r24, Z+2	; 0x02
    15b4:	93 81       	ldd	r25, Z+3	; 0x03
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	3f ef       	ldi	r19, 0xFF	; 255
    15ba:	4f e7       	ldi	r20, 0x7F	; 127
    15bc:	57 e4       	ldi	r21, 0x47	; 71
    15be:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    15c2:	18 16       	cp	r1, r24
    15c4:	0c f0       	brlt	.+2      	; 0x15c8 <main+0x682>
    15c6:	43 c0       	rjmp	.+134    	; 0x164e <main+0x708>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15c8:	fe 01       	movw	r30, r28
    15ca:	ec 51       	subi	r30, 0x1C	; 28
    15cc:	ff 4f       	sbci	r31, 0xFF	; 255
    15ce:	60 81       	ld	r22, Z
    15d0:	71 81       	ldd	r23, Z+1	; 0x01
    15d2:	82 81       	ldd	r24, Z+2	; 0x02
    15d4:	93 81       	ldd	r25, Z+3	; 0x03
    15d6:	20 e0       	ldi	r18, 0x00	; 0
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	40 e2       	ldi	r20, 0x20	; 32
    15dc:	51 e4       	ldi	r21, 0x41	; 65
    15de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15e2:	dc 01       	movw	r26, r24
    15e4:	cb 01       	movw	r24, r22
    15e6:	8e 01       	movw	r16, r28
    15e8:	02 52       	subi	r16, 0x22	; 34
    15ea:	1f 4f       	sbci	r17, 0xFF	; 255
    15ec:	bc 01       	movw	r22, r24
    15ee:	cd 01       	movw	r24, r26
    15f0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15f4:	dc 01       	movw	r26, r24
    15f6:	cb 01       	movw	r24, r22
    15f8:	f8 01       	movw	r30, r16
    15fa:	91 83       	std	Z+1, r25	; 0x01
    15fc:	80 83       	st	Z, r24
    15fe:	1f c0       	rjmp	.+62     	; 0x163e <main+0x6f8>
    1600:	fe 01       	movw	r30, r28
    1602:	e4 52       	subi	r30, 0x24	; 36
    1604:	ff 4f       	sbci	r31, 0xFF	; 255
    1606:	89 e1       	ldi	r24, 0x19	; 25
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	91 83       	std	Z+1, r25	; 0x01
    160c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    160e:	fe 01       	movw	r30, r28
    1610:	e4 52       	subi	r30, 0x24	; 36
    1612:	ff 4f       	sbci	r31, 0xFF	; 255
    1614:	80 81       	ld	r24, Z
    1616:	91 81       	ldd	r25, Z+1	; 0x01
    1618:	01 97       	sbiw	r24, 0x01	; 1
    161a:	f1 f7       	brne	.-4      	; 0x1618 <main+0x6d2>
    161c:	fe 01       	movw	r30, r28
    161e:	e4 52       	subi	r30, 0x24	; 36
    1620:	ff 4f       	sbci	r31, 0xFF	; 255
    1622:	91 83       	std	Z+1, r25	; 0x01
    1624:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1626:	de 01       	movw	r26, r28
    1628:	a2 52       	subi	r26, 0x22	; 34
    162a:	bf 4f       	sbci	r27, 0xFF	; 255
    162c:	fe 01       	movw	r30, r28
    162e:	e2 52       	subi	r30, 0x22	; 34
    1630:	ff 4f       	sbci	r31, 0xFF	; 255
    1632:	80 81       	ld	r24, Z
    1634:	91 81       	ldd	r25, Z+1	; 0x01
    1636:	01 97       	sbiw	r24, 0x01	; 1
    1638:	11 96       	adiw	r26, 0x01	; 1
    163a:	9c 93       	st	X, r25
    163c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    163e:	fe 01       	movw	r30, r28
    1640:	e2 52       	subi	r30, 0x22	; 34
    1642:	ff 4f       	sbci	r31, 0xFF	; 255
    1644:	80 81       	ld	r24, Z
    1646:	91 81       	ldd	r25, Z+1	; 0x01
    1648:	00 97       	sbiw	r24, 0x00	; 0
    164a:	d1 f6       	brne	.-76     	; 0x1600 <main+0x6ba>
    164c:	4b c0       	rjmp	.+150    	; 0x16e4 <main+0x79e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    164e:	8e 01       	movw	r16, r28
    1650:	02 52       	subi	r16, 0x22	; 34
    1652:	1f 4f       	sbci	r17, 0xFF	; 255
    1654:	fe 01       	movw	r30, r28
    1656:	e0 52       	subi	r30, 0x20	; 32
    1658:	ff 4f       	sbci	r31, 0xFF	; 255
    165a:	60 81       	ld	r22, Z
    165c:	71 81       	ldd	r23, Z+1	; 0x01
    165e:	82 81       	ldd	r24, Z+2	; 0x02
    1660:	93 81       	ldd	r25, Z+3	; 0x03
    1662:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1666:	dc 01       	movw	r26, r24
    1668:	cb 01       	movw	r24, r22
    166a:	f8 01       	movw	r30, r16
    166c:	91 83       	std	Z+1, r25	; 0x01
    166e:	80 83       	st	Z, r24
    1670:	de 01       	movw	r26, r28
    1672:	a6 52       	subi	r26, 0x26	; 38
    1674:	bf 4f       	sbci	r27, 0xFF	; 255
    1676:	fe 01       	movw	r30, r28
    1678:	e2 52       	subi	r30, 0x22	; 34
    167a:	ff 4f       	sbci	r31, 0xFF	; 255
    167c:	80 81       	ld	r24, Z
    167e:	91 81       	ldd	r25, Z+1	; 0x01
    1680:	11 96       	adiw	r26, 0x01	; 1
    1682:	9c 93       	st	X, r25
    1684:	8e 93       	st	-X, r24
    1686:	fe 01       	movw	r30, r28
    1688:	e6 52       	subi	r30, 0x26	; 38
    168a:	ff 4f       	sbci	r31, 0xFF	; 255
    168c:	80 81       	ld	r24, Z
    168e:	91 81       	ldd	r25, Z+1	; 0x01
    1690:	01 97       	sbiw	r24, 0x01	; 1
    1692:	f1 f7       	brne	.-4      	; 0x1690 <main+0x74a>
    1694:	fe 01       	movw	r30, r28
    1696:	e6 52       	subi	r30, 0x26	; 38
    1698:	ff 4f       	sbci	r31, 0xFF	; 255
    169a:	91 83       	std	Z+1, r25	; 0x01
    169c:	80 83       	st	Z, r24
    169e:	22 c0       	rjmp	.+68     	; 0x16e4 <main+0x79e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    16a0:	8e 01       	movw	r16, r28
    16a2:	08 51       	subi	r16, 0x18	; 24
    16a4:	1f 4f       	sbci	r17, 0xFF	; 255
    16a6:	fe 01       	movw	r30, r28
    16a8:	e7 51       	subi	r30, 0x17	; 23
    16aa:	ff 4f       	sbci	r31, 0xFF	; 255
    16ac:	60 81       	ld	r22, Z
    16ae:	71 81       	ldd	r23, Z+1	; 0x01
    16b0:	82 81       	ldd	r24, Z+2	; 0x02
    16b2:	93 81       	ldd	r25, Z+3	; 0x03
    16b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16b8:	dc 01       	movw	r26, r24
    16ba:	cb 01       	movw	r24, r22
    16bc:	f8 01       	movw	r30, r16
    16be:	80 83       	st	Z, r24
    16c0:	de 01       	movw	r26, r28
    16c2:	a7 52       	subi	r26, 0x27	; 39
    16c4:	bf 4f       	sbci	r27, 0xFF	; 255
    16c6:	fe 01       	movw	r30, r28
    16c8:	e8 51       	subi	r30, 0x18	; 24
    16ca:	ff 4f       	sbci	r31, 0xFF	; 255
    16cc:	80 81       	ld	r24, Z
    16ce:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    16d0:	fe 01       	movw	r30, r28
    16d2:	e7 52       	subi	r30, 0x27	; 39
    16d4:	ff 4f       	sbci	r31, 0xFF	; 255
    16d6:	80 81       	ld	r24, Z
    16d8:	8a 95       	dec	r24
    16da:	f1 f7       	brne	.-4      	; 0x16d8 <main+0x792>
    16dc:	fe 01       	movw	r30, r28
    16de:	e7 52       	subi	r30, 0x27	; 39
    16e0:	ff 4f       	sbci	r31, 0xFF	; 255
    16e2:	80 83       	st	Z, r24
		_delay_us(delay);
		PORTA |= (1<<PA1);
    16e4:	ab e3       	ldi	r26, 0x3B	; 59
    16e6:	b0 e0       	ldi	r27, 0x00	; 0
    16e8:	eb e3       	ldi	r30, 0x3B	; 59
    16ea:	f0 e0       	ldi	r31, 0x00	; 0
    16ec:	80 81       	ld	r24, Z
    16ee:	82 60       	ori	r24, 0x02	; 2
    16f0:	8c 93       	st	X, r24
    16f2:	fe 01       	movw	r30, r28
    16f4:	eb 52       	subi	r30, 0x2B	; 43
    16f6:	ff 4f       	sbci	r31, 0xFF	; 255
    16f8:	80 e0       	ldi	r24, 0x00	; 0
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	a0 e0       	ldi	r26, 0x00	; 0
    16fe:	b0 e4       	ldi	r27, 0x40	; 64
    1700:	80 83       	st	Z, r24
    1702:	91 83       	std	Z+1, r25	; 0x01
    1704:	a2 83       	std	Z+2, r26	; 0x02
    1706:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1708:	8e 01       	movw	r16, r28
    170a:	0f 52       	subi	r16, 0x2F	; 47
    170c:	1f 4f       	sbci	r17, 0xFF	; 255
    170e:	fe 01       	movw	r30, r28
    1710:	eb 52       	subi	r30, 0x2B	; 43
    1712:	ff 4f       	sbci	r31, 0xFF	; 255
    1714:	60 81       	ld	r22, Z
    1716:	71 81       	ldd	r23, Z+1	; 0x01
    1718:	82 81       	ldd	r24, Z+2	; 0x02
    171a:	93 81       	ldd	r25, Z+3	; 0x03
    171c:	2b ea       	ldi	r18, 0xAB	; 171
    171e:	3a ea       	ldi	r19, 0xAA	; 170
    1720:	4a ea       	ldi	r20, 0xAA	; 170
    1722:	5e e3       	ldi	r21, 0x3E	; 62
    1724:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1728:	dc 01       	movw	r26, r24
    172a:	cb 01       	movw	r24, r22
    172c:	f8 01       	movw	r30, r16
    172e:	80 83       	st	Z, r24
    1730:	91 83       	std	Z+1, r25	; 0x01
    1732:	a2 83       	std	Z+2, r26	; 0x02
    1734:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1736:	fe 01       	movw	r30, r28
    1738:	ef 52       	subi	r30, 0x2F	; 47
    173a:	ff 4f       	sbci	r31, 0xFF	; 255
    173c:	60 81       	ld	r22, Z
    173e:	71 81       	ldd	r23, Z+1	; 0x01
    1740:	82 81       	ldd	r24, Z+2	; 0x02
    1742:	93 81       	ldd	r25, Z+3	; 0x03
    1744:	20 e0       	ldi	r18, 0x00	; 0
    1746:	30 e0       	ldi	r19, 0x00	; 0
    1748:	40 e8       	ldi	r20, 0x80	; 128
    174a:	5f e3       	ldi	r21, 0x3F	; 63
    174c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1750:	88 23       	and	r24, r24
    1752:	34 f4       	brge	.+12     	; 0x1760 <main+0x81a>
		__ticks = 1;
    1754:	fe 01       	movw	r30, r28
    1756:	e0 53       	subi	r30, 0x30	; 48
    1758:	ff 4f       	sbci	r31, 0xFF	; 255
    175a:	81 e0       	ldi	r24, 0x01	; 1
    175c:	80 83       	st	Z, r24
    175e:	e0 c0       	rjmp	.+448    	; 0x1920 <main+0x9da>
	else if (__tmp > 255)
    1760:	fe 01       	movw	r30, r28
    1762:	ef 52       	subi	r30, 0x2F	; 47
    1764:	ff 4f       	sbci	r31, 0xFF	; 255
    1766:	60 81       	ld	r22, Z
    1768:	71 81       	ldd	r23, Z+1	; 0x01
    176a:	82 81       	ldd	r24, Z+2	; 0x02
    176c:	93 81       	ldd	r25, Z+3	; 0x03
    176e:	20 e0       	ldi	r18, 0x00	; 0
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	4f e7       	ldi	r20, 0x7F	; 127
    1774:	53 e4       	ldi	r21, 0x43	; 67
    1776:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    177a:	18 16       	cp	r1, r24
    177c:	0c f0       	brlt	.+2      	; 0x1780 <main+0x83a>
    177e:	c0 c0       	rjmp	.+384    	; 0x1900 <main+0x9ba>
	{
		_delay_ms(__us / 1000.0);
    1780:	fe 01       	movw	r30, r28
    1782:	eb 52       	subi	r30, 0x2B	; 43
    1784:	ff 4f       	sbci	r31, 0xFF	; 255
    1786:	60 81       	ld	r22, Z
    1788:	71 81       	ldd	r23, Z+1	; 0x01
    178a:	82 81       	ldd	r24, Z+2	; 0x02
    178c:	93 81       	ldd	r25, Z+3	; 0x03
    178e:	20 e0       	ldi	r18, 0x00	; 0
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	4a e7       	ldi	r20, 0x7A	; 122
    1794:	54 e4       	ldi	r21, 0x44	; 68
    1796:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    179a:	dc 01       	movw	r26, r24
    179c:	cb 01       	movw	r24, r22
    179e:	fe 01       	movw	r30, r28
    17a0:	e4 53       	subi	r30, 0x34	; 52
    17a2:	ff 4f       	sbci	r31, 0xFF	; 255
    17a4:	80 83       	st	Z, r24
    17a6:	91 83       	std	Z+1, r25	; 0x01
    17a8:	a2 83       	std	Z+2, r26	; 0x02
    17aa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17ac:	8e 01       	movw	r16, r28
    17ae:	08 53       	subi	r16, 0x38	; 56
    17b0:	1f 4f       	sbci	r17, 0xFF	; 255
    17b2:	fe 01       	movw	r30, r28
    17b4:	e4 53       	subi	r30, 0x34	; 52
    17b6:	ff 4f       	sbci	r31, 0xFF	; 255
    17b8:	60 81       	ld	r22, Z
    17ba:	71 81       	ldd	r23, Z+1	; 0x01
    17bc:	82 81       	ldd	r24, Z+2	; 0x02
    17be:	93 81       	ldd	r25, Z+3	; 0x03
    17c0:	20 e0       	ldi	r18, 0x00	; 0
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	4a e7       	ldi	r20, 0x7A	; 122
    17c6:	53 e4       	ldi	r21, 0x43	; 67
    17c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17cc:	dc 01       	movw	r26, r24
    17ce:	cb 01       	movw	r24, r22
    17d0:	f8 01       	movw	r30, r16
    17d2:	80 83       	st	Z, r24
    17d4:	91 83       	std	Z+1, r25	; 0x01
    17d6:	a2 83       	std	Z+2, r26	; 0x02
    17d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17da:	fe 01       	movw	r30, r28
    17dc:	e8 53       	subi	r30, 0x38	; 56
    17de:	ff 4f       	sbci	r31, 0xFF	; 255
    17e0:	60 81       	ld	r22, Z
    17e2:	71 81       	ldd	r23, Z+1	; 0x01
    17e4:	82 81       	ldd	r24, Z+2	; 0x02
    17e6:	93 81       	ldd	r25, Z+3	; 0x03
    17e8:	20 e0       	ldi	r18, 0x00	; 0
    17ea:	30 e0       	ldi	r19, 0x00	; 0
    17ec:	40 e8       	ldi	r20, 0x80	; 128
    17ee:	5f e3       	ldi	r21, 0x3F	; 63
    17f0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    17f4:	88 23       	and	r24, r24
    17f6:	44 f4       	brge	.+16     	; 0x1808 <main+0x8c2>
		__ticks = 1;
    17f8:	fe 01       	movw	r30, r28
    17fa:	ea 53       	subi	r30, 0x3A	; 58
    17fc:	ff 4f       	sbci	r31, 0xFF	; 255
    17fe:	81 e0       	ldi	r24, 0x01	; 1
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	91 83       	std	Z+1, r25	; 0x01
    1804:	80 83       	st	Z, r24
    1806:	64 c0       	rjmp	.+200    	; 0x18d0 <main+0x98a>
	else if (__tmp > 65535)
    1808:	fe 01       	movw	r30, r28
    180a:	e8 53       	subi	r30, 0x38	; 56
    180c:	ff 4f       	sbci	r31, 0xFF	; 255
    180e:	60 81       	ld	r22, Z
    1810:	71 81       	ldd	r23, Z+1	; 0x01
    1812:	82 81       	ldd	r24, Z+2	; 0x02
    1814:	93 81       	ldd	r25, Z+3	; 0x03
    1816:	20 e0       	ldi	r18, 0x00	; 0
    1818:	3f ef       	ldi	r19, 0xFF	; 255
    181a:	4f e7       	ldi	r20, 0x7F	; 127
    181c:	57 e4       	ldi	r21, 0x47	; 71
    181e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1822:	18 16       	cp	r1, r24
    1824:	0c f0       	brlt	.+2      	; 0x1828 <main+0x8e2>
    1826:	43 c0       	rjmp	.+134    	; 0x18ae <main+0x968>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1828:	fe 01       	movw	r30, r28
    182a:	e4 53       	subi	r30, 0x34	; 52
    182c:	ff 4f       	sbci	r31, 0xFF	; 255
    182e:	60 81       	ld	r22, Z
    1830:	71 81       	ldd	r23, Z+1	; 0x01
    1832:	82 81       	ldd	r24, Z+2	; 0x02
    1834:	93 81       	ldd	r25, Z+3	; 0x03
    1836:	20 e0       	ldi	r18, 0x00	; 0
    1838:	30 e0       	ldi	r19, 0x00	; 0
    183a:	40 e2       	ldi	r20, 0x20	; 32
    183c:	51 e4       	ldi	r21, 0x41	; 65
    183e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1842:	dc 01       	movw	r26, r24
    1844:	cb 01       	movw	r24, r22
    1846:	8e 01       	movw	r16, r28
    1848:	0a 53       	subi	r16, 0x3A	; 58
    184a:	1f 4f       	sbci	r17, 0xFF	; 255
    184c:	bc 01       	movw	r22, r24
    184e:	cd 01       	movw	r24, r26
    1850:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1854:	dc 01       	movw	r26, r24
    1856:	cb 01       	movw	r24, r22
    1858:	f8 01       	movw	r30, r16
    185a:	91 83       	std	Z+1, r25	; 0x01
    185c:	80 83       	st	Z, r24
    185e:	1f c0       	rjmp	.+62     	; 0x189e <main+0x958>
    1860:	fe 01       	movw	r30, r28
    1862:	ec 53       	subi	r30, 0x3C	; 60
    1864:	ff 4f       	sbci	r31, 0xFF	; 255
    1866:	89 e1       	ldi	r24, 0x19	; 25
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	91 83       	std	Z+1, r25	; 0x01
    186c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    186e:	fe 01       	movw	r30, r28
    1870:	ec 53       	subi	r30, 0x3C	; 60
    1872:	ff 4f       	sbci	r31, 0xFF	; 255
    1874:	80 81       	ld	r24, Z
    1876:	91 81       	ldd	r25, Z+1	; 0x01
    1878:	01 97       	sbiw	r24, 0x01	; 1
    187a:	f1 f7       	brne	.-4      	; 0x1878 <main+0x932>
    187c:	fe 01       	movw	r30, r28
    187e:	ec 53       	subi	r30, 0x3C	; 60
    1880:	ff 4f       	sbci	r31, 0xFF	; 255
    1882:	91 83       	std	Z+1, r25	; 0x01
    1884:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1886:	de 01       	movw	r26, r28
    1888:	aa 53       	subi	r26, 0x3A	; 58
    188a:	bf 4f       	sbci	r27, 0xFF	; 255
    188c:	fe 01       	movw	r30, r28
    188e:	ea 53       	subi	r30, 0x3A	; 58
    1890:	ff 4f       	sbci	r31, 0xFF	; 255
    1892:	80 81       	ld	r24, Z
    1894:	91 81       	ldd	r25, Z+1	; 0x01
    1896:	01 97       	sbiw	r24, 0x01	; 1
    1898:	11 96       	adiw	r26, 0x01	; 1
    189a:	9c 93       	st	X, r25
    189c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    189e:	fe 01       	movw	r30, r28
    18a0:	ea 53       	subi	r30, 0x3A	; 58
    18a2:	ff 4f       	sbci	r31, 0xFF	; 255
    18a4:	80 81       	ld	r24, Z
    18a6:	91 81       	ldd	r25, Z+1	; 0x01
    18a8:	00 97       	sbiw	r24, 0x00	; 0
    18aa:	d1 f6       	brne	.-76     	; 0x1860 <main+0x91a>
    18ac:	4b c0       	rjmp	.+150    	; 0x1944 <main+0x9fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ae:	8e 01       	movw	r16, r28
    18b0:	0a 53       	subi	r16, 0x3A	; 58
    18b2:	1f 4f       	sbci	r17, 0xFF	; 255
    18b4:	fe 01       	movw	r30, r28
    18b6:	e8 53       	subi	r30, 0x38	; 56
    18b8:	ff 4f       	sbci	r31, 0xFF	; 255
    18ba:	60 81       	ld	r22, Z
    18bc:	71 81       	ldd	r23, Z+1	; 0x01
    18be:	82 81       	ldd	r24, Z+2	; 0x02
    18c0:	93 81       	ldd	r25, Z+3	; 0x03
    18c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18c6:	dc 01       	movw	r26, r24
    18c8:	cb 01       	movw	r24, r22
    18ca:	f8 01       	movw	r30, r16
    18cc:	91 83       	std	Z+1, r25	; 0x01
    18ce:	80 83       	st	Z, r24
    18d0:	de 01       	movw	r26, r28
    18d2:	ae 53       	subi	r26, 0x3E	; 62
    18d4:	bf 4f       	sbci	r27, 0xFF	; 255
    18d6:	fe 01       	movw	r30, r28
    18d8:	ea 53       	subi	r30, 0x3A	; 58
    18da:	ff 4f       	sbci	r31, 0xFF	; 255
    18dc:	80 81       	ld	r24, Z
    18de:	91 81       	ldd	r25, Z+1	; 0x01
    18e0:	11 96       	adiw	r26, 0x01	; 1
    18e2:	9c 93       	st	X, r25
    18e4:	8e 93       	st	-X, r24
    18e6:	fe 01       	movw	r30, r28
    18e8:	ee 53       	subi	r30, 0x3E	; 62
    18ea:	ff 4f       	sbci	r31, 0xFF	; 255
    18ec:	80 81       	ld	r24, Z
    18ee:	91 81       	ldd	r25, Z+1	; 0x01
    18f0:	01 97       	sbiw	r24, 0x01	; 1
    18f2:	f1 f7       	brne	.-4      	; 0x18f0 <main+0x9aa>
    18f4:	fe 01       	movw	r30, r28
    18f6:	ee 53       	subi	r30, 0x3E	; 62
    18f8:	ff 4f       	sbci	r31, 0xFF	; 255
    18fa:	91 83       	std	Z+1, r25	; 0x01
    18fc:	80 83       	st	Z, r24
    18fe:	22 c0       	rjmp	.+68     	; 0x1944 <main+0x9fe>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1900:	8e 01       	movw	r16, r28
    1902:	00 53       	subi	r16, 0x30	; 48
    1904:	1f 4f       	sbci	r17, 0xFF	; 255
    1906:	fe 01       	movw	r30, r28
    1908:	ef 52       	subi	r30, 0x2F	; 47
    190a:	ff 4f       	sbci	r31, 0xFF	; 255
    190c:	60 81       	ld	r22, Z
    190e:	71 81       	ldd	r23, Z+1	; 0x01
    1910:	82 81       	ldd	r24, Z+2	; 0x02
    1912:	93 81       	ldd	r25, Z+3	; 0x03
    1914:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1918:	dc 01       	movw	r26, r24
    191a:	cb 01       	movw	r24, r22
    191c:	f8 01       	movw	r30, r16
    191e:	80 83       	st	Z, r24
    1920:	de 01       	movw	r26, r28
    1922:	af 53       	subi	r26, 0x3F	; 63
    1924:	bf 4f       	sbci	r27, 0xFF	; 255
    1926:	fe 01       	movw	r30, r28
    1928:	e0 53       	subi	r30, 0x30	; 48
    192a:	ff 4f       	sbci	r31, 0xFF	; 255
    192c:	80 81       	ld	r24, Z
    192e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1930:	fe 01       	movw	r30, r28
    1932:	ef 53       	subi	r30, 0x3F	; 63
    1934:	ff 4f       	sbci	r31, 0xFF	; 255
    1936:	80 81       	ld	r24, Z
    1938:	8a 95       	dec	r24
    193a:	f1 f7       	brne	.-4      	; 0x1938 <main+0x9f2>
    193c:	fe 01       	movw	r30, r28
    193e:	ef 53       	subi	r30, 0x3F	; 63
    1940:	ff 4f       	sbci	r31, 0xFF	; 255
    1942:	80 83       	st	Z, r24
		_delay_us(delay);
		PORTA &= ~(1<<PA1);
    1944:	ab e3       	ldi	r26, 0x3B	; 59
    1946:	b0 e0       	ldi	r27, 0x00	; 0
    1948:	eb e3       	ldi	r30, 0x3B	; 59
    194a:	f0 e0       	ldi	r31, 0x00	; 0
    194c:	80 81       	ld	r24, Z
    194e:	8d 7f       	andi	r24, 0xFD	; 253
    1950:	8c 93       	st	X, r24

		//digit 2
		PORTC = (PORTC & 0xF0) | (MIN0 & 0x0F);
    1952:	a5 e3       	ldi	r26, 0x35	; 53
    1954:	b0 e0       	ldi	r27, 0x00	; 0
    1956:	e5 e3       	ldi	r30, 0x35	; 53
    1958:	f0 e0       	ldi	r31, 0x00	; 0
    195a:	80 81       	ld	r24, Z
    195c:	98 2f       	mov	r25, r24
    195e:	90 7f       	andi	r25, 0xF0	; 240
    1960:	80 91 6b 00 	lds	r24, 0x006B
    1964:	8f 70       	andi	r24, 0x0F	; 15
    1966:	89 2b       	or	r24, r25
    1968:	8c 93       	st	X, r24
    196a:	fe 01       	movw	r30, r28
    196c:	e3 54       	subi	r30, 0x43	; 67
    196e:	ff 4f       	sbci	r31, 0xFF	; 255
    1970:	80 e0       	ldi	r24, 0x00	; 0
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	a0 e0       	ldi	r26, 0x00	; 0
    1976:	b0 e4       	ldi	r27, 0x40	; 64
    1978:	80 83       	st	Z, r24
    197a:	91 83       	std	Z+1, r25	; 0x01
    197c:	a2 83       	std	Z+2, r26	; 0x02
    197e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1980:	8e 01       	movw	r16, r28
    1982:	07 54       	subi	r16, 0x47	; 71
    1984:	1f 4f       	sbci	r17, 0xFF	; 255
    1986:	fe 01       	movw	r30, r28
    1988:	e3 54       	subi	r30, 0x43	; 67
    198a:	ff 4f       	sbci	r31, 0xFF	; 255
    198c:	60 81       	ld	r22, Z
    198e:	71 81       	ldd	r23, Z+1	; 0x01
    1990:	82 81       	ldd	r24, Z+2	; 0x02
    1992:	93 81       	ldd	r25, Z+3	; 0x03
    1994:	2b ea       	ldi	r18, 0xAB	; 171
    1996:	3a ea       	ldi	r19, 0xAA	; 170
    1998:	4a ea       	ldi	r20, 0xAA	; 170
    199a:	5e e3       	ldi	r21, 0x3E	; 62
    199c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19a0:	dc 01       	movw	r26, r24
    19a2:	cb 01       	movw	r24, r22
    19a4:	f8 01       	movw	r30, r16
    19a6:	80 83       	st	Z, r24
    19a8:	91 83       	std	Z+1, r25	; 0x01
    19aa:	a2 83       	std	Z+2, r26	; 0x02
    19ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19ae:	fe 01       	movw	r30, r28
    19b0:	e7 54       	subi	r30, 0x47	; 71
    19b2:	ff 4f       	sbci	r31, 0xFF	; 255
    19b4:	60 81       	ld	r22, Z
    19b6:	71 81       	ldd	r23, Z+1	; 0x01
    19b8:	82 81       	ldd	r24, Z+2	; 0x02
    19ba:	93 81       	ldd	r25, Z+3	; 0x03
    19bc:	20 e0       	ldi	r18, 0x00	; 0
    19be:	30 e0       	ldi	r19, 0x00	; 0
    19c0:	40 e8       	ldi	r20, 0x80	; 128
    19c2:	5f e3       	ldi	r21, 0x3F	; 63
    19c4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    19c8:	88 23       	and	r24, r24
    19ca:	34 f4       	brge	.+12     	; 0x19d8 <main+0xa92>
		__ticks = 1;
    19cc:	fe 01       	movw	r30, r28
    19ce:	e8 54       	subi	r30, 0x48	; 72
    19d0:	ff 4f       	sbci	r31, 0xFF	; 255
    19d2:	81 e0       	ldi	r24, 0x01	; 1
    19d4:	80 83       	st	Z, r24
    19d6:	e0 c0       	rjmp	.+448    	; 0x1b98 <main+0xc52>
	else if (__tmp > 255)
    19d8:	fe 01       	movw	r30, r28
    19da:	e7 54       	subi	r30, 0x47	; 71
    19dc:	ff 4f       	sbci	r31, 0xFF	; 255
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	20 e0       	ldi	r18, 0x00	; 0
    19e8:	30 e0       	ldi	r19, 0x00	; 0
    19ea:	4f e7       	ldi	r20, 0x7F	; 127
    19ec:	53 e4       	ldi	r21, 0x43	; 67
    19ee:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    19f2:	18 16       	cp	r1, r24
    19f4:	0c f0       	brlt	.+2      	; 0x19f8 <main+0xab2>
    19f6:	c0 c0       	rjmp	.+384    	; 0x1b78 <main+0xc32>
	{
		_delay_ms(__us / 1000.0);
    19f8:	fe 01       	movw	r30, r28
    19fa:	e3 54       	subi	r30, 0x43	; 67
    19fc:	ff 4f       	sbci	r31, 0xFF	; 255
    19fe:	60 81       	ld	r22, Z
    1a00:	71 81       	ldd	r23, Z+1	; 0x01
    1a02:	82 81       	ldd	r24, Z+2	; 0x02
    1a04:	93 81       	ldd	r25, Z+3	; 0x03
    1a06:	20 e0       	ldi	r18, 0x00	; 0
    1a08:	30 e0       	ldi	r19, 0x00	; 0
    1a0a:	4a e7       	ldi	r20, 0x7A	; 122
    1a0c:	54 e4       	ldi	r21, 0x44	; 68
    1a0e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	fe 01       	movw	r30, r28
    1a18:	ec 54       	subi	r30, 0x4C	; 76
    1a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1c:	80 83       	st	Z, r24
    1a1e:	91 83       	std	Z+1, r25	; 0x01
    1a20:	a2 83       	std	Z+2, r26	; 0x02
    1a22:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a24:	8e 01       	movw	r16, r28
    1a26:	00 55       	subi	r16, 0x50	; 80
    1a28:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2a:	fe 01       	movw	r30, r28
    1a2c:	ec 54       	subi	r30, 0x4C	; 76
    1a2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a30:	60 81       	ld	r22, Z
    1a32:	71 81       	ldd	r23, Z+1	; 0x01
    1a34:	82 81       	ldd	r24, Z+2	; 0x02
    1a36:	93 81       	ldd	r25, Z+3	; 0x03
    1a38:	20 e0       	ldi	r18, 0x00	; 0
    1a3a:	30 e0       	ldi	r19, 0x00	; 0
    1a3c:	4a e7       	ldi	r20, 0x7A	; 122
    1a3e:	53 e4       	ldi	r21, 0x43	; 67
    1a40:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a44:	dc 01       	movw	r26, r24
    1a46:	cb 01       	movw	r24, r22
    1a48:	f8 01       	movw	r30, r16
    1a4a:	80 83       	st	Z, r24
    1a4c:	91 83       	std	Z+1, r25	; 0x01
    1a4e:	a2 83       	std	Z+2, r26	; 0x02
    1a50:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a52:	fe 01       	movw	r30, r28
    1a54:	e0 55       	subi	r30, 0x50	; 80
    1a56:	ff 4f       	sbci	r31, 0xFF	; 255
    1a58:	60 81       	ld	r22, Z
    1a5a:	71 81       	ldd	r23, Z+1	; 0x01
    1a5c:	82 81       	ldd	r24, Z+2	; 0x02
    1a5e:	93 81       	ldd	r25, Z+3	; 0x03
    1a60:	20 e0       	ldi	r18, 0x00	; 0
    1a62:	30 e0       	ldi	r19, 0x00	; 0
    1a64:	40 e8       	ldi	r20, 0x80	; 128
    1a66:	5f e3       	ldi	r21, 0x3F	; 63
    1a68:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1a6c:	88 23       	and	r24, r24
    1a6e:	44 f4       	brge	.+16     	; 0x1a80 <main+0xb3a>
		__ticks = 1;
    1a70:	fe 01       	movw	r30, r28
    1a72:	e2 55       	subi	r30, 0x52	; 82
    1a74:	ff 4f       	sbci	r31, 0xFF	; 255
    1a76:	81 e0       	ldi	r24, 0x01	; 1
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	91 83       	std	Z+1, r25	; 0x01
    1a7c:	80 83       	st	Z, r24
    1a7e:	64 c0       	rjmp	.+200    	; 0x1b48 <main+0xc02>
	else if (__tmp > 65535)
    1a80:	fe 01       	movw	r30, r28
    1a82:	e0 55       	subi	r30, 0x50	; 80
    1a84:	ff 4f       	sbci	r31, 0xFF	; 255
    1a86:	60 81       	ld	r22, Z
    1a88:	71 81       	ldd	r23, Z+1	; 0x01
    1a8a:	82 81       	ldd	r24, Z+2	; 0x02
    1a8c:	93 81       	ldd	r25, Z+3	; 0x03
    1a8e:	20 e0       	ldi	r18, 0x00	; 0
    1a90:	3f ef       	ldi	r19, 0xFF	; 255
    1a92:	4f e7       	ldi	r20, 0x7F	; 127
    1a94:	57 e4       	ldi	r21, 0x47	; 71
    1a96:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1a9a:	18 16       	cp	r1, r24
    1a9c:	0c f0       	brlt	.+2      	; 0x1aa0 <main+0xb5a>
    1a9e:	43 c0       	rjmp	.+134    	; 0x1b26 <main+0xbe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aa0:	fe 01       	movw	r30, r28
    1aa2:	ec 54       	subi	r30, 0x4C	; 76
    1aa4:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa6:	60 81       	ld	r22, Z
    1aa8:	71 81       	ldd	r23, Z+1	; 0x01
    1aaa:	82 81       	ldd	r24, Z+2	; 0x02
    1aac:	93 81       	ldd	r25, Z+3	; 0x03
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	40 e2       	ldi	r20, 0x20	; 32
    1ab4:	51 e4       	ldi	r21, 0x41	; 65
    1ab6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1aba:	dc 01       	movw	r26, r24
    1abc:	cb 01       	movw	r24, r22
    1abe:	8e 01       	movw	r16, r28
    1ac0:	02 55       	subi	r16, 0x52	; 82
    1ac2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac4:	bc 01       	movw	r22, r24
    1ac6:	cd 01       	movw	r24, r26
    1ac8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1acc:	dc 01       	movw	r26, r24
    1ace:	cb 01       	movw	r24, r22
    1ad0:	f8 01       	movw	r30, r16
    1ad2:	91 83       	std	Z+1, r25	; 0x01
    1ad4:	80 83       	st	Z, r24
    1ad6:	1f c0       	rjmp	.+62     	; 0x1b16 <main+0xbd0>
    1ad8:	fe 01       	movw	r30, r28
    1ada:	e4 55       	subi	r30, 0x54	; 84
    1adc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ade:	89 e1       	ldi	r24, 0x19	; 25
    1ae0:	90 e0       	ldi	r25, 0x00	; 0
    1ae2:	91 83       	std	Z+1, r25	; 0x01
    1ae4:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1ae6:	fe 01       	movw	r30, r28
    1ae8:	e4 55       	subi	r30, 0x54	; 84
    1aea:	ff 4f       	sbci	r31, 0xFF	; 255
    1aec:	80 81       	ld	r24, Z
    1aee:	91 81       	ldd	r25, Z+1	; 0x01
    1af0:	01 97       	sbiw	r24, 0x01	; 1
    1af2:	f1 f7       	brne	.-4      	; 0x1af0 <main+0xbaa>
    1af4:	fe 01       	movw	r30, r28
    1af6:	e4 55       	subi	r30, 0x54	; 84
    1af8:	ff 4f       	sbci	r31, 0xFF	; 255
    1afa:	91 83       	std	Z+1, r25	; 0x01
    1afc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1afe:	de 01       	movw	r26, r28
    1b00:	a2 55       	subi	r26, 0x52	; 82
    1b02:	bf 4f       	sbci	r27, 0xFF	; 255
    1b04:	fe 01       	movw	r30, r28
    1b06:	e2 55       	subi	r30, 0x52	; 82
    1b08:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0a:	80 81       	ld	r24, Z
    1b0c:	91 81       	ldd	r25, Z+1	; 0x01
    1b0e:	01 97       	sbiw	r24, 0x01	; 1
    1b10:	11 96       	adiw	r26, 0x01	; 1
    1b12:	9c 93       	st	X, r25
    1b14:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b16:	fe 01       	movw	r30, r28
    1b18:	e2 55       	subi	r30, 0x52	; 82
    1b1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1c:	80 81       	ld	r24, Z
    1b1e:	91 81       	ldd	r25, Z+1	; 0x01
    1b20:	00 97       	sbiw	r24, 0x00	; 0
    1b22:	d1 f6       	brne	.-76     	; 0x1ad8 <main+0xb92>
    1b24:	4b c0       	rjmp	.+150    	; 0x1bbc <main+0xc76>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b26:	8e 01       	movw	r16, r28
    1b28:	02 55       	subi	r16, 0x52	; 82
    1b2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b2c:	fe 01       	movw	r30, r28
    1b2e:	e0 55       	subi	r30, 0x50	; 80
    1b30:	ff 4f       	sbci	r31, 0xFF	; 255
    1b32:	60 81       	ld	r22, Z
    1b34:	71 81       	ldd	r23, Z+1	; 0x01
    1b36:	82 81       	ldd	r24, Z+2	; 0x02
    1b38:	93 81       	ldd	r25, Z+3	; 0x03
    1b3a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b3e:	dc 01       	movw	r26, r24
    1b40:	cb 01       	movw	r24, r22
    1b42:	f8 01       	movw	r30, r16
    1b44:	91 83       	std	Z+1, r25	; 0x01
    1b46:	80 83       	st	Z, r24
    1b48:	de 01       	movw	r26, r28
    1b4a:	a6 55       	subi	r26, 0x56	; 86
    1b4c:	bf 4f       	sbci	r27, 0xFF	; 255
    1b4e:	fe 01       	movw	r30, r28
    1b50:	e2 55       	subi	r30, 0x52	; 82
    1b52:	ff 4f       	sbci	r31, 0xFF	; 255
    1b54:	80 81       	ld	r24, Z
    1b56:	91 81       	ldd	r25, Z+1	; 0x01
    1b58:	11 96       	adiw	r26, 0x01	; 1
    1b5a:	9c 93       	st	X, r25
    1b5c:	8e 93       	st	-X, r24
    1b5e:	fe 01       	movw	r30, r28
    1b60:	e6 55       	subi	r30, 0x56	; 86
    1b62:	ff 4f       	sbci	r31, 0xFF	; 255
    1b64:	80 81       	ld	r24, Z
    1b66:	91 81       	ldd	r25, Z+1	; 0x01
    1b68:	01 97       	sbiw	r24, 0x01	; 1
    1b6a:	f1 f7       	brne	.-4      	; 0x1b68 <main+0xc22>
    1b6c:	fe 01       	movw	r30, r28
    1b6e:	e6 55       	subi	r30, 0x56	; 86
    1b70:	ff 4f       	sbci	r31, 0xFF	; 255
    1b72:	91 83       	std	Z+1, r25	; 0x01
    1b74:	80 83       	st	Z, r24
    1b76:	22 c0       	rjmp	.+68     	; 0x1bbc <main+0xc76>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1b78:	8e 01       	movw	r16, r28
    1b7a:	08 54       	subi	r16, 0x48	; 72
    1b7c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b7e:	fe 01       	movw	r30, r28
    1b80:	e7 54       	subi	r30, 0x47	; 71
    1b82:	ff 4f       	sbci	r31, 0xFF	; 255
    1b84:	60 81       	ld	r22, Z
    1b86:	71 81       	ldd	r23, Z+1	; 0x01
    1b88:	82 81       	ldd	r24, Z+2	; 0x02
    1b8a:	93 81       	ldd	r25, Z+3	; 0x03
    1b8c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b90:	dc 01       	movw	r26, r24
    1b92:	cb 01       	movw	r24, r22
    1b94:	f8 01       	movw	r30, r16
    1b96:	80 83       	st	Z, r24
    1b98:	de 01       	movw	r26, r28
    1b9a:	a7 55       	subi	r26, 0x57	; 87
    1b9c:	bf 4f       	sbci	r27, 0xFF	; 255
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	e8 54       	subi	r30, 0x48	; 72
    1ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba4:	80 81       	ld	r24, Z
    1ba6:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1ba8:	fe 01       	movw	r30, r28
    1baa:	e7 55       	subi	r30, 0x57	; 87
    1bac:	ff 4f       	sbci	r31, 0xFF	; 255
    1bae:	80 81       	ld	r24, Z
    1bb0:	8a 95       	dec	r24
    1bb2:	f1 f7       	brne	.-4      	; 0x1bb0 <main+0xc6a>
    1bb4:	fe 01       	movw	r30, r28
    1bb6:	e7 55       	subi	r30, 0x57	; 87
    1bb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bba:	80 83       	st	Z, r24
		_delay_us(delay);
		PORTA |= (1<<PA2);
    1bbc:	ab e3       	ldi	r26, 0x3B	; 59
    1bbe:	b0 e0       	ldi	r27, 0x00	; 0
    1bc0:	eb e3       	ldi	r30, 0x3B	; 59
    1bc2:	f0 e0       	ldi	r31, 0x00	; 0
    1bc4:	80 81       	ld	r24, Z
    1bc6:	84 60       	ori	r24, 0x04	; 4
    1bc8:	8c 93       	st	X, r24
    1bca:	fe 01       	movw	r30, r28
    1bcc:	eb 55       	subi	r30, 0x5B	; 91
    1bce:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd0:	80 e0       	ldi	r24, 0x00	; 0
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	a0 e0       	ldi	r26, 0x00	; 0
    1bd6:	b0 e4       	ldi	r27, 0x40	; 64
    1bd8:	80 83       	st	Z, r24
    1bda:	91 83       	std	Z+1, r25	; 0x01
    1bdc:	a2 83       	std	Z+2, r26	; 0x02
    1bde:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1be0:	8e 01       	movw	r16, r28
    1be2:	0f 55       	subi	r16, 0x5F	; 95
    1be4:	1f 4f       	sbci	r17, 0xFF	; 255
    1be6:	fe 01       	movw	r30, r28
    1be8:	eb 55       	subi	r30, 0x5B	; 91
    1bea:	ff 4f       	sbci	r31, 0xFF	; 255
    1bec:	60 81       	ld	r22, Z
    1bee:	71 81       	ldd	r23, Z+1	; 0x01
    1bf0:	82 81       	ldd	r24, Z+2	; 0x02
    1bf2:	93 81       	ldd	r25, Z+3	; 0x03
    1bf4:	2b ea       	ldi	r18, 0xAB	; 171
    1bf6:	3a ea       	ldi	r19, 0xAA	; 170
    1bf8:	4a ea       	ldi	r20, 0xAA	; 170
    1bfa:	5e e3       	ldi	r21, 0x3E	; 62
    1bfc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c00:	dc 01       	movw	r26, r24
    1c02:	cb 01       	movw	r24, r22
    1c04:	f8 01       	movw	r30, r16
    1c06:	80 83       	st	Z, r24
    1c08:	91 83       	std	Z+1, r25	; 0x01
    1c0a:	a2 83       	std	Z+2, r26	; 0x02
    1c0c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c0e:	fe 01       	movw	r30, r28
    1c10:	ef 55       	subi	r30, 0x5F	; 95
    1c12:	ff 4f       	sbci	r31, 0xFF	; 255
    1c14:	60 81       	ld	r22, Z
    1c16:	71 81       	ldd	r23, Z+1	; 0x01
    1c18:	82 81       	ldd	r24, Z+2	; 0x02
    1c1a:	93 81       	ldd	r25, Z+3	; 0x03
    1c1c:	20 e0       	ldi	r18, 0x00	; 0
    1c1e:	30 e0       	ldi	r19, 0x00	; 0
    1c20:	40 e8       	ldi	r20, 0x80	; 128
    1c22:	5f e3       	ldi	r21, 0x3F	; 63
    1c24:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1c28:	88 23       	and	r24, r24
    1c2a:	34 f4       	brge	.+12     	; 0x1c38 <main+0xcf2>
		__ticks = 1;
    1c2c:	fe 01       	movw	r30, r28
    1c2e:	e0 56       	subi	r30, 0x60	; 96
    1c30:	ff 4f       	sbci	r31, 0xFF	; 255
    1c32:	81 e0       	ldi	r24, 0x01	; 1
    1c34:	80 83       	st	Z, r24
    1c36:	e0 c0       	rjmp	.+448    	; 0x1df8 <main+0xeb2>
	else if (__tmp > 255)
    1c38:	fe 01       	movw	r30, r28
    1c3a:	ef 55       	subi	r30, 0x5F	; 95
    1c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3e:	60 81       	ld	r22, Z
    1c40:	71 81       	ldd	r23, Z+1	; 0x01
    1c42:	82 81       	ldd	r24, Z+2	; 0x02
    1c44:	93 81       	ldd	r25, Z+3	; 0x03
    1c46:	20 e0       	ldi	r18, 0x00	; 0
    1c48:	30 e0       	ldi	r19, 0x00	; 0
    1c4a:	4f e7       	ldi	r20, 0x7F	; 127
    1c4c:	53 e4       	ldi	r21, 0x43	; 67
    1c4e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1c52:	18 16       	cp	r1, r24
    1c54:	0c f0       	brlt	.+2      	; 0x1c58 <main+0xd12>
    1c56:	c0 c0       	rjmp	.+384    	; 0x1dd8 <main+0xe92>
	{
		_delay_ms(__us / 1000.0);
    1c58:	fe 01       	movw	r30, r28
    1c5a:	eb 55       	subi	r30, 0x5B	; 91
    1c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5e:	60 81       	ld	r22, Z
    1c60:	71 81       	ldd	r23, Z+1	; 0x01
    1c62:	82 81       	ldd	r24, Z+2	; 0x02
    1c64:	93 81       	ldd	r25, Z+3	; 0x03
    1c66:	20 e0       	ldi	r18, 0x00	; 0
    1c68:	30 e0       	ldi	r19, 0x00	; 0
    1c6a:	4a e7       	ldi	r20, 0x7A	; 122
    1c6c:	54 e4       	ldi	r21, 0x44	; 68
    1c6e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1c72:	dc 01       	movw	r26, r24
    1c74:	cb 01       	movw	r24, r22
    1c76:	fe 01       	movw	r30, r28
    1c78:	e4 56       	subi	r30, 0x64	; 100
    1c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7c:	80 83       	st	Z, r24
    1c7e:	91 83       	std	Z+1, r25	; 0x01
    1c80:	a2 83       	std	Z+2, r26	; 0x02
    1c82:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c84:	8e 01       	movw	r16, r28
    1c86:	08 56       	subi	r16, 0x68	; 104
    1c88:	1f 4f       	sbci	r17, 0xFF	; 255
    1c8a:	fe 01       	movw	r30, r28
    1c8c:	e4 56       	subi	r30, 0x64	; 100
    1c8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c90:	60 81       	ld	r22, Z
    1c92:	71 81       	ldd	r23, Z+1	; 0x01
    1c94:	82 81       	ldd	r24, Z+2	; 0x02
    1c96:	93 81       	ldd	r25, Z+3	; 0x03
    1c98:	20 e0       	ldi	r18, 0x00	; 0
    1c9a:	30 e0       	ldi	r19, 0x00	; 0
    1c9c:	4a e7       	ldi	r20, 0x7A	; 122
    1c9e:	53 e4       	ldi	r21, 0x43	; 67
    1ca0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ca4:	dc 01       	movw	r26, r24
    1ca6:	cb 01       	movw	r24, r22
    1ca8:	f8 01       	movw	r30, r16
    1caa:	80 83       	st	Z, r24
    1cac:	91 83       	std	Z+1, r25	; 0x01
    1cae:	a2 83       	std	Z+2, r26	; 0x02
    1cb0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cb2:	fe 01       	movw	r30, r28
    1cb4:	e8 56       	subi	r30, 0x68	; 104
    1cb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb8:	60 81       	ld	r22, Z
    1cba:	71 81       	ldd	r23, Z+1	; 0x01
    1cbc:	82 81       	ldd	r24, Z+2	; 0x02
    1cbe:	93 81       	ldd	r25, Z+3	; 0x03
    1cc0:	20 e0       	ldi	r18, 0x00	; 0
    1cc2:	30 e0       	ldi	r19, 0x00	; 0
    1cc4:	40 e8       	ldi	r20, 0x80	; 128
    1cc6:	5f e3       	ldi	r21, 0x3F	; 63
    1cc8:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1ccc:	88 23       	and	r24, r24
    1cce:	44 f4       	brge	.+16     	; 0x1ce0 <main+0xd9a>
		__ticks = 1;
    1cd0:	fe 01       	movw	r30, r28
    1cd2:	ea 56       	subi	r30, 0x6A	; 106
    1cd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd6:	81 e0       	ldi	r24, 0x01	; 1
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	91 83       	std	Z+1, r25	; 0x01
    1cdc:	80 83       	st	Z, r24
    1cde:	64 c0       	rjmp	.+200    	; 0x1da8 <main+0xe62>
	else if (__tmp > 65535)
    1ce0:	fe 01       	movw	r30, r28
    1ce2:	e8 56       	subi	r30, 0x68	; 104
    1ce4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce6:	60 81       	ld	r22, Z
    1ce8:	71 81       	ldd	r23, Z+1	; 0x01
    1cea:	82 81       	ldd	r24, Z+2	; 0x02
    1cec:	93 81       	ldd	r25, Z+3	; 0x03
    1cee:	20 e0       	ldi	r18, 0x00	; 0
    1cf0:	3f ef       	ldi	r19, 0xFF	; 255
    1cf2:	4f e7       	ldi	r20, 0x7F	; 127
    1cf4:	57 e4       	ldi	r21, 0x47	; 71
    1cf6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1cfa:	18 16       	cp	r1, r24
    1cfc:	0c f0       	brlt	.+2      	; 0x1d00 <main+0xdba>
    1cfe:	43 c0       	rjmp	.+134    	; 0x1d86 <main+0xe40>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d00:	fe 01       	movw	r30, r28
    1d02:	e4 56       	subi	r30, 0x64	; 100
    1d04:	ff 4f       	sbci	r31, 0xFF	; 255
    1d06:	60 81       	ld	r22, Z
    1d08:	71 81       	ldd	r23, Z+1	; 0x01
    1d0a:	82 81       	ldd	r24, Z+2	; 0x02
    1d0c:	93 81       	ldd	r25, Z+3	; 0x03
    1d0e:	20 e0       	ldi	r18, 0x00	; 0
    1d10:	30 e0       	ldi	r19, 0x00	; 0
    1d12:	40 e2       	ldi	r20, 0x20	; 32
    1d14:	51 e4       	ldi	r21, 0x41	; 65
    1d16:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d1a:	dc 01       	movw	r26, r24
    1d1c:	cb 01       	movw	r24, r22
    1d1e:	8e 01       	movw	r16, r28
    1d20:	0a 56       	subi	r16, 0x6A	; 106
    1d22:	1f 4f       	sbci	r17, 0xFF	; 255
    1d24:	bc 01       	movw	r22, r24
    1d26:	cd 01       	movw	r24, r26
    1d28:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d2c:	dc 01       	movw	r26, r24
    1d2e:	cb 01       	movw	r24, r22
    1d30:	f8 01       	movw	r30, r16
    1d32:	91 83       	std	Z+1, r25	; 0x01
    1d34:	80 83       	st	Z, r24
    1d36:	1f c0       	rjmp	.+62     	; 0x1d76 <main+0xe30>
    1d38:	fe 01       	movw	r30, r28
    1d3a:	ec 56       	subi	r30, 0x6C	; 108
    1d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3e:	89 e1       	ldi	r24, 0x19	; 25
    1d40:	90 e0       	ldi	r25, 0x00	; 0
    1d42:	91 83       	std	Z+1, r25	; 0x01
    1d44:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1d46:	fe 01       	movw	r30, r28
    1d48:	ec 56       	subi	r30, 0x6C	; 108
    1d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4c:	80 81       	ld	r24, Z
    1d4e:	91 81       	ldd	r25, Z+1	; 0x01
    1d50:	01 97       	sbiw	r24, 0x01	; 1
    1d52:	f1 f7       	brne	.-4      	; 0x1d50 <main+0xe0a>
    1d54:	fe 01       	movw	r30, r28
    1d56:	ec 56       	subi	r30, 0x6C	; 108
    1d58:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5a:	91 83       	std	Z+1, r25	; 0x01
    1d5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d5e:	de 01       	movw	r26, r28
    1d60:	aa 56       	subi	r26, 0x6A	; 106
    1d62:	bf 4f       	sbci	r27, 0xFF	; 255
    1d64:	fe 01       	movw	r30, r28
    1d66:	ea 56       	subi	r30, 0x6A	; 106
    1d68:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6a:	80 81       	ld	r24, Z
    1d6c:	91 81       	ldd	r25, Z+1	; 0x01
    1d6e:	01 97       	sbiw	r24, 0x01	; 1
    1d70:	11 96       	adiw	r26, 0x01	; 1
    1d72:	9c 93       	st	X, r25
    1d74:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d76:	fe 01       	movw	r30, r28
    1d78:	ea 56       	subi	r30, 0x6A	; 106
    1d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7c:	80 81       	ld	r24, Z
    1d7e:	91 81       	ldd	r25, Z+1	; 0x01
    1d80:	00 97       	sbiw	r24, 0x00	; 0
    1d82:	d1 f6       	brne	.-76     	; 0x1d38 <main+0xdf2>
    1d84:	4b c0       	rjmp	.+150    	; 0x1e1c <main+0xed6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d86:	8e 01       	movw	r16, r28
    1d88:	0a 56       	subi	r16, 0x6A	; 106
    1d8a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d8c:	fe 01       	movw	r30, r28
    1d8e:	e8 56       	subi	r30, 0x68	; 104
    1d90:	ff 4f       	sbci	r31, 0xFF	; 255
    1d92:	60 81       	ld	r22, Z
    1d94:	71 81       	ldd	r23, Z+1	; 0x01
    1d96:	82 81       	ldd	r24, Z+2	; 0x02
    1d98:	93 81       	ldd	r25, Z+3	; 0x03
    1d9a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d9e:	dc 01       	movw	r26, r24
    1da0:	cb 01       	movw	r24, r22
    1da2:	f8 01       	movw	r30, r16
    1da4:	91 83       	std	Z+1, r25	; 0x01
    1da6:	80 83       	st	Z, r24
    1da8:	de 01       	movw	r26, r28
    1daa:	ae 56       	subi	r26, 0x6E	; 110
    1dac:	bf 4f       	sbci	r27, 0xFF	; 255
    1dae:	fe 01       	movw	r30, r28
    1db0:	ea 56       	subi	r30, 0x6A	; 106
    1db2:	ff 4f       	sbci	r31, 0xFF	; 255
    1db4:	80 81       	ld	r24, Z
    1db6:	91 81       	ldd	r25, Z+1	; 0x01
    1db8:	11 96       	adiw	r26, 0x01	; 1
    1dba:	9c 93       	st	X, r25
    1dbc:	8e 93       	st	-X, r24
    1dbe:	fe 01       	movw	r30, r28
    1dc0:	ee 56       	subi	r30, 0x6E	; 110
    1dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc4:	80 81       	ld	r24, Z
    1dc6:	91 81       	ldd	r25, Z+1	; 0x01
    1dc8:	01 97       	sbiw	r24, 0x01	; 1
    1dca:	f1 f7       	brne	.-4      	; 0x1dc8 <main+0xe82>
    1dcc:	fe 01       	movw	r30, r28
    1dce:	ee 56       	subi	r30, 0x6E	; 110
    1dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd2:	91 83       	std	Z+1, r25	; 0x01
    1dd4:	80 83       	st	Z, r24
    1dd6:	22 c0       	rjmp	.+68     	; 0x1e1c <main+0xed6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1dd8:	8e 01       	movw	r16, r28
    1dda:	00 56       	subi	r16, 0x60	; 96
    1ddc:	1f 4f       	sbci	r17, 0xFF	; 255
    1dde:	fe 01       	movw	r30, r28
    1de0:	ef 55       	subi	r30, 0x5F	; 95
    1de2:	ff 4f       	sbci	r31, 0xFF	; 255
    1de4:	60 81       	ld	r22, Z
    1de6:	71 81       	ldd	r23, Z+1	; 0x01
    1de8:	82 81       	ldd	r24, Z+2	; 0x02
    1dea:	93 81       	ldd	r25, Z+3	; 0x03
    1dec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1df0:	dc 01       	movw	r26, r24
    1df2:	cb 01       	movw	r24, r22
    1df4:	f8 01       	movw	r30, r16
    1df6:	80 83       	st	Z, r24
    1df8:	de 01       	movw	r26, r28
    1dfa:	af 56       	subi	r26, 0x6F	; 111
    1dfc:	bf 4f       	sbci	r27, 0xFF	; 255
    1dfe:	fe 01       	movw	r30, r28
    1e00:	e0 56       	subi	r30, 0x60	; 96
    1e02:	ff 4f       	sbci	r31, 0xFF	; 255
    1e04:	80 81       	ld	r24, Z
    1e06:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1e08:	fe 01       	movw	r30, r28
    1e0a:	ef 56       	subi	r30, 0x6F	; 111
    1e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0e:	80 81       	ld	r24, Z
    1e10:	8a 95       	dec	r24
    1e12:	f1 f7       	brne	.-4      	; 0x1e10 <main+0xeca>
    1e14:	fe 01       	movw	r30, r28
    1e16:	ef 56       	subi	r30, 0x6F	; 111
    1e18:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1a:	80 83       	st	Z, r24
		_delay_us(delay);
		PORTA &= ~(1<<PA2);
    1e1c:	ab e3       	ldi	r26, 0x3B	; 59
    1e1e:	b0 e0       	ldi	r27, 0x00	; 0
    1e20:	eb e3       	ldi	r30, 0x3B	; 59
    1e22:	f0 e0       	ldi	r31, 0x00	; 0
    1e24:	80 81       	ld	r24, Z
    1e26:	8b 7f       	andi	r24, 0xFB	; 251
    1e28:	8c 93       	st	X, r24

		//digit 3
		PORTC = (PORTC & 0xF0) | (MIN1 & 0x0F);
    1e2a:	a5 e3       	ldi	r26, 0x35	; 53
    1e2c:	b0 e0       	ldi	r27, 0x00	; 0
    1e2e:	e5 e3       	ldi	r30, 0x35	; 53
    1e30:	f0 e0       	ldi	r31, 0x00	; 0
    1e32:	80 81       	ld	r24, Z
    1e34:	98 2f       	mov	r25, r24
    1e36:	90 7f       	andi	r25, 0xF0	; 240
    1e38:	80 91 6c 00 	lds	r24, 0x006C
    1e3c:	8f 70       	andi	r24, 0x0F	; 15
    1e3e:	89 2b       	or	r24, r25
    1e40:	8c 93       	st	X, r24
    1e42:	fe 01       	movw	r30, r28
    1e44:	e3 57       	subi	r30, 0x73	; 115
    1e46:	ff 4f       	sbci	r31, 0xFF	; 255
    1e48:	80 e0       	ldi	r24, 0x00	; 0
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	a0 e0       	ldi	r26, 0x00	; 0
    1e4e:	b0 e4       	ldi	r27, 0x40	; 64
    1e50:	80 83       	st	Z, r24
    1e52:	91 83       	std	Z+1, r25	; 0x01
    1e54:	a2 83       	std	Z+2, r26	; 0x02
    1e56:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1e58:	8e 01       	movw	r16, r28
    1e5a:	07 57       	subi	r16, 0x77	; 119
    1e5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1e5e:	fe 01       	movw	r30, r28
    1e60:	e3 57       	subi	r30, 0x73	; 115
    1e62:	ff 4f       	sbci	r31, 0xFF	; 255
    1e64:	60 81       	ld	r22, Z
    1e66:	71 81       	ldd	r23, Z+1	; 0x01
    1e68:	82 81       	ldd	r24, Z+2	; 0x02
    1e6a:	93 81       	ldd	r25, Z+3	; 0x03
    1e6c:	2b ea       	ldi	r18, 0xAB	; 171
    1e6e:	3a ea       	ldi	r19, 0xAA	; 170
    1e70:	4a ea       	ldi	r20, 0xAA	; 170
    1e72:	5e e3       	ldi	r21, 0x3E	; 62
    1e74:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e78:	dc 01       	movw	r26, r24
    1e7a:	cb 01       	movw	r24, r22
    1e7c:	f8 01       	movw	r30, r16
    1e7e:	80 83       	st	Z, r24
    1e80:	91 83       	std	Z+1, r25	; 0x01
    1e82:	a2 83       	std	Z+2, r26	; 0x02
    1e84:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e86:	fe 01       	movw	r30, r28
    1e88:	e7 57       	subi	r30, 0x77	; 119
    1e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8c:	60 81       	ld	r22, Z
    1e8e:	71 81       	ldd	r23, Z+1	; 0x01
    1e90:	82 81       	ldd	r24, Z+2	; 0x02
    1e92:	93 81       	ldd	r25, Z+3	; 0x03
    1e94:	20 e0       	ldi	r18, 0x00	; 0
    1e96:	30 e0       	ldi	r19, 0x00	; 0
    1e98:	40 e8       	ldi	r20, 0x80	; 128
    1e9a:	5f e3       	ldi	r21, 0x3F	; 63
    1e9c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1ea0:	88 23       	and	r24, r24
    1ea2:	34 f4       	brge	.+12     	; 0x1eb0 <main+0xf6a>
		__ticks = 1;
    1ea4:	fe 01       	movw	r30, r28
    1ea6:	e8 57       	subi	r30, 0x78	; 120
    1ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eaa:	81 e0       	ldi	r24, 0x01	; 1
    1eac:	80 83       	st	Z, r24
    1eae:	e0 c0       	rjmp	.+448    	; 0x2070 <main+0x112a>
	else if (__tmp > 255)
    1eb0:	fe 01       	movw	r30, r28
    1eb2:	e7 57       	subi	r30, 0x77	; 119
    1eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb6:	60 81       	ld	r22, Z
    1eb8:	71 81       	ldd	r23, Z+1	; 0x01
    1eba:	82 81       	ldd	r24, Z+2	; 0x02
    1ebc:	93 81       	ldd	r25, Z+3	; 0x03
    1ebe:	20 e0       	ldi	r18, 0x00	; 0
    1ec0:	30 e0       	ldi	r19, 0x00	; 0
    1ec2:	4f e7       	ldi	r20, 0x7F	; 127
    1ec4:	53 e4       	ldi	r21, 0x43	; 67
    1ec6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1eca:	18 16       	cp	r1, r24
    1ecc:	0c f0       	brlt	.+2      	; 0x1ed0 <main+0xf8a>
    1ece:	c0 c0       	rjmp	.+384    	; 0x2050 <main+0x110a>
	{
		_delay_ms(__us / 1000.0);
    1ed0:	fe 01       	movw	r30, r28
    1ed2:	e3 57       	subi	r30, 0x73	; 115
    1ed4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed6:	60 81       	ld	r22, Z
    1ed8:	71 81       	ldd	r23, Z+1	; 0x01
    1eda:	82 81       	ldd	r24, Z+2	; 0x02
    1edc:	93 81       	ldd	r25, Z+3	; 0x03
    1ede:	20 e0       	ldi	r18, 0x00	; 0
    1ee0:	30 e0       	ldi	r19, 0x00	; 0
    1ee2:	4a e7       	ldi	r20, 0x7A	; 122
    1ee4:	54 e4       	ldi	r21, 0x44	; 68
    1ee6:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1eea:	dc 01       	movw	r26, r24
    1eec:	cb 01       	movw	r24, r22
    1eee:	fe 01       	movw	r30, r28
    1ef0:	ec 57       	subi	r30, 0x7C	; 124
    1ef2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef4:	80 83       	st	Z, r24
    1ef6:	91 83       	std	Z+1, r25	; 0x01
    1ef8:	a2 83       	std	Z+2, r26	; 0x02
    1efa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1efc:	8e 01       	movw	r16, r28
    1efe:	00 58       	subi	r16, 0x80	; 128
    1f00:	1f 4f       	sbci	r17, 0xFF	; 255
    1f02:	fe 01       	movw	r30, r28
    1f04:	ec 57       	subi	r30, 0x7C	; 124
    1f06:	ff 4f       	sbci	r31, 0xFF	; 255
    1f08:	60 81       	ld	r22, Z
    1f0a:	71 81       	ldd	r23, Z+1	; 0x01
    1f0c:	82 81       	ldd	r24, Z+2	; 0x02
    1f0e:	93 81       	ldd	r25, Z+3	; 0x03
    1f10:	20 e0       	ldi	r18, 0x00	; 0
    1f12:	30 e0       	ldi	r19, 0x00	; 0
    1f14:	4a e7       	ldi	r20, 0x7A	; 122
    1f16:	53 e4       	ldi	r21, 0x43	; 67
    1f18:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f1c:	dc 01       	movw	r26, r24
    1f1e:	cb 01       	movw	r24, r22
    1f20:	f8 01       	movw	r30, r16
    1f22:	80 83       	st	Z, r24
    1f24:	91 83       	std	Z+1, r25	; 0x01
    1f26:	a2 83       	std	Z+2, r26	; 0x02
    1f28:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f2a:	fe 01       	movw	r30, r28
    1f2c:	e0 58       	subi	r30, 0x80	; 128
    1f2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f30:	60 81       	ld	r22, Z
    1f32:	71 81       	ldd	r23, Z+1	; 0x01
    1f34:	82 81       	ldd	r24, Z+2	; 0x02
    1f36:	93 81       	ldd	r25, Z+3	; 0x03
    1f38:	20 e0       	ldi	r18, 0x00	; 0
    1f3a:	30 e0       	ldi	r19, 0x00	; 0
    1f3c:	40 e8       	ldi	r20, 0x80	; 128
    1f3e:	5f e3       	ldi	r21, 0x3F	; 63
    1f40:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1f44:	88 23       	and	r24, r24
    1f46:	44 f4       	brge	.+16     	; 0x1f58 <main+0x1012>
		__ticks = 1;
    1f48:	fe 01       	movw	r30, r28
    1f4a:	e2 58       	subi	r30, 0x82	; 130
    1f4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4e:	81 e0       	ldi	r24, 0x01	; 1
    1f50:	90 e0       	ldi	r25, 0x00	; 0
    1f52:	91 83       	std	Z+1, r25	; 0x01
    1f54:	80 83       	st	Z, r24
    1f56:	64 c0       	rjmp	.+200    	; 0x2020 <main+0x10da>
	else if (__tmp > 65535)
    1f58:	fe 01       	movw	r30, r28
    1f5a:	e0 58       	subi	r30, 0x80	; 128
    1f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5e:	60 81       	ld	r22, Z
    1f60:	71 81       	ldd	r23, Z+1	; 0x01
    1f62:	82 81       	ldd	r24, Z+2	; 0x02
    1f64:	93 81       	ldd	r25, Z+3	; 0x03
    1f66:	20 e0       	ldi	r18, 0x00	; 0
    1f68:	3f ef       	ldi	r19, 0xFF	; 255
    1f6a:	4f e7       	ldi	r20, 0x7F	; 127
    1f6c:	57 e4       	ldi	r21, 0x47	; 71
    1f6e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1f72:	18 16       	cp	r1, r24
    1f74:	0c f0       	brlt	.+2      	; 0x1f78 <main+0x1032>
    1f76:	43 c0       	rjmp	.+134    	; 0x1ffe <main+0x10b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f78:	fe 01       	movw	r30, r28
    1f7a:	ec 57       	subi	r30, 0x7C	; 124
    1f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7e:	60 81       	ld	r22, Z
    1f80:	71 81       	ldd	r23, Z+1	; 0x01
    1f82:	82 81       	ldd	r24, Z+2	; 0x02
    1f84:	93 81       	ldd	r25, Z+3	; 0x03
    1f86:	20 e0       	ldi	r18, 0x00	; 0
    1f88:	30 e0       	ldi	r19, 0x00	; 0
    1f8a:	40 e2       	ldi	r20, 0x20	; 32
    1f8c:	51 e4       	ldi	r21, 0x41	; 65
    1f8e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f92:	dc 01       	movw	r26, r24
    1f94:	cb 01       	movw	r24, r22
    1f96:	8e 01       	movw	r16, r28
    1f98:	02 58       	subi	r16, 0x82	; 130
    1f9a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f9c:	bc 01       	movw	r22, r24
    1f9e:	cd 01       	movw	r24, r26
    1fa0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fa4:	dc 01       	movw	r26, r24
    1fa6:	cb 01       	movw	r24, r22
    1fa8:	f8 01       	movw	r30, r16
    1faa:	91 83       	std	Z+1, r25	; 0x01
    1fac:	80 83       	st	Z, r24
    1fae:	1f c0       	rjmp	.+62     	; 0x1fee <main+0x10a8>
    1fb0:	fe 01       	movw	r30, r28
    1fb2:	e4 58       	subi	r30, 0x84	; 132
    1fb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb6:	89 e1       	ldi	r24, 0x19	; 25
    1fb8:	90 e0       	ldi	r25, 0x00	; 0
    1fba:	91 83       	std	Z+1, r25	; 0x01
    1fbc:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1fbe:	fe 01       	movw	r30, r28
    1fc0:	e4 58       	subi	r30, 0x84	; 132
    1fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc4:	80 81       	ld	r24, Z
    1fc6:	91 81       	ldd	r25, Z+1	; 0x01
    1fc8:	01 97       	sbiw	r24, 0x01	; 1
    1fca:	f1 f7       	brne	.-4      	; 0x1fc8 <main+0x1082>
    1fcc:	fe 01       	movw	r30, r28
    1fce:	e4 58       	subi	r30, 0x84	; 132
    1fd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd2:	91 83       	std	Z+1, r25	; 0x01
    1fd4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fd6:	de 01       	movw	r26, r28
    1fd8:	a2 58       	subi	r26, 0x82	; 130
    1fda:	bf 4f       	sbci	r27, 0xFF	; 255
    1fdc:	fe 01       	movw	r30, r28
    1fde:	e2 58       	subi	r30, 0x82	; 130
    1fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe2:	80 81       	ld	r24, Z
    1fe4:	91 81       	ldd	r25, Z+1	; 0x01
    1fe6:	01 97       	sbiw	r24, 0x01	; 1
    1fe8:	11 96       	adiw	r26, 0x01	; 1
    1fea:	9c 93       	st	X, r25
    1fec:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fee:	fe 01       	movw	r30, r28
    1ff0:	e2 58       	subi	r30, 0x82	; 130
    1ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff4:	80 81       	ld	r24, Z
    1ff6:	91 81       	ldd	r25, Z+1	; 0x01
    1ff8:	00 97       	sbiw	r24, 0x00	; 0
    1ffa:	d1 f6       	brne	.-76     	; 0x1fb0 <main+0x106a>
    1ffc:	4b c0       	rjmp	.+150    	; 0x2094 <main+0x114e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ffe:	8e 01       	movw	r16, r28
    2000:	02 58       	subi	r16, 0x82	; 130
    2002:	1f 4f       	sbci	r17, 0xFF	; 255
    2004:	fe 01       	movw	r30, r28
    2006:	e0 58       	subi	r30, 0x80	; 128
    2008:	ff 4f       	sbci	r31, 0xFF	; 255
    200a:	60 81       	ld	r22, Z
    200c:	71 81       	ldd	r23, Z+1	; 0x01
    200e:	82 81       	ldd	r24, Z+2	; 0x02
    2010:	93 81       	ldd	r25, Z+3	; 0x03
    2012:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2016:	dc 01       	movw	r26, r24
    2018:	cb 01       	movw	r24, r22
    201a:	f8 01       	movw	r30, r16
    201c:	91 83       	std	Z+1, r25	; 0x01
    201e:	80 83       	st	Z, r24
    2020:	de 01       	movw	r26, r28
    2022:	a6 58       	subi	r26, 0x86	; 134
    2024:	bf 4f       	sbci	r27, 0xFF	; 255
    2026:	fe 01       	movw	r30, r28
    2028:	e2 58       	subi	r30, 0x82	; 130
    202a:	ff 4f       	sbci	r31, 0xFF	; 255
    202c:	80 81       	ld	r24, Z
    202e:	91 81       	ldd	r25, Z+1	; 0x01
    2030:	11 96       	adiw	r26, 0x01	; 1
    2032:	9c 93       	st	X, r25
    2034:	8e 93       	st	-X, r24
    2036:	fe 01       	movw	r30, r28
    2038:	e6 58       	subi	r30, 0x86	; 134
    203a:	ff 4f       	sbci	r31, 0xFF	; 255
    203c:	80 81       	ld	r24, Z
    203e:	91 81       	ldd	r25, Z+1	; 0x01
    2040:	01 97       	sbiw	r24, 0x01	; 1
    2042:	f1 f7       	brne	.-4      	; 0x2040 <main+0x10fa>
    2044:	fe 01       	movw	r30, r28
    2046:	e6 58       	subi	r30, 0x86	; 134
    2048:	ff 4f       	sbci	r31, 0xFF	; 255
    204a:	91 83       	std	Z+1, r25	; 0x01
    204c:	80 83       	st	Z, r24
    204e:	22 c0       	rjmp	.+68     	; 0x2094 <main+0x114e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2050:	8e 01       	movw	r16, r28
    2052:	08 57       	subi	r16, 0x78	; 120
    2054:	1f 4f       	sbci	r17, 0xFF	; 255
    2056:	fe 01       	movw	r30, r28
    2058:	e7 57       	subi	r30, 0x77	; 119
    205a:	ff 4f       	sbci	r31, 0xFF	; 255
    205c:	60 81       	ld	r22, Z
    205e:	71 81       	ldd	r23, Z+1	; 0x01
    2060:	82 81       	ldd	r24, Z+2	; 0x02
    2062:	93 81       	ldd	r25, Z+3	; 0x03
    2064:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2068:	dc 01       	movw	r26, r24
    206a:	cb 01       	movw	r24, r22
    206c:	f8 01       	movw	r30, r16
    206e:	80 83       	st	Z, r24
    2070:	de 01       	movw	r26, r28
    2072:	a7 58       	subi	r26, 0x87	; 135
    2074:	bf 4f       	sbci	r27, 0xFF	; 255
    2076:	fe 01       	movw	r30, r28
    2078:	e8 57       	subi	r30, 0x78	; 120
    207a:	ff 4f       	sbci	r31, 0xFF	; 255
    207c:	80 81       	ld	r24, Z
    207e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2080:	fe 01       	movw	r30, r28
    2082:	e7 58       	subi	r30, 0x87	; 135
    2084:	ff 4f       	sbci	r31, 0xFF	; 255
    2086:	80 81       	ld	r24, Z
    2088:	8a 95       	dec	r24
    208a:	f1 f7       	brne	.-4      	; 0x2088 <main+0x1142>
    208c:	fe 01       	movw	r30, r28
    208e:	e7 58       	subi	r30, 0x87	; 135
    2090:	ff 4f       	sbci	r31, 0xFF	; 255
    2092:	80 83       	st	Z, r24
		_delay_us(delay);
		PORTA |= (1<<PA3);
    2094:	ab e3       	ldi	r26, 0x3B	; 59
    2096:	b0 e0       	ldi	r27, 0x00	; 0
    2098:	eb e3       	ldi	r30, 0x3B	; 59
    209a:	f0 e0       	ldi	r31, 0x00	; 0
    209c:	80 81       	ld	r24, Z
    209e:	88 60       	ori	r24, 0x08	; 8
    20a0:	8c 93       	st	X, r24
    20a2:	fe 01       	movw	r30, r28
    20a4:	eb 58       	subi	r30, 0x8B	; 139
    20a6:	ff 4f       	sbci	r31, 0xFF	; 255
    20a8:	80 e0       	ldi	r24, 0x00	; 0
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	a0 e0       	ldi	r26, 0x00	; 0
    20ae:	b0 e4       	ldi	r27, 0x40	; 64
    20b0:	80 83       	st	Z, r24
    20b2:	91 83       	std	Z+1, r25	; 0x01
    20b4:	a2 83       	std	Z+2, r26	; 0x02
    20b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    20b8:	8e 01       	movw	r16, r28
    20ba:	0f 58       	subi	r16, 0x8F	; 143
    20bc:	1f 4f       	sbci	r17, 0xFF	; 255
    20be:	fe 01       	movw	r30, r28
    20c0:	eb 58       	subi	r30, 0x8B	; 139
    20c2:	ff 4f       	sbci	r31, 0xFF	; 255
    20c4:	60 81       	ld	r22, Z
    20c6:	71 81       	ldd	r23, Z+1	; 0x01
    20c8:	82 81       	ldd	r24, Z+2	; 0x02
    20ca:	93 81       	ldd	r25, Z+3	; 0x03
    20cc:	2b ea       	ldi	r18, 0xAB	; 171
    20ce:	3a ea       	ldi	r19, 0xAA	; 170
    20d0:	4a ea       	ldi	r20, 0xAA	; 170
    20d2:	5e e3       	ldi	r21, 0x3E	; 62
    20d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20d8:	dc 01       	movw	r26, r24
    20da:	cb 01       	movw	r24, r22
    20dc:	f8 01       	movw	r30, r16
    20de:	80 83       	st	Z, r24
    20e0:	91 83       	std	Z+1, r25	; 0x01
    20e2:	a2 83       	std	Z+2, r26	; 0x02
    20e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20e6:	fe 01       	movw	r30, r28
    20e8:	ef 58       	subi	r30, 0x8F	; 143
    20ea:	ff 4f       	sbci	r31, 0xFF	; 255
    20ec:	60 81       	ld	r22, Z
    20ee:	71 81       	ldd	r23, Z+1	; 0x01
    20f0:	82 81       	ldd	r24, Z+2	; 0x02
    20f2:	93 81       	ldd	r25, Z+3	; 0x03
    20f4:	20 e0       	ldi	r18, 0x00	; 0
    20f6:	30 e0       	ldi	r19, 0x00	; 0
    20f8:	40 e8       	ldi	r20, 0x80	; 128
    20fa:	5f e3       	ldi	r21, 0x3F	; 63
    20fc:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2100:	88 23       	and	r24, r24
    2102:	34 f4       	brge	.+12     	; 0x2110 <main+0x11ca>
		__ticks = 1;
    2104:	fe 01       	movw	r30, r28
    2106:	e0 59       	subi	r30, 0x90	; 144
    2108:	ff 4f       	sbci	r31, 0xFF	; 255
    210a:	81 e0       	ldi	r24, 0x01	; 1
    210c:	80 83       	st	Z, r24
    210e:	e0 c0       	rjmp	.+448    	; 0x22d0 <main+0x138a>
	else if (__tmp > 255)
    2110:	fe 01       	movw	r30, r28
    2112:	ef 58       	subi	r30, 0x8F	; 143
    2114:	ff 4f       	sbci	r31, 0xFF	; 255
    2116:	60 81       	ld	r22, Z
    2118:	71 81       	ldd	r23, Z+1	; 0x01
    211a:	82 81       	ldd	r24, Z+2	; 0x02
    211c:	93 81       	ldd	r25, Z+3	; 0x03
    211e:	20 e0       	ldi	r18, 0x00	; 0
    2120:	30 e0       	ldi	r19, 0x00	; 0
    2122:	4f e7       	ldi	r20, 0x7F	; 127
    2124:	53 e4       	ldi	r21, 0x43	; 67
    2126:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    212a:	18 16       	cp	r1, r24
    212c:	0c f0       	brlt	.+2      	; 0x2130 <main+0x11ea>
    212e:	c0 c0       	rjmp	.+384    	; 0x22b0 <main+0x136a>
	{
		_delay_ms(__us / 1000.0);
    2130:	fe 01       	movw	r30, r28
    2132:	eb 58       	subi	r30, 0x8B	; 139
    2134:	ff 4f       	sbci	r31, 0xFF	; 255
    2136:	60 81       	ld	r22, Z
    2138:	71 81       	ldd	r23, Z+1	; 0x01
    213a:	82 81       	ldd	r24, Z+2	; 0x02
    213c:	93 81       	ldd	r25, Z+3	; 0x03
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	4a e7       	ldi	r20, 0x7A	; 122
    2144:	54 e4       	ldi	r21, 0x44	; 68
    2146:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    214a:	dc 01       	movw	r26, r24
    214c:	cb 01       	movw	r24, r22
    214e:	fe 01       	movw	r30, r28
    2150:	e4 59       	subi	r30, 0x94	; 148
    2152:	ff 4f       	sbci	r31, 0xFF	; 255
    2154:	80 83       	st	Z, r24
    2156:	91 83       	std	Z+1, r25	; 0x01
    2158:	a2 83       	std	Z+2, r26	; 0x02
    215a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    215c:	8e 01       	movw	r16, r28
    215e:	08 59       	subi	r16, 0x98	; 152
    2160:	1f 4f       	sbci	r17, 0xFF	; 255
    2162:	fe 01       	movw	r30, r28
    2164:	e4 59       	subi	r30, 0x94	; 148
    2166:	ff 4f       	sbci	r31, 0xFF	; 255
    2168:	60 81       	ld	r22, Z
    216a:	71 81       	ldd	r23, Z+1	; 0x01
    216c:	82 81       	ldd	r24, Z+2	; 0x02
    216e:	93 81       	ldd	r25, Z+3	; 0x03
    2170:	20 e0       	ldi	r18, 0x00	; 0
    2172:	30 e0       	ldi	r19, 0x00	; 0
    2174:	4a e7       	ldi	r20, 0x7A	; 122
    2176:	53 e4       	ldi	r21, 0x43	; 67
    2178:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    217c:	dc 01       	movw	r26, r24
    217e:	cb 01       	movw	r24, r22
    2180:	f8 01       	movw	r30, r16
    2182:	80 83       	st	Z, r24
    2184:	91 83       	std	Z+1, r25	; 0x01
    2186:	a2 83       	std	Z+2, r26	; 0x02
    2188:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    218a:	fe 01       	movw	r30, r28
    218c:	e8 59       	subi	r30, 0x98	; 152
    218e:	ff 4f       	sbci	r31, 0xFF	; 255
    2190:	60 81       	ld	r22, Z
    2192:	71 81       	ldd	r23, Z+1	; 0x01
    2194:	82 81       	ldd	r24, Z+2	; 0x02
    2196:	93 81       	ldd	r25, Z+3	; 0x03
    2198:	20 e0       	ldi	r18, 0x00	; 0
    219a:	30 e0       	ldi	r19, 0x00	; 0
    219c:	40 e8       	ldi	r20, 0x80	; 128
    219e:	5f e3       	ldi	r21, 0x3F	; 63
    21a0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    21a4:	88 23       	and	r24, r24
    21a6:	44 f4       	brge	.+16     	; 0x21b8 <main+0x1272>
		__ticks = 1;
    21a8:	fe 01       	movw	r30, r28
    21aa:	ea 59       	subi	r30, 0x9A	; 154
    21ac:	ff 4f       	sbci	r31, 0xFF	; 255
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	90 e0       	ldi	r25, 0x00	; 0
    21b2:	91 83       	std	Z+1, r25	; 0x01
    21b4:	80 83       	st	Z, r24
    21b6:	64 c0       	rjmp	.+200    	; 0x2280 <main+0x133a>
	else if (__tmp > 65535)
    21b8:	fe 01       	movw	r30, r28
    21ba:	e8 59       	subi	r30, 0x98	; 152
    21bc:	ff 4f       	sbci	r31, 0xFF	; 255
    21be:	60 81       	ld	r22, Z
    21c0:	71 81       	ldd	r23, Z+1	; 0x01
    21c2:	82 81       	ldd	r24, Z+2	; 0x02
    21c4:	93 81       	ldd	r25, Z+3	; 0x03
    21c6:	20 e0       	ldi	r18, 0x00	; 0
    21c8:	3f ef       	ldi	r19, 0xFF	; 255
    21ca:	4f e7       	ldi	r20, 0x7F	; 127
    21cc:	57 e4       	ldi	r21, 0x47	; 71
    21ce:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    21d2:	18 16       	cp	r1, r24
    21d4:	0c f0       	brlt	.+2      	; 0x21d8 <main+0x1292>
    21d6:	43 c0       	rjmp	.+134    	; 0x225e <main+0x1318>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21d8:	fe 01       	movw	r30, r28
    21da:	e4 59       	subi	r30, 0x94	; 148
    21dc:	ff 4f       	sbci	r31, 0xFF	; 255
    21de:	60 81       	ld	r22, Z
    21e0:	71 81       	ldd	r23, Z+1	; 0x01
    21e2:	82 81       	ldd	r24, Z+2	; 0x02
    21e4:	93 81       	ldd	r25, Z+3	; 0x03
    21e6:	20 e0       	ldi	r18, 0x00	; 0
    21e8:	30 e0       	ldi	r19, 0x00	; 0
    21ea:	40 e2       	ldi	r20, 0x20	; 32
    21ec:	51 e4       	ldi	r21, 0x41	; 65
    21ee:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    21f2:	dc 01       	movw	r26, r24
    21f4:	cb 01       	movw	r24, r22
    21f6:	8e 01       	movw	r16, r28
    21f8:	0a 59       	subi	r16, 0x9A	; 154
    21fa:	1f 4f       	sbci	r17, 0xFF	; 255
    21fc:	bc 01       	movw	r22, r24
    21fe:	cd 01       	movw	r24, r26
    2200:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2204:	dc 01       	movw	r26, r24
    2206:	cb 01       	movw	r24, r22
    2208:	f8 01       	movw	r30, r16
    220a:	91 83       	std	Z+1, r25	; 0x01
    220c:	80 83       	st	Z, r24
    220e:	1f c0       	rjmp	.+62     	; 0x224e <main+0x1308>
    2210:	fe 01       	movw	r30, r28
    2212:	ec 59       	subi	r30, 0x9C	; 156
    2214:	ff 4f       	sbci	r31, 0xFF	; 255
    2216:	89 e1       	ldi	r24, 0x19	; 25
    2218:	90 e0       	ldi	r25, 0x00	; 0
    221a:	91 83       	std	Z+1, r25	; 0x01
    221c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    221e:	fe 01       	movw	r30, r28
    2220:	ec 59       	subi	r30, 0x9C	; 156
    2222:	ff 4f       	sbci	r31, 0xFF	; 255
    2224:	80 81       	ld	r24, Z
    2226:	91 81       	ldd	r25, Z+1	; 0x01
    2228:	01 97       	sbiw	r24, 0x01	; 1
    222a:	f1 f7       	brne	.-4      	; 0x2228 <main+0x12e2>
    222c:	fe 01       	movw	r30, r28
    222e:	ec 59       	subi	r30, 0x9C	; 156
    2230:	ff 4f       	sbci	r31, 0xFF	; 255
    2232:	91 83       	std	Z+1, r25	; 0x01
    2234:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2236:	de 01       	movw	r26, r28
    2238:	aa 59       	subi	r26, 0x9A	; 154
    223a:	bf 4f       	sbci	r27, 0xFF	; 255
    223c:	fe 01       	movw	r30, r28
    223e:	ea 59       	subi	r30, 0x9A	; 154
    2240:	ff 4f       	sbci	r31, 0xFF	; 255
    2242:	80 81       	ld	r24, Z
    2244:	91 81       	ldd	r25, Z+1	; 0x01
    2246:	01 97       	sbiw	r24, 0x01	; 1
    2248:	11 96       	adiw	r26, 0x01	; 1
    224a:	9c 93       	st	X, r25
    224c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    224e:	fe 01       	movw	r30, r28
    2250:	ea 59       	subi	r30, 0x9A	; 154
    2252:	ff 4f       	sbci	r31, 0xFF	; 255
    2254:	80 81       	ld	r24, Z
    2256:	91 81       	ldd	r25, Z+1	; 0x01
    2258:	00 97       	sbiw	r24, 0x00	; 0
    225a:	d1 f6       	brne	.-76     	; 0x2210 <main+0x12ca>
    225c:	4b c0       	rjmp	.+150    	; 0x22f4 <main+0x13ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    225e:	8e 01       	movw	r16, r28
    2260:	0a 59       	subi	r16, 0x9A	; 154
    2262:	1f 4f       	sbci	r17, 0xFF	; 255
    2264:	fe 01       	movw	r30, r28
    2266:	e8 59       	subi	r30, 0x98	; 152
    2268:	ff 4f       	sbci	r31, 0xFF	; 255
    226a:	60 81       	ld	r22, Z
    226c:	71 81       	ldd	r23, Z+1	; 0x01
    226e:	82 81       	ldd	r24, Z+2	; 0x02
    2270:	93 81       	ldd	r25, Z+3	; 0x03
    2272:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2276:	dc 01       	movw	r26, r24
    2278:	cb 01       	movw	r24, r22
    227a:	f8 01       	movw	r30, r16
    227c:	91 83       	std	Z+1, r25	; 0x01
    227e:	80 83       	st	Z, r24
    2280:	de 01       	movw	r26, r28
    2282:	ae 59       	subi	r26, 0x9E	; 158
    2284:	bf 4f       	sbci	r27, 0xFF	; 255
    2286:	fe 01       	movw	r30, r28
    2288:	ea 59       	subi	r30, 0x9A	; 154
    228a:	ff 4f       	sbci	r31, 0xFF	; 255
    228c:	80 81       	ld	r24, Z
    228e:	91 81       	ldd	r25, Z+1	; 0x01
    2290:	11 96       	adiw	r26, 0x01	; 1
    2292:	9c 93       	st	X, r25
    2294:	8e 93       	st	-X, r24
    2296:	fe 01       	movw	r30, r28
    2298:	ee 59       	subi	r30, 0x9E	; 158
    229a:	ff 4f       	sbci	r31, 0xFF	; 255
    229c:	80 81       	ld	r24, Z
    229e:	91 81       	ldd	r25, Z+1	; 0x01
    22a0:	01 97       	sbiw	r24, 0x01	; 1
    22a2:	f1 f7       	brne	.-4      	; 0x22a0 <main+0x135a>
    22a4:	fe 01       	movw	r30, r28
    22a6:	ee 59       	subi	r30, 0x9E	; 158
    22a8:	ff 4f       	sbci	r31, 0xFF	; 255
    22aa:	91 83       	std	Z+1, r25	; 0x01
    22ac:	80 83       	st	Z, r24
    22ae:	22 c0       	rjmp	.+68     	; 0x22f4 <main+0x13ae>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    22b0:	8e 01       	movw	r16, r28
    22b2:	00 59       	subi	r16, 0x90	; 144
    22b4:	1f 4f       	sbci	r17, 0xFF	; 255
    22b6:	fe 01       	movw	r30, r28
    22b8:	ef 58       	subi	r30, 0x8F	; 143
    22ba:	ff 4f       	sbci	r31, 0xFF	; 255
    22bc:	60 81       	ld	r22, Z
    22be:	71 81       	ldd	r23, Z+1	; 0x01
    22c0:	82 81       	ldd	r24, Z+2	; 0x02
    22c2:	93 81       	ldd	r25, Z+3	; 0x03
    22c4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22c8:	dc 01       	movw	r26, r24
    22ca:	cb 01       	movw	r24, r22
    22cc:	f8 01       	movw	r30, r16
    22ce:	80 83       	st	Z, r24
    22d0:	de 01       	movw	r26, r28
    22d2:	af 59       	subi	r26, 0x9F	; 159
    22d4:	bf 4f       	sbci	r27, 0xFF	; 255
    22d6:	fe 01       	movw	r30, r28
    22d8:	e0 59       	subi	r30, 0x90	; 144
    22da:	ff 4f       	sbci	r31, 0xFF	; 255
    22dc:	80 81       	ld	r24, Z
    22de:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    22e0:	fe 01       	movw	r30, r28
    22e2:	ef 59       	subi	r30, 0x9F	; 159
    22e4:	ff 4f       	sbci	r31, 0xFF	; 255
    22e6:	80 81       	ld	r24, Z
    22e8:	8a 95       	dec	r24
    22ea:	f1 f7       	brne	.-4      	; 0x22e8 <main+0x13a2>
    22ec:	fe 01       	movw	r30, r28
    22ee:	ef 59       	subi	r30, 0x9F	; 159
    22f0:	ff 4f       	sbci	r31, 0xFF	; 255
    22f2:	80 83       	st	Z, r24
		_delay_us(delay);
		PORTA &= ~(1<<PA3);
    22f4:	ab e3       	ldi	r26, 0x3B	; 59
    22f6:	b0 e0       	ldi	r27, 0x00	; 0
    22f8:	eb e3       	ldi	r30, 0x3B	; 59
    22fa:	f0 e0       	ldi	r31, 0x00	; 0
    22fc:	80 81       	ld	r24, Z
    22fe:	87 7f       	andi	r24, 0xF7	; 247
    2300:	8c 93       	st	X, r24

		//digit 4
		PORTC = (PORTC & 0xF0) | (HOUR0 & 0x0F);
    2302:	a5 e3       	ldi	r26, 0x35	; 53
    2304:	b0 e0       	ldi	r27, 0x00	; 0
    2306:	e5 e3       	ldi	r30, 0x35	; 53
    2308:	f0 e0       	ldi	r31, 0x00	; 0
    230a:	80 81       	ld	r24, Z
    230c:	98 2f       	mov	r25, r24
    230e:	90 7f       	andi	r25, 0xF0	; 240
    2310:	80 91 6d 00 	lds	r24, 0x006D
    2314:	8f 70       	andi	r24, 0x0F	; 15
    2316:	89 2b       	or	r24, r25
    2318:	8c 93       	st	X, r24
    231a:	fe 01       	movw	r30, r28
    231c:	e3 5a       	subi	r30, 0xA3	; 163
    231e:	ff 4f       	sbci	r31, 0xFF	; 255
    2320:	80 e0       	ldi	r24, 0x00	; 0
    2322:	90 e0       	ldi	r25, 0x00	; 0
    2324:	a0 e0       	ldi	r26, 0x00	; 0
    2326:	b0 e4       	ldi	r27, 0x40	; 64
    2328:	80 83       	st	Z, r24
    232a:	91 83       	std	Z+1, r25	; 0x01
    232c:	a2 83       	std	Z+2, r26	; 0x02
    232e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2330:	8e 01       	movw	r16, r28
    2332:	07 5a       	subi	r16, 0xA7	; 167
    2334:	1f 4f       	sbci	r17, 0xFF	; 255
    2336:	fe 01       	movw	r30, r28
    2338:	e3 5a       	subi	r30, 0xA3	; 163
    233a:	ff 4f       	sbci	r31, 0xFF	; 255
    233c:	60 81       	ld	r22, Z
    233e:	71 81       	ldd	r23, Z+1	; 0x01
    2340:	82 81       	ldd	r24, Z+2	; 0x02
    2342:	93 81       	ldd	r25, Z+3	; 0x03
    2344:	2b ea       	ldi	r18, 0xAB	; 171
    2346:	3a ea       	ldi	r19, 0xAA	; 170
    2348:	4a ea       	ldi	r20, 0xAA	; 170
    234a:	5e e3       	ldi	r21, 0x3E	; 62
    234c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2350:	dc 01       	movw	r26, r24
    2352:	cb 01       	movw	r24, r22
    2354:	f8 01       	movw	r30, r16
    2356:	80 83       	st	Z, r24
    2358:	91 83       	std	Z+1, r25	; 0x01
    235a:	a2 83       	std	Z+2, r26	; 0x02
    235c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    235e:	fe 01       	movw	r30, r28
    2360:	e7 5a       	subi	r30, 0xA7	; 167
    2362:	ff 4f       	sbci	r31, 0xFF	; 255
    2364:	60 81       	ld	r22, Z
    2366:	71 81       	ldd	r23, Z+1	; 0x01
    2368:	82 81       	ldd	r24, Z+2	; 0x02
    236a:	93 81       	ldd	r25, Z+3	; 0x03
    236c:	20 e0       	ldi	r18, 0x00	; 0
    236e:	30 e0       	ldi	r19, 0x00	; 0
    2370:	40 e8       	ldi	r20, 0x80	; 128
    2372:	5f e3       	ldi	r21, 0x3F	; 63
    2374:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2378:	88 23       	and	r24, r24
    237a:	34 f4       	brge	.+12     	; 0x2388 <main+0x1442>
		__ticks = 1;
    237c:	fe 01       	movw	r30, r28
    237e:	e8 5a       	subi	r30, 0xA8	; 168
    2380:	ff 4f       	sbci	r31, 0xFF	; 255
    2382:	81 e0       	ldi	r24, 0x01	; 1
    2384:	80 83       	st	Z, r24
    2386:	e0 c0       	rjmp	.+448    	; 0x2548 <main+0x1602>
	else if (__tmp > 255)
    2388:	fe 01       	movw	r30, r28
    238a:	e7 5a       	subi	r30, 0xA7	; 167
    238c:	ff 4f       	sbci	r31, 0xFF	; 255
    238e:	60 81       	ld	r22, Z
    2390:	71 81       	ldd	r23, Z+1	; 0x01
    2392:	82 81       	ldd	r24, Z+2	; 0x02
    2394:	93 81       	ldd	r25, Z+3	; 0x03
    2396:	20 e0       	ldi	r18, 0x00	; 0
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	4f e7       	ldi	r20, 0x7F	; 127
    239c:	53 e4       	ldi	r21, 0x43	; 67
    239e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    23a2:	18 16       	cp	r1, r24
    23a4:	0c f0       	brlt	.+2      	; 0x23a8 <main+0x1462>
    23a6:	c0 c0       	rjmp	.+384    	; 0x2528 <main+0x15e2>
	{
		_delay_ms(__us / 1000.0);
    23a8:	fe 01       	movw	r30, r28
    23aa:	e3 5a       	subi	r30, 0xA3	; 163
    23ac:	ff 4f       	sbci	r31, 0xFF	; 255
    23ae:	60 81       	ld	r22, Z
    23b0:	71 81       	ldd	r23, Z+1	; 0x01
    23b2:	82 81       	ldd	r24, Z+2	; 0x02
    23b4:	93 81       	ldd	r25, Z+3	; 0x03
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	4a e7       	ldi	r20, 0x7A	; 122
    23bc:	54 e4       	ldi	r21, 0x44	; 68
    23be:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    23c2:	dc 01       	movw	r26, r24
    23c4:	cb 01       	movw	r24, r22
    23c6:	fe 01       	movw	r30, r28
    23c8:	ec 5a       	subi	r30, 0xAC	; 172
    23ca:	ff 4f       	sbci	r31, 0xFF	; 255
    23cc:	80 83       	st	Z, r24
    23ce:	91 83       	std	Z+1, r25	; 0x01
    23d0:	a2 83       	std	Z+2, r26	; 0x02
    23d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23d4:	8e 01       	movw	r16, r28
    23d6:	00 5b       	subi	r16, 0xB0	; 176
    23d8:	1f 4f       	sbci	r17, 0xFF	; 255
    23da:	fe 01       	movw	r30, r28
    23dc:	ec 5a       	subi	r30, 0xAC	; 172
    23de:	ff 4f       	sbci	r31, 0xFF	; 255
    23e0:	60 81       	ld	r22, Z
    23e2:	71 81       	ldd	r23, Z+1	; 0x01
    23e4:	82 81       	ldd	r24, Z+2	; 0x02
    23e6:	93 81       	ldd	r25, Z+3	; 0x03
    23e8:	20 e0       	ldi	r18, 0x00	; 0
    23ea:	30 e0       	ldi	r19, 0x00	; 0
    23ec:	4a e7       	ldi	r20, 0x7A	; 122
    23ee:	53 e4       	ldi	r21, 0x43	; 67
    23f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    23f4:	dc 01       	movw	r26, r24
    23f6:	cb 01       	movw	r24, r22
    23f8:	f8 01       	movw	r30, r16
    23fa:	80 83       	st	Z, r24
    23fc:	91 83       	std	Z+1, r25	; 0x01
    23fe:	a2 83       	std	Z+2, r26	; 0x02
    2400:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2402:	fe 01       	movw	r30, r28
    2404:	e0 5b       	subi	r30, 0xB0	; 176
    2406:	ff 4f       	sbci	r31, 0xFF	; 255
    2408:	60 81       	ld	r22, Z
    240a:	71 81       	ldd	r23, Z+1	; 0x01
    240c:	82 81       	ldd	r24, Z+2	; 0x02
    240e:	93 81       	ldd	r25, Z+3	; 0x03
    2410:	20 e0       	ldi	r18, 0x00	; 0
    2412:	30 e0       	ldi	r19, 0x00	; 0
    2414:	40 e8       	ldi	r20, 0x80	; 128
    2416:	5f e3       	ldi	r21, 0x3F	; 63
    2418:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    241c:	88 23       	and	r24, r24
    241e:	44 f4       	brge	.+16     	; 0x2430 <main+0x14ea>
		__ticks = 1;
    2420:	fe 01       	movw	r30, r28
    2422:	e2 5b       	subi	r30, 0xB2	; 178
    2424:	ff 4f       	sbci	r31, 0xFF	; 255
    2426:	81 e0       	ldi	r24, 0x01	; 1
    2428:	90 e0       	ldi	r25, 0x00	; 0
    242a:	91 83       	std	Z+1, r25	; 0x01
    242c:	80 83       	st	Z, r24
    242e:	64 c0       	rjmp	.+200    	; 0x24f8 <main+0x15b2>
	else if (__tmp > 65535)
    2430:	fe 01       	movw	r30, r28
    2432:	e0 5b       	subi	r30, 0xB0	; 176
    2434:	ff 4f       	sbci	r31, 0xFF	; 255
    2436:	60 81       	ld	r22, Z
    2438:	71 81       	ldd	r23, Z+1	; 0x01
    243a:	82 81       	ldd	r24, Z+2	; 0x02
    243c:	93 81       	ldd	r25, Z+3	; 0x03
    243e:	20 e0       	ldi	r18, 0x00	; 0
    2440:	3f ef       	ldi	r19, 0xFF	; 255
    2442:	4f e7       	ldi	r20, 0x7F	; 127
    2444:	57 e4       	ldi	r21, 0x47	; 71
    2446:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    244a:	18 16       	cp	r1, r24
    244c:	0c f0       	brlt	.+2      	; 0x2450 <main+0x150a>
    244e:	43 c0       	rjmp	.+134    	; 0x24d6 <main+0x1590>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2450:	fe 01       	movw	r30, r28
    2452:	ec 5a       	subi	r30, 0xAC	; 172
    2454:	ff 4f       	sbci	r31, 0xFF	; 255
    2456:	60 81       	ld	r22, Z
    2458:	71 81       	ldd	r23, Z+1	; 0x01
    245a:	82 81       	ldd	r24, Z+2	; 0x02
    245c:	93 81       	ldd	r25, Z+3	; 0x03
    245e:	20 e0       	ldi	r18, 0x00	; 0
    2460:	30 e0       	ldi	r19, 0x00	; 0
    2462:	40 e2       	ldi	r20, 0x20	; 32
    2464:	51 e4       	ldi	r21, 0x41	; 65
    2466:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    246a:	dc 01       	movw	r26, r24
    246c:	cb 01       	movw	r24, r22
    246e:	8e 01       	movw	r16, r28
    2470:	02 5b       	subi	r16, 0xB2	; 178
    2472:	1f 4f       	sbci	r17, 0xFF	; 255
    2474:	bc 01       	movw	r22, r24
    2476:	cd 01       	movw	r24, r26
    2478:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    247c:	dc 01       	movw	r26, r24
    247e:	cb 01       	movw	r24, r22
    2480:	f8 01       	movw	r30, r16
    2482:	91 83       	std	Z+1, r25	; 0x01
    2484:	80 83       	st	Z, r24
    2486:	1f c0       	rjmp	.+62     	; 0x24c6 <main+0x1580>
    2488:	fe 01       	movw	r30, r28
    248a:	e4 5b       	subi	r30, 0xB4	; 180
    248c:	ff 4f       	sbci	r31, 0xFF	; 255
    248e:	89 e1       	ldi	r24, 0x19	; 25
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	91 83       	std	Z+1, r25	; 0x01
    2494:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2496:	fe 01       	movw	r30, r28
    2498:	e4 5b       	subi	r30, 0xB4	; 180
    249a:	ff 4f       	sbci	r31, 0xFF	; 255
    249c:	80 81       	ld	r24, Z
    249e:	91 81       	ldd	r25, Z+1	; 0x01
    24a0:	01 97       	sbiw	r24, 0x01	; 1
    24a2:	f1 f7       	brne	.-4      	; 0x24a0 <main+0x155a>
    24a4:	fe 01       	movw	r30, r28
    24a6:	e4 5b       	subi	r30, 0xB4	; 180
    24a8:	ff 4f       	sbci	r31, 0xFF	; 255
    24aa:	91 83       	std	Z+1, r25	; 0x01
    24ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24ae:	de 01       	movw	r26, r28
    24b0:	a2 5b       	subi	r26, 0xB2	; 178
    24b2:	bf 4f       	sbci	r27, 0xFF	; 255
    24b4:	fe 01       	movw	r30, r28
    24b6:	e2 5b       	subi	r30, 0xB2	; 178
    24b8:	ff 4f       	sbci	r31, 0xFF	; 255
    24ba:	80 81       	ld	r24, Z
    24bc:	91 81       	ldd	r25, Z+1	; 0x01
    24be:	01 97       	sbiw	r24, 0x01	; 1
    24c0:	11 96       	adiw	r26, 0x01	; 1
    24c2:	9c 93       	st	X, r25
    24c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24c6:	fe 01       	movw	r30, r28
    24c8:	e2 5b       	subi	r30, 0xB2	; 178
    24ca:	ff 4f       	sbci	r31, 0xFF	; 255
    24cc:	80 81       	ld	r24, Z
    24ce:	91 81       	ldd	r25, Z+1	; 0x01
    24d0:	00 97       	sbiw	r24, 0x00	; 0
    24d2:	d1 f6       	brne	.-76     	; 0x2488 <main+0x1542>
    24d4:	4b c0       	rjmp	.+150    	; 0x256c <main+0x1626>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24d6:	8e 01       	movw	r16, r28
    24d8:	02 5b       	subi	r16, 0xB2	; 178
    24da:	1f 4f       	sbci	r17, 0xFF	; 255
    24dc:	fe 01       	movw	r30, r28
    24de:	e0 5b       	subi	r30, 0xB0	; 176
    24e0:	ff 4f       	sbci	r31, 0xFF	; 255
    24e2:	60 81       	ld	r22, Z
    24e4:	71 81       	ldd	r23, Z+1	; 0x01
    24e6:	82 81       	ldd	r24, Z+2	; 0x02
    24e8:	93 81       	ldd	r25, Z+3	; 0x03
    24ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24ee:	dc 01       	movw	r26, r24
    24f0:	cb 01       	movw	r24, r22
    24f2:	f8 01       	movw	r30, r16
    24f4:	91 83       	std	Z+1, r25	; 0x01
    24f6:	80 83       	st	Z, r24
    24f8:	de 01       	movw	r26, r28
    24fa:	a6 5b       	subi	r26, 0xB6	; 182
    24fc:	bf 4f       	sbci	r27, 0xFF	; 255
    24fe:	fe 01       	movw	r30, r28
    2500:	e2 5b       	subi	r30, 0xB2	; 178
    2502:	ff 4f       	sbci	r31, 0xFF	; 255
    2504:	80 81       	ld	r24, Z
    2506:	91 81       	ldd	r25, Z+1	; 0x01
    2508:	11 96       	adiw	r26, 0x01	; 1
    250a:	9c 93       	st	X, r25
    250c:	8e 93       	st	-X, r24
    250e:	fe 01       	movw	r30, r28
    2510:	e6 5b       	subi	r30, 0xB6	; 182
    2512:	ff 4f       	sbci	r31, 0xFF	; 255
    2514:	80 81       	ld	r24, Z
    2516:	91 81       	ldd	r25, Z+1	; 0x01
    2518:	01 97       	sbiw	r24, 0x01	; 1
    251a:	f1 f7       	brne	.-4      	; 0x2518 <main+0x15d2>
    251c:	fe 01       	movw	r30, r28
    251e:	e6 5b       	subi	r30, 0xB6	; 182
    2520:	ff 4f       	sbci	r31, 0xFF	; 255
    2522:	91 83       	std	Z+1, r25	; 0x01
    2524:	80 83       	st	Z, r24
    2526:	22 c0       	rjmp	.+68     	; 0x256c <main+0x1626>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2528:	8e 01       	movw	r16, r28
    252a:	08 5a       	subi	r16, 0xA8	; 168
    252c:	1f 4f       	sbci	r17, 0xFF	; 255
    252e:	fe 01       	movw	r30, r28
    2530:	e7 5a       	subi	r30, 0xA7	; 167
    2532:	ff 4f       	sbci	r31, 0xFF	; 255
    2534:	60 81       	ld	r22, Z
    2536:	71 81       	ldd	r23, Z+1	; 0x01
    2538:	82 81       	ldd	r24, Z+2	; 0x02
    253a:	93 81       	ldd	r25, Z+3	; 0x03
    253c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2540:	dc 01       	movw	r26, r24
    2542:	cb 01       	movw	r24, r22
    2544:	f8 01       	movw	r30, r16
    2546:	80 83       	st	Z, r24
    2548:	de 01       	movw	r26, r28
    254a:	a7 5b       	subi	r26, 0xB7	; 183
    254c:	bf 4f       	sbci	r27, 0xFF	; 255
    254e:	fe 01       	movw	r30, r28
    2550:	e8 5a       	subi	r30, 0xA8	; 168
    2552:	ff 4f       	sbci	r31, 0xFF	; 255
    2554:	80 81       	ld	r24, Z
    2556:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2558:	fe 01       	movw	r30, r28
    255a:	e7 5b       	subi	r30, 0xB7	; 183
    255c:	ff 4f       	sbci	r31, 0xFF	; 255
    255e:	80 81       	ld	r24, Z
    2560:	8a 95       	dec	r24
    2562:	f1 f7       	brne	.-4      	; 0x2560 <main+0x161a>
    2564:	fe 01       	movw	r30, r28
    2566:	e7 5b       	subi	r30, 0xB7	; 183
    2568:	ff 4f       	sbci	r31, 0xFF	; 255
    256a:	80 83       	st	Z, r24
		_delay_us(delay);
		PORTA |= (1<<PA4);
    256c:	ab e3       	ldi	r26, 0x3B	; 59
    256e:	b0 e0       	ldi	r27, 0x00	; 0
    2570:	eb e3       	ldi	r30, 0x3B	; 59
    2572:	f0 e0       	ldi	r31, 0x00	; 0
    2574:	80 81       	ld	r24, Z
    2576:	80 61       	ori	r24, 0x10	; 16
    2578:	8c 93       	st	X, r24
    257a:	fe 01       	movw	r30, r28
    257c:	eb 5b       	subi	r30, 0xBB	; 187
    257e:	ff 4f       	sbci	r31, 0xFF	; 255
    2580:	80 e0       	ldi	r24, 0x00	; 0
    2582:	90 e0       	ldi	r25, 0x00	; 0
    2584:	a0 e0       	ldi	r26, 0x00	; 0
    2586:	b0 e4       	ldi	r27, 0x40	; 64
    2588:	80 83       	st	Z, r24
    258a:	91 83       	std	Z+1, r25	; 0x01
    258c:	a2 83       	std	Z+2, r26	; 0x02
    258e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2590:	8e 01       	movw	r16, r28
    2592:	0f 5b       	subi	r16, 0xBF	; 191
    2594:	1f 4f       	sbci	r17, 0xFF	; 255
    2596:	fe 01       	movw	r30, r28
    2598:	eb 5b       	subi	r30, 0xBB	; 187
    259a:	ff 4f       	sbci	r31, 0xFF	; 255
    259c:	60 81       	ld	r22, Z
    259e:	71 81       	ldd	r23, Z+1	; 0x01
    25a0:	82 81       	ldd	r24, Z+2	; 0x02
    25a2:	93 81       	ldd	r25, Z+3	; 0x03
    25a4:	2b ea       	ldi	r18, 0xAB	; 171
    25a6:	3a ea       	ldi	r19, 0xAA	; 170
    25a8:	4a ea       	ldi	r20, 0xAA	; 170
    25aa:	5e e3       	ldi	r21, 0x3E	; 62
    25ac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    25b0:	dc 01       	movw	r26, r24
    25b2:	cb 01       	movw	r24, r22
    25b4:	f8 01       	movw	r30, r16
    25b6:	80 83       	st	Z, r24
    25b8:	91 83       	std	Z+1, r25	; 0x01
    25ba:	a2 83       	std	Z+2, r26	; 0x02
    25bc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    25be:	fe 01       	movw	r30, r28
    25c0:	ef 5b       	subi	r30, 0xBF	; 191
    25c2:	ff 4f       	sbci	r31, 0xFF	; 255
    25c4:	60 81       	ld	r22, Z
    25c6:	71 81       	ldd	r23, Z+1	; 0x01
    25c8:	82 81       	ldd	r24, Z+2	; 0x02
    25ca:	93 81       	ldd	r25, Z+3	; 0x03
    25cc:	20 e0       	ldi	r18, 0x00	; 0
    25ce:	30 e0       	ldi	r19, 0x00	; 0
    25d0:	40 e8       	ldi	r20, 0x80	; 128
    25d2:	5f e3       	ldi	r21, 0x3F	; 63
    25d4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    25d8:	88 23       	and	r24, r24
    25da:	34 f4       	brge	.+12     	; 0x25e8 <main+0x16a2>
		__ticks = 1;
    25dc:	81 e0       	ldi	r24, 0x01	; 1
    25de:	fe 01       	movw	r30, r28
    25e0:	e0 5c       	subi	r30, 0xC0	; 192
    25e2:	ff 4f       	sbci	r31, 0xFF	; 255
    25e4:	80 83       	st	Z, r24
    25e6:	9d c0       	rjmp	.+314    	; 0x2722 <main+0x17dc>
	else if (__tmp > 255)
    25e8:	fe 01       	movw	r30, r28
    25ea:	ef 5b       	subi	r30, 0xBF	; 191
    25ec:	ff 4f       	sbci	r31, 0xFF	; 255
    25ee:	60 81       	ld	r22, Z
    25f0:	71 81       	ldd	r23, Z+1	; 0x01
    25f2:	82 81       	ldd	r24, Z+2	; 0x02
    25f4:	93 81       	ldd	r25, Z+3	; 0x03
    25f6:	20 e0       	ldi	r18, 0x00	; 0
    25f8:	30 e0       	ldi	r19, 0x00	; 0
    25fa:	4f e7       	ldi	r20, 0x7F	; 127
    25fc:	53 e4       	ldi	r21, 0x43	; 67
    25fe:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2602:	18 16       	cp	r1, r24
    2604:	0c f0       	brlt	.+2      	; 0x2608 <main+0x16c2>
    2606:	7e c0       	rjmp	.+252    	; 0x2704 <main+0x17be>
	{
		_delay_ms(__us / 1000.0);
    2608:	fe 01       	movw	r30, r28
    260a:	eb 5b       	subi	r30, 0xBB	; 187
    260c:	ff 4f       	sbci	r31, 0xFF	; 255
    260e:	60 81       	ld	r22, Z
    2610:	71 81       	ldd	r23, Z+1	; 0x01
    2612:	82 81       	ldd	r24, Z+2	; 0x02
    2614:	93 81       	ldd	r25, Z+3	; 0x03
    2616:	20 e0       	ldi	r18, 0x00	; 0
    2618:	30 e0       	ldi	r19, 0x00	; 0
    261a:	4a e7       	ldi	r20, 0x7A	; 122
    261c:	54 e4       	ldi	r21, 0x44	; 68
    261e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2622:	dc 01       	movw	r26, r24
    2624:	cb 01       	movw	r24, r22
    2626:	8c af       	std	Y+60, r24	; 0x3c
    2628:	9d af       	std	Y+61, r25	; 0x3d
    262a:	ae af       	std	Y+62, r26	; 0x3e
    262c:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    262e:	6c ad       	ldd	r22, Y+60	; 0x3c
    2630:	7d ad       	ldd	r23, Y+61	; 0x3d
    2632:	8e ad       	ldd	r24, Y+62	; 0x3e
    2634:	9f ad       	ldd	r25, Y+63	; 0x3f
    2636:	20 e0       	ldi	r18, 0x00	; 0
    2638:	30 e0       	ldi	r19, 0x00	; 0
    263a:	4a e7       	ldi	r20, 0x7A	; 122
    263c:	53 e4       	ldi	r21, 0x43	; 67
    263e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2642:	dc 01       	movw	r26, r24
    2644:	cb 01       	movw	r24, r22
    2646:	88 af       	std	Y+56, r24	; 0x38
    2648:	99 af       	std	Y+57, r25	; 0x39
    264a:	aa af       	std	Y+58, r26	; 0x3a
    264c:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    264e:	68 ad       	ldd	r22, Y+56	; 0x38
    2650:	79 ad       	ldd	r23, Y+57	; 0x39
    2652:	8a ad       	ldd	r24, Y+58	; 0x3a
    2654:	9b ad       	ldd	r25, Y+59	; 0x3b
    2656:	20 e0       	ldi	r18, 0x00	; 0
    2658:	30 e0       	ldi	r19, 0x00	; 0
    265a:	40 e8       	ldi	r20, 0x80	; 128
    265c:	5f e3       	ldi	r21, 0x3F	; 63
    265e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2662:	88 23       	and	r24, r24
    2664:	2c f4       	brge	.+10     	; 0x2670 <main+0x172a>
		__ticks = 1;
    2666:	81 e0       	ldi	r24, 0x01	; 1
    2668:	90 e0       	ldi	r25, 0x00	; 0
    266a:	9f ab       	std	Y+55, r25	; 0x37
    266c:	8e ab       	std	Y+54, r24	; 0x36
    266e:	3f c0       	rjmp	.+126    	; 0x26ee <main+0x17a8>
	else if (__tmp > 65535)
    2670:	68 ad       	ldd	r22, Y+56	; 0x38
    2672:	79 ad       	ldd	r23, Y+57	; 0x39
    2674:	8a ad       	ldd	r24, Y+58	; 0x3a
    2676:	9b ad       	ldd	r25, Y+59	; 0x3b
    2678:	20 e0       	ldi	r18, 0x00	; 0
    267a:	3f ef       	ldi	r19, 0xFF	; 255
    267c:	4f e7       	ldi	r20, 0x7F	; 127
    267e:	57 e4       	ldi	r21, 0x47	; 71
    2680:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2684:	18 16       	cp	r1, r24
    2686:	4c f5       	brge	.+82     	; 0x26da <main+0x1794>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2688:	6c ad       	ldd	r22, Y+60	; 0x3c
    268a:	7d ad       	ldd	r23, Y+61	; 0x3d
    268c:	8e ad       	ldd	r24, Y+62	; 0x3e
    268e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2690:	20 e0       	ldi	r18, 0x00	; 0
    2692:	30 e0       	ldi	r19, 0x00	; 0
    2694:	40 e2       	ldi	r20, 0x20	; 32
    2696:	51 e4       	ldi	r21, 0x41	; 65
    2698:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    269c:	dc 01       	movw	r26, r24
    269e:	cb 01       	movw	r24, r22
    26a0:	bc 01       	movw	r22, r24
    26a2:	cd 01       	movw	r24, r26
    26a4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26a8:	dc 01       	movw	r26, r24
    26aa:	cb 01       	movw	r24, r22
    26ac:	9f ab       	std	Y+55, r25	; 0x37
    26ae:	8e ab       	std	Y+54, r24	; 0x36
    26b0:	0f c0       	rjmp	.+30     	; 0x26d0 <main+0x178a>
    26b2:	89 e1       	ldi	r24, 0x19	; 25
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	9d ab       	std	Y+53, r25	; 0x35
    26b8:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    26ba:	8c a9       	ldd	r24, Y+52	; 0x34
    26bc:	9d a9       	ldd	r25, Y+53	; 0x35
    26be:	01 97       	sbiw	r24, 0x01	; 1
    26c0:	f1 f7       	brne	.-4      	; 0x26be <main+0x1778>
    26c2:	9d ab       	std	Y+53, r25	; 0x35
    26c4:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26c6:	8e a9       	ldd	r24, Y+54	; 0x36
    26c8:	9f a9       	ldd	r25, Y+55	; 0x37
    26ca:	01 97       	sbiw	r24, 0x01	; 1
    26cc:	9f ab       	std	Y+55, r25	; 0x37
    26ce:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26d0:	8e a9       	ldd	r24, Y+54	; 0x36
    26d2:	9f a9       	ldd	r25, Y+55	; 0x37
    26d4:	00 97       	sbiw	r24, 0x00	; 0
    26d6:	69 f7       	brne	.-38     	; 0x26b2 <main+0x176c>
    26d8:	2d c0       	rjmp	.+90     	; 0x2734 <main+0x17ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26da:	68 ad       	ldd	r22, Y+56	; 0x38
    26dc:	79 ad       	ldd	r23, Y+57	; 0x39
    26de:	8a ad       	ldd	r24, Y+58	; 0x3a
    26e0:	9b ad       	ldd	r25, Y+59	; 0x3b
    26e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26e6:	dc 01       	movw	r26, r24
    26e8:	cb 01       	movw	r24, r22
    26ea:	9f ab       	std	Y+55, r25	; 0x37
    26ec:	8e ab       	std	Y+54, r24	; 0x36
    26ee:	8e a9       	ldd	r24, Y+54	; 0x36
    26f0:	9f a9       	ldd	r25, Y+55	; 0x37
    26f2:	9b ab       	std	Y+51, r25	; 0x33
    26f4:	8a ab       	std	Y+50, r24	; 0x32
    26f6:	8a a9       	ldd	r24, Y+50	; 0x32
    26f8:	9b a9       	ldd	r25, Y+51	; 0x33
    26fa:	01 97       	sbiw	r24, 0x01	; 1
    26fc:	f1 f7       	brne	.-4      	; 0x26fa <main+0x17b4>
    26fe:	9b ab       	std	Y+51, r25	; 0x33
    2700:	8a ab       	std	Y+50, r24	; 0x32
    2702:	18 c0       	rjmp	.+48     	; 0x2734 <main+0x17ee>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2704:	fe 01       	movw	r30, r28
    2706:	ef 5b       	subi	r30, 0xBF	; 191
    2708:	ff 4f       	sbci	r31, 0xFF	; 255
    270a:	60 81       	ld	r22, Z
    270c:	71 81       	ldd	r23, Z+1	; 0x01
    270e:	82 81       	ldd	r24, Z+2	; 0x02
    2710:	93 81       	ldd	r25, Z+3	; 0x03
    2712:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2716:	dc 01       	movw	r26, r24
    2718:	cb 01       	movw	r24, r22
    271a:	fe 01       	movw	r30, r28
    271c:	e0 5c       	subi	r30, 0xC0	; 192
    271e:	ff 4f       	sbci	r31, 0xFF	; 255
    2720:	80 83       	st	Z, r24
    2722:	fe 01       	movw	r30, r28
    2724:	e0 5c       	subi	r30, 0xC0	; 192
    2726:	ff 4f       	sbci	r31, 0xFF	; 255
    2728:	80 81       	ld	r24, Z
    272a:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    272c:	89 a9       	ldd	r24, Y+49	; 0x31
    272e:	8a 95       	dec	r24
    2730:	f1 f7       	brne	.-4      	; 0x272e <main+0x17e8>
    2732:	89 ab       	std	Y+49, r24	; 0x31
		_delay_us(delay);
		PORTA &= ~(1<<PA4);
    2734:	ab e3       	ldi	r26, 0x3B	; 59
    2736:	b0 e0       	ldi	r27, 0x00	; 0
    2738:	eb e3       	ldi	r30, 0x3B	; 59
    273a:	f0 e0       	ldi	r31, 0x00	; 0
    273c:	80 81       	ld	r24, Z
    273e:	8f 7e       	andi	r24, 0xEF	; 239
    2740:	8c 93       	st	X, r24

		//digit 5
		PORTC = (PORTC & 0xF0) | (HOUR1 & 0x0F);
    2742:	a5 e3       	ldi	r26, 0x35	; 53
    2744:	b0 e0       	ldi	r27, 0x00	; 0
    2746:	e5 e3       	ldi	r30, 0x35	; 53
    2748:	f0 e0       	ldi	r31, 0x00	; 0
    274a:	80 81       	ld	r24, Z
    274c:	98 2f       	mov	r25, r24
    274e:	90 7f       	andi	r25, 0xF0	; 240
    2750:	80 91 6e 00 	lds	r24, 0x006E
    2754:	8f 70       	andi	r24, 0x0F	; 15
    2756:	89 2b       	or	r24, r25
    2758:	8c 93       	st	X, r24
    275a:	80 e0       	ldi	r24, 0x00	; 0
    275c:	90 e0       	ldi	r25, 0x00	; 0
    275e:	a0 e0       	ldi	r26, 0x00	; 0
    2760:	b0 e4       	ldi	r27, 0x40	; 64
    2762:	8d a7       	std	Y+45, r24	; 0x2d
    2764:	9e a7       	std	Y+46, r25	; 0x2e
    2766:	af a7       	std	Y+47, r26	; 0x2f
    2768:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    276a:	6d a5       	ldd	r22, Y+45	; 0x2d
    276c:	7e a5       	ldd	r23, Y+46	; 0x2e
    276e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2770:	98 a9       	ldd	r25, Y+48	; 0x30
    2772:	2b ea       	ldi	r18, 0xAB	; 171
    2774:	3a ea       	ldi	r19, 0xAA	; 170
    2776:	4a ea       	ldi	r20, 0xAA	; 170
    2778:	5e e3       	ldi	r21, 0x3E	; 62
    277a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    277e:	dc 01       	movw	r26, r24
    2780:	cb 01       	movw	r24, r22
    2782:	89 a7       	std	Y+41, r24	; 0x29
    2784:	9a a7       	std	Y+42, r25	; 0x2a
    2786:	ab a7       	std	Y+43, r26	; 0x2b
    2788:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    278a:	69 a5       	ldd	r22, Y+41	; 0x29
    278c:	7a a5       	ldd	r23, Y+42	; 0x2a
    278e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2790:	9c a5       	ldd	r25, Y+44	; 0x2c
    2792:	20 e0       	ldi	r18, 0x00	; 0
    2794:	30 e0       	ldi	r19, 0x00	; 0
    2796:	40 e8       	ldi	r20, 0x80	; 128
    2798:	5f e3       	ldi	r21, 0x3F	; 63
    279a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    279e:	88 23       	and	r24, r24
    27a0:	1c f4       	brge	.+6      	; 0x27a8 <main+0x1862>
		__ticks = 1;
    27a2:	81 e0       	ldi	r24, 0x01	; 1
    27a4:	88 a7       	std	Y+40, r24	; 0x28
    27a6:	91 c0       	rjmp	.+290    	; 0x28ca <main+0x1984>
	else if (__tmp > 255)
    27a8:	69 a5       	ldd	r22, Y+41	; 0x29
    27aa:	7a a5       	ldd	r23, Y+42	; 0x2a
    27ac:	8b a5       	ldd	r24, Y+43	; 0x2b
    27ae:	9c a5       	ldd	r25, Y+44	; 0x2c
    27b0:	20 e0       	ldi	r18, 0x00	; 0
    27b2:	30 e0       	ldi	r19, 0x00	; 0
    27b4:	4f e7       	ldi	r20, 0x7F	; 127
    27b6:	53 e4       	ldi	r21, 0x43	; 67
    27b8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    27bc:	18 16       	cp	r1, r24
    27be:	0c f0       	brlt	.+2      	; 0x27c2 <main+0x187c>
    27c0:	7b c0       	rjmp	.+246    	; 0x28b8 <main+0x1972>
	{
		_delay_ms(__us / 1000.0);
    27c2:	6d a5       	ldd	r22, Y+45	; 0x2d
    27c4:	7e a5       	ldd	r23, Y+46	; 0x2e
    27c6:	8f a5       	ldd	r24, Y+47	; 0x2f
    27c8:	98 a9       	ldd	r25, Y+48	; 0x30
    27ca:	20 e0       	ldi	r18, 0x00	; 0
    27cc:	30 e0       	ldi	r19, 0x00	; 0
    27ce:	4a e7       	ldi	r20, 0x7A	; 122
    27d0:	54 e4       	ldi	r21, 0x44	; 68
    27d2:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    27d6:	dc 01       	movw	r26, r24
    27d8:	cb 01       	movw	r24, r22
    27da:	8c a3       	std	Y+36, r24	; 0x24
    27dc:	9d a3       	std	Y+37, r25	; 0x25
    27de:	ae a3       	std	Y+38, r26	; 0x26
    27e0:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27e2:	6c a1       	ldd	r22, Y+36	; 0x24
    27e4:	7d a1       	ldd	r23, Y+37	; 0x25
    27e6:	8e a1       	ldd	r24, Y+38	; 0x26
    27e8:	9f a1       	ldd	r25, Y+39	; 0x27
    27ea:	20 e0       	ldi	r18, 0x00	; 0
    27ec:	30 e0       	ldi	r19, 0x00	; 0
    27ee:	4a e7       	ldi	r20, 0x7A	; 122
    27f0:	53 e4       	ldi	r21, 0x43	; 67
    27f2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27f6:	dc 01       	movw	r26, r24
    27f8:	cb 01       	movw	r24, r22
    27fa:	88 a3       	std	Y+32, r24	; 0x20
    27fc:	99 a3       	std	Y+33, r25	; 0x21
    27fe:	aa a3       	std	Y+34, r26	; 0x22
    2800:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    2802:	68 a1       	ldd	r22, Y+32	; 0x20
    2804:	79 a1       	ldd	r23, Y+33	; 0x21
    2806:	8a a1       	ldd	r24, Y+34	; 0x22
    2808:	9b a1       	ldd	r25, Y+35	; 0x23
    280a:	20 e0       	ldi	r18, 0x00	; 0
    280c:	30 e0       	ldi	r19, 0x00	; 0
    280e:	40 e8       	ldi	r20, 0x80	; 128
    2810:	5f e3       	ldi	r21, 0x3F	; 63
    2812:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2816:	88 23       	and	r24, r24
    2818:	2c f4       	brge	.+10     	; 0x2824 <main+0x18de>
		__ticks = 1;
    281a:	81 e0       	ldi	r24, 0x01	; 1
    281c:	90 e0       	ldi	r25, 0x00	; 0
    281e:	9f 8f       	std	Y+31, r25	; 0x1f
    2820:	8e 8f       	std	Y+30, r24	; 0x1e
    2822:	3f c0       	rjmp	.+126    	; 0x28a2 <main+0x195c>
	else if (__tmp > 65535)
    2824:	68 a1       	ldd	r22, Y+32	; 0x20
    2826:	79 a1       	ldd	r23, Y+33	; 0x21
    2828:	8a a1       	ldd	r24, Y+34	; 0x22
    282a:	9b a1       	ldd	r25, Y+35	; 0x23
    282c:	20 e0       	ldi	r18, 0x00	; 0
    282e:	3f ef       	ldi	r19, 0xFF	; 255
    2830:	4f e7       	ldi	r20, 0x7F	; 127
    2832:	57 e4       	ldi	r21, 0x47	; 71
    2834:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2838:	18 16       	cp	r1, r24
    283a:	4c f5       	brge	.+82     	; 0x288e <main+0x1948>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    283c:	6c a1       	ldd	r22, Y+36	; 0x24
    283e:	7d a1       	ldd	r23, Y+37	; 0x25
    2840:	8e a1       	ldd	r24, Y+38	; 0x26
    2842:	9f a1       	ldd	r25, Y+39	; 0x27
    2844:	20 e0       	ldi	r18, 0x00	; 0
    2846:	30 e0       	ldi	r19, 0x00	; 0
    2848:	40 e2       	ldi	r20, 0x20	; 32
    284a:	51 e4       	ldi	r21, 0x41	; 65
    284c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2850:	dc 01       	movw	r26, r24
    2852:	cb 01       	movw	r24, r22
    2854:	bc 01       	movw	r22, r24
    2856:	cd 01       	movw	r24, r26
    2858:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    285c:	dc 01       	movw	r26, r24
    285e:	cb 01       	movw	r24, r22
    2860:	9f 8f       	std	Y+31, r25	; 0x1f
    2862:	8e 8f       	std	Y+30, r24	; 0x1e
    2864:	0f c0       	rjmp	.+30     	; 0x2884 <main+0x193e>
    2866:	89 e1       	ldi	r24, 0x19	; 25
    2868:	90 e0       	ldi	r25, 0x00	; 0
    286a:	9d 8f       	std	Y+29, r25	; 0x1d
    286c:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    286e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2870:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2872:	01 97       	sbiw	r24, 0x01	; 1
    2874:	f1 f7       	brne	.-4      	; 0x2872 <main+0x192c>
    2876:	9d 8f       	std	Y+29, r25	; 0x1d
    2878:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    287a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    287c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    287e:	01 97       	sbiw	r24, 0x01	; 1
    2880:	9f 8f       	std	Y+31, r25	; 0x1f
    2882:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2884:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2886:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2888:	00 97       	sbiw	r24, 0x00	; 0
    288a:	69 f7       	brne	.-38     	; 0x2866 <main+0x1920>
    288c:	24 c0       	rjmp	.+72     	; 0x28d6 <main+0x1990>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    288e:	68 a1       	ldd	r22, Y+32	; 0x20
    2890:	79 a1       	ldd	r23, Y+33	; 0x21
    2892:	8a a1       	ldd	r24, Y+34	; 0x22
    2894:	9b a1       	ldd	r25, Y+35	; 0x23
    2896:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    289a:	dc 01       	movw	r26, r24
    289c:	cb 01       	movw	r24, r22
    289e:	9f 8f       	std	Y+31, r25	; 0x1f
    28a0:	8e 8f       	std	Y+30, r24	; 0x1e
    28a2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    28a4:	9f 8d       	ldd	r25, Y+31	; 0x1f
    28a6:	9b 8f       	std	Y+27, r25	; 0x1b
    28a8:	8a 8f       	std	Y+26, r24	; 0x1a
    28aa:	8a 8d       	ldd	r24, Y+26	; 0x1a
    28ac:	9b 8d       	ldd	r25, Y+27	; 0x1b
    28ae:	01 97       	sbiw	r24, 0x01	; 1
    28b0:	f1 f7       	brne	.-4      	; 0x28ae <main+0x1968>
    28b2:	9b 8f       	std	Y+27, r25	; 0x1b
    28b4:	8a 8f       	std	Y+26, r24	; 0x1a
    28b6:	0f c0       	rjmp	.+30     	; 0x28d6 <main+0x1990>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    28b8:	69 a5       	ldd	r22, Y+41	; 0x29
    28ba:	7a a5       	ldd	r23, Y+42	; 0x2a
    28bc:	8b a5       	ldd	r24, Y+43	; 0x2b
    28be:	9c a5       	ldd	r25, Y+44	; 0x2c
    28c0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    28c4:	dc 01       	movw	r26, r24
    28c6:	cb 01       	movw	r24, r22
    28c8:	88 a7       	std	Y+40, r24	; 0x28
    28ca:	88 a5       	ldd	r24, Y+40	; 0x28
    28cc:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    28ce:	89 8d       	ldd	r24, Y+25	; 0x19
    28d0:	8a 95       	dec	r24
    28d2:	f1 f7       	brne	.-4      	; 0x28d0 <main+0x198a>
    28d4:	89 8f       	std	Y+25, r24	; 0x19
		_delay_us(delay);
		PORTA |= (1<<PA5);
    28d6:	ab e3       	ldi	r26, 0x3B	; 59
    28d8:	b0 e0       	ldi	r27, 0x00	; 0
    28da:	eb e3       	ldi	r30, 0x3B	; 59
    28dc:	f0 e0       	ldi	r31, 0x00	; 0
    28de:	80 81       	ld	r24, Z
    28e0:	80 62       	ori	r24, 0x20	; 32
    28e2:	8c 93       	st	X, r24
    28e4:	80 e0       	ldi	r24, 0x00	; 0
    28e6:	90 e0       	ldi	r25, 0x00	; 0
    28e8:	a0 e0       	ldi	r26, 0x00	; 0
    28ea:	b0 e4       	ldi	r27, 0x40	; 64
    28ec:	8d 8b       	std	Y+21, r24	; 0x15
    28ee:	9e 8b       	std	Y+22, r25	; 0x16
    28f0:	af 8b       	std	Y+23, r26	; 0x17
    28f2:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    28f4:	6d 89       	ldd	r22, Y+21	; 0x15
    28f6:	7e 89       	ldd	r23, Y+22	; 0x16
    28f8:	8f 89       	ldd	r24, Y+23	; 0x17
    28fa:	98 8d       	ldd	r25, Y+24	; 0x18
    28fc:	2b ea       	ldi	r18, 0xAB	; 171
    28fe:	3a ea       	ldi	r19, 0xAA	; 170
    2900:	4a ea       	ldi	r20, 0xAA	; 170
    2902:	5e e3       	ldi	r21, 0x3E	; 62
    2904:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2908:	dc 01       	movw	r26, r24
    290a:	cb 01       	movw	r24, r22
    290c:	89 8b       	std	Y+17, r24	; 0x11
    290e:	9a 8b       	std	Y+18, r25	; 0x12
    2910:	ab 8b       	std	Y+19, r26	; 0x13
    2912:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    2914:	69 89       	ldd	r22, Y+17	; 0x11
    2916:	7a 89       	ldd	r23, Y+18	; 0x12
    2918:	8b 89       	ldd	r24, Y+19	; 0x13
    291a:	9c 89       	ldd	r25, Y+20	; 0x14
    291c:	20 e0       	ldi	r18, 0x00	; 0
    291e:	30 e0       	ldi	r19, 0x00	; 0
    2920:	40 e8       	ldi	r20, 0x80	; 128
    2922:	5f e3       	ldi	r21, 0x3F	; 63
    2924:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2928:	88 23       	and	r24, r24
    292a:	1c f4       	brge	.+6      	; 0x2932 <main+0x19ec>
		__ticks = 1;
    292c:	81 e0       	ldi	r24, 0x01	; 1
    292e:	88 8b       	std	Y+16, r24	; 0x10
    2930:	91 c0       	rjmp	.+290    	; 0x2a54 <main+0x1b0e>
	else if (__tmp > 255)
    2932:	69 89       	ldd	r22, Y+17	; 0x11
    2934:	7a 89       	ldd	r23, Y+18	; 0x12
    2936:	8b 89       	ldd	r24, Y+19	; 0x13
    2938:	9c 89       	ldd	r25, Y+20	; 0x14
    293a:	20 e0       	ldi	r18, 0x00	; 0
    293c:	30 e0       	ldi	r19, 0x00	; 0
    293e:	4f e7       	ldi	r20, 0x7F	; 127
    2940:	53 e4       	ldi	r21, 0x43	; 67
    2942:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2946:	18 16       	cp	r1, r24
    2948:	0c f0       	brlt	.+2      	; 0x294c <main+0x1a06>
    294a:	7b c0       	rjmp	.+246    	; 0x2a42 <main+0x1afc>
	{
		_delay_ms(__us / 1000.0);
    294c:	6d 89       	ldd	r22, Y+21	; 0x15
    294e:	7e 89       	ldd	r23, Y+22	; 0x16
    2950:	8f 89       	ldd	r24, Y+23	; 0x17
    2952:	98 8d       	ldd	r25, Y+24	; 0x18
    2954:	20 e0       	ldi	r18, 0x00	; 0
    2956:	30 e0       	ldi	r19, 0x00	; 0
    2958:	4a e7       	ldi	r20, 0x7A	; 122
    295a:	54 e4       	ldi	r21, 0x44	; 68
    295c:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2960:	dc 01       	movw	r26, r24
    2962:	cb 01       	movw	r24, r22
    2964:	8c 87       	std	Y+12, r24	; 0x0c
    2966:	9d 87       	std	Y+13, r25	; 0x0d
    2968:	ae 87       	std	Y+14, r26	; 0x0e
    296a:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    296c:	6c 85       	ldd	r22, Y+12	; 0x0c
    296e:	7d 85       	ldd	r23, Y+13	; 0x0d
    2970:	8e 85       	ldd	r24, Y+14	; 0x0e
    2972:	9f 85       	ldd	r25, Y+15	; 0x0f
    2974:	20 e0       	ldi	r18, 0x00	; 0
    2976:	30 e0       	ldi	r19, 0x00	; 0
    2978:	4a e7       	ldi	r20, 0x7A	; 122
    297a:	53 e4       	ldi	r21, 0x43	; 67
    297c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2980:	dc 01       	movw	r26, r24
    2982:	cb 01       	movw	r24, r22
    2984:	88 87       	std	Y+8, r24	; 0x08
    2986:	99 87       	std	Y+9, r25	; 0x09
    2988:	aa 87       	std	Y+10, r26	; 0x0a
    298a:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    298c:	68 85       	ldd	r22, Y+8	; 0x08
    298e:	79 85       	ldd	r23, Y+9	; 0x09
    2990:	8a 85       	ldd	r24, Y+10	; 0x0a
    2992:	9b 85       	ldd	r25, Y+11	; 0x0b
    2994:	20 e0       	ldi	r18, 0x00	; 0
    2996:	30 e0       	ldi	r19, 0x00	; 0
    2998:	40 e8       	ldi	r20, 0x80	; 128
    299a:	5f e3       	ldi	r21, 0x3F	; 63
    299c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    29a0:	88 23       	and	r24, r24
    29a2:	2c f4       	brge	.+10     	; 0x29ae <main+0x1a68>
		__ticks = 1;
    29a4:	81 e0       	ldi	r24, 0x01	; 1
    29a6:	90 e0       	ldi	r25, 0x00	; 0
    29a8:	9f 83       	std	Y+7, r25	; 0x07
    29aa:	8e 83       	std	Y+6, r24	; 0x06
    29ac:	3f c0       	rjmp	.+126    	; 0x2a2c <main+0x1ae6>
	else if (__tmp > 65535)
    29ae:	68 85       	ldd	r22, Y+8	; 0x08
    29b0:	79 85       	ldd	r23, Y+9	; 0x09
    29b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    29b4:	9b 85       	ldd	r25, Y+11	; 0x0b
    29b6:	20 e0       	ldi	r18, 0x00	; 0
    29b8:	3f ef       	ldi	r19, 0xFF	; 255
    29ba:	4f e7       	ldi	r20, 0x7F	; 127
    29bc:	57 e4       	ldi	r21, 0x47	; 71
    29be:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    29c2:	18 16       	cp	r1, r24
    29c4:	4c f5       	brge	.+82     	; 0x2a18 <main+0x1ad2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29c6:	6c 85       	ldd	r22, Y+12	; 0x0c
    29c8:	7d 85       	ldd	r23, Y+13	; 0x0d
    29ca:	8e 85       	ldd	r24, Y+14	; 0x0e
    29cc:	9f 85       	ldd	r25, Y+15	; 0x0f
    29ce:	20 e0       	ldi	r18, 0x00	; 0
    29d0:	30 e0       	ldi	r19, 0x00	; 0
    29d2:	40 e2       	ldi	r20, 0x20	; 32
    29d4:	51 e4       	ldi	r21, 0x41	; 65
    29d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    29da:	dc 01       	movw	r26, r24
    29dc:	cb 01       	movw	r24, r22
    29de:	bc 01       	movw	r22, r24
    29e0:	cd 01       	movw	r24, r26
    29e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    29e6:	dc 01       	movw	r26, r24
    29e8:	cb 01       	movw	r24, r22
    29ea:	9f 83       	std	Y+7, r25	; 0x07
    29ec:	8e 83       	std	Y+6, r24	; 0x06
    29ee:	0f c0       	rjmp	.+30     	; 0x2a0e <main+0x1ac8>
    29f0:	89 e1       	ldi	r24, 0x19	; 25
    29f2:	90 e0       	ldi	r25, 0x00	; 0
    29f4:	9d 83       	std	Y+5, r25	; 0x05
    29f6:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    29f8:	8c 81       	ldd	r24, Y+4	; 0x04
    29fa:	9d 81       	ldd	r25, Y+5	; 0x05
    29fc:	01 97       	sbiw	r24, 0x01	; 1
    29fe:	f1 f7       	brne	.-4      	; 0x29fc <main+0x1ab6>
    2a00:	9d 83       	std	Y+5, r25	; 0x05
    2a02:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a04:	8e 81       	ldd	r24, Y+6	; 0x06
    2a06:	9f 81       	ldd	r25, Y+7	; 0x07
    2a08:	01 97       	sbiw	r24, 0x01	; 1
    2a0a:	9f 83       	std	Y+7, r25	; 0x07
    2a0c:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a0e:	8e 81       	ldd	r24, Y+6	; 0x06
    2a10:	9f 81       	ldd	r25, Y+7	; 0x07
    2a12:	00 97       	sbiw	r24, 0x00	; 0
    2a14:	69 f7       	brne	.-38     	; 0x29f0 <main+0x1aaa>
    2a16:	24 c0       	rjmp	.+72     	; 0x2a60 <main+0x1b1a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a18:	68 85       	ldd	r22, Y+8	; 0x08
    2a1a:	79 85       	ldd	r23, Y+9	; 0x09
    2a1c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2a1e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2a20:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a24:	dc 01       	movw	r26, r24
    2a26:	cb 01       	movw	r24, r22
    2a28:	9f 83       	std	Y+7, r25	; 0x07
    2a2a:	8e 83       	std	Y+6, r24	; 0x06
    2a2c:	8e 81       	ldd	r24, Y+6	; 0x06
    2a2e:	9f 81       	ldd	r25, Y+7	; 0x07
    2a30:	9b 83       	std	Y+3, r25	; 0x03
    2a32:	8a 83       	std	Y+2, r24	; 0x02
    2a34:	8a 81       	ldd	r24, Y+2	; 0x02
    2a36:	9b 81       	ldd	r25, Y+3	; 0x03
    2a38:	01 97       	sbiw	r24, 0x01	; 1
    2a3a:	f1 f7       	brne	.-4      	; 0x2a38 <main+0x1af2>
    2a3c:	9b 83       	std	Y+3, r25	; 0x03
    2a3e:	8a 83       	std	Y+2, r24	; 0x02
    2a40:	0f c0       	rjmp	.+30     	; 0x2a60 <main+0x1b1a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2a42:	69 89       	ldd	r22, Y+17	; 0x11
    2a44:	7a 89       	ldd	r23, Y+18	; 0x12
    2a46:	8b 89       	ldd	r24, Y+19	; 0x13
    2a48:	9c 89       	ldd	r25, Y+20	; 0x14
    2a4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a4e:	dc 01       	movw	r26, r24
    2a50:	cb 01       	movw	r24, r22
    2a52:	88 8b       	std	Y+16, r24	; 0x10
    2a54:	88 89       	ldd	r24, Y+16	; 0x10
    2a56:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2a58:	89 81       	ldd	r24, Y+1	; 0x01
    2a5a:	8a 95       	dec	r24
    2a5c:	f1 f7       	brne	.-4      	; 0x2a5a <main+0x1b14>
    2a5e:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(delay);
		PORTA &= ~(1<<PA5);
    2a60:	ab e3       	ldi	r26, 0x3B	; 59
    2a62:	b0 e0       	ldi	r27, 0x00	; 0
    2a64:	eb e3       	ldi	r30, 0x3B	; 59
    2a66:	f0 e0       	ldi	r31, 0x00	; 0
    2a68:	80 81       	ld	r24, Z
    2a6a:	8f 7d       	andi	r24, 0xDF	; 223
    2a6c:	8c 93       	st	X, r24
    2a6e:	0c 94 d1 07 	jmp	0xfa2	; 0xfa2 <main+0x5c>

00002a72 <__prologue_saves__>:
    2a72:	2f 92       	push	r2
    2a74:	3f 92       	push	r3
    2a76:	4f 92       	push	r4
    2a78:	5f 92       	push	r5
    2a7a:	6f 92       	push	r6
    2a7c:	7f 92       	push	r7
    2a7e:	8f 92       	push	r8
    2a80:	9f 92       	push	r9
    2a82:	af 92       	push	r10
    2a84:	bf 92       	push	r11
    2a86:	cf 92       	push	r12
    2a88:	df 92       	push	r13
    2a8a:	ef 92       	push	r14
    2a8c:	ff 92       	push	r15
    2a8e:	0f 93       	push	r16
    2a90:	1f 93       	push	r17
    2a92:	cf 93       	push	r28
    2a94:	df 93       	push	r29
    2a96:	cd b7       	in	r28, 0x3d	; 61
    2a98:	de b7       	in	r29, 0x3e	; 62
    2a9a:	ca 1b       	sub	r28, r26
    2a9c:	db 0b       	sbc	r29, r27
    2a9e:	0f b6       	in	r0, 0x3f	; 63
    2aa0:	f8 94       	cli
    2aa2:	de bf       	out	0x3e, r29	; 62
    2aa4:	0f be       	out	0x3f, r0	; 63
    2aa6:	cd bf       	out	0x3d, r28	; 61
    2aa8:	09 94       	ijmp

00002aaa <__epilogue_restores__>:
    2aaa:	2a 88       	ldd	r2, Y+18	; 0x12
    2aac:	39 88       	ldd	r3, Y+17	; 0x11
    2aae:	48 88       	ldd	r4, Y+16	; 0x10
    2ab0:	5f 84       	ldd	r5, Y+15	; 0x0f
    2ab2:	6e 84       	ldd	r6, Y+14	; 0x0e
    2ab4:	7d 84       	ldd	r7, Y+13	; 0x0d
    2ab6:	8c 84       	ldd	r8, Y+12	; 0x0c
    2ab8:	9b 84       	ldd	r9, Y+11	; 0x0b
    2aba:	aa 84       	ldd	r10, Y+10	; 0x0a
    2abc:	b9 84       	ldd	r11, Y+9	; 0x09
    2abe:	c8 84       	ldd	r12, Y+8	; 0x08
    2ac0:	df 80       	ldd	r13, Y+7	; 0x07
    2ac2:	ee 80       	ldd	r14, Y+6	; 0x06
    2ac4:	fd 80       	ldd	r15, Y+5	; 0x05
    2ac6:	0c 81       	ldd	r16, Y+4	; 0x04
    2ac8:	1b 81       	ldd	r17, Y+3	; 0x03
    2aca:	aa 81       	ldd	r26, Y+2	; 0x02
    2acc:	b9 81       	ldd	r27, Y+1	; 0x01
    2ace:	ce 0f       	add	r28, r30
    2ad0:	d1 1d       	adc	r29, r1
    2ad2:	0f b6       	in	r0, 0x3f	; 63
    2ad4:	f8 94       	cli
    2ad6:	de bf       	out	0x3e, r29	; 62
    2ad8:	0f be       	out	0x3f, r0	; 63
    2ada:	cd bf       	out	0x3d, r28	; 61
    2adc:	ed 01       	movw	r28, r26
    2ade:	08 95       	ret

00002ae0 <_exit>:
    2ae0:	f8 94       	cli

00002ae2 <__stop_program>:
    2ae2:	ff cf       	rjmp	.-2      	; 0x2ae2 <__stop_program>
